<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">https://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <stringProp name="HTTPSampler.domain">https://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-122">
            <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-149">
            <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-back.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/harvey-chatbot</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-181">
            <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-back.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/harvey-chatbot</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-182">
            <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-back.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/harvey-chatbot</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query_string&quot;:&quot;Hi\n&quot;,&quot;memory_messages&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJhcGk6Ly8xYjNiZGM1Yy0yZjRhLTQyNzYtOWVjOC05OGFmMzYxMTU2MjEiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9mZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEvIiwiaWF0IjoxNzMwODk0OTIzLCJuYmYiOjE3MzA4OTQ5MjMsImV4cCI6MTczMDg5OTE4MywiYWNyIjoiMSIsImFpbyI6IkFWUUFxLzhZQUFBQWU5cDVOandPUHM5eDNIZFpYblozak52T3NENVF4YlBnQjFEYklGQkFtTTMvZHNHcUFSZUtHN2g3WEdZTlp0VCtRNWk4S1Z1UFRaMm1HWHhFODRIb3R5OHpNVHQ4OU5TaXh5WG9mN0wxUEdRPSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwaWQiOiJjYzM3N2MxNC1hNDg3LTQ1NzItOGI4OC01MTIxZGQ2NTQwZjMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6Ik1hbGkiLCJnaXZlbl9uYW1lIjoiQXJjaGFuYSIsImlwYWRkciI6IjIwLjI0Mi4xODUuMzkiLCJuYW1lIjoiTWFsaSwgQXJjaGFuYSIsIm9pZCI6ImZhMzYzZDg3LWUzYTgtNGM3OS1hM2EyLTYwOWQ0ODFkYWExYyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS03NDMxMTEzNTktMjc0MTU5Nzg2NS0yNjIzNTg5MDk1LTEyODczNiIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4VnpjT3h0S0wzWkNuc2lZcnpZUlZpRmJBS1JiQUEuIiwic2NwIjoidXNlcl9pbXBlcnNvbmF0aW9uIiwic3ViIjoiZFJkdkR5aWVQRmdxZlg4SnNPaTliQW93LWMyQVhQZHljeUhSaG1FZUw4OCIsInRpZCI6ImZkYjk3YWVkLTI0ODgtNDc2Ny1iMGVhLWE2MDdlNzIwMDZmMSIsInVuaXF1ZV9uYW1lIjoiQXJjaGFuYS5NYWxpQGhiZnVsbGVyLmNvbSIsInVwbiI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1dGkiOiJtbENDRmZobTZFU1l0VWhHdDdFQUFBIiwidmVyIjoiMS4wIn0.b6VmaViCcTyyxTA_e0gnde0Ao_EwMM3rao91dJjlYfUY6i2gc7lBVcFT5oiro5QvAp7fnxtyJdXjBMOP2EJ78GAPxXyh5V8qUUELXkO46SmpuT2Xe_59d0i1hFkq5C7L5J90kISAAIC3_7oM0AAfgSyqwC9mRT0b-ioQufvNmwi-lVcyXDTyg-_vWDemTuhHQa2alF7nPz11cAZipcPFPF2gG4lzmH6HEUZiTbbXWdZLjX3D-Q7_01i4VmAgYyVig9a8_zJstHfe1_SK2VwV5BlAE1DGlb8qtxoto-N5M_0vZDxfVHyZHKfV_F0ve3Nedm-GSuQinr5jzr76phtesg</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">9090</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">Query1</stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\malia01\OneDrive - H.B. Fuller Company\Desktop\apache-jmeter-5.6.3\logs\recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https://autologon.microsoftazuread-sso.com/fdb97aed-2488-4767-b0ea-a607e72006f1/winauth/</stringProp>
              <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
              <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
              <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
            </elementProp>
          </collectionProp>
          <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
        </AuthManager>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="AppLaunch">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-120" enabled="false">
            <stringProp name="HTTPSampler.domain">www.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/complete/search</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client</stringProp>
                  <stringProp name="Argument.value">chrome-omni</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="gs_ri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gs_ri</stringProp>
                  <stringProp name="Argument.value">chrome-ext-ansg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="xssi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">xssi</stringProp>
                  <stringProp name="Argument.value">t</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="q" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">q</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="oit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oit</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="gs_rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gs_rn</stringProp>
                  <stringProp name="Argument.value">42</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sugkey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sugkey</stringProp>
                  <stringProp name="Argument.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CKe1yQEIkrbJAQiktskBCKmdygEIruDKAQiSocsBCIWgzQEIusjNAQj7vs4BCIDDzgEIu8XOAQjRxc4BCNHHzgEIh8nOAQj5yc4BCJjLzgEIxszOAQiPzc4BCMXNzgEIn87OAQjSzs4BGPbJzQEYnbHOARjEvc4B</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-121" enabled="false">
            <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;HTTP&quot;,&quot;request_age_ms&quot;:77096,&quot;request_elapsed_ms&quot;:368,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;${scheme}://beacons.gcp.gvt2.com/domainreliability/upload&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-122">
            <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-126">
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">manifest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-125">
            <stringProp name="HTTPSampler.domain">graph.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1.0/me/photo/$value</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6ImktTDBDSUNSR216eC1paE1ycWtGNVJ0eDRCNGx3Zy1YNGJDSW5iU25CcnciLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9mZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEvIiwiaWF0IjoxNzMwODk0OTIzLCJuYmYiOjE3MzA4OTQ5MjMsImV4cCI6MTczMDkwMDQ0OSwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFWUUFxLzhZQUFBQTBYbjIxZzlhTEE1S3JGL0lqSXU4SkRBWVFvZXk4QzdiSng3Vjdld2gydXdlTElhZGJ0L1Y2L0tyTHBONitDVXhOUEZYamFFRHJFSjdiTzVIMFpycVpnZjFWYW9tS09RekhidWw4Y0Q0QndZPSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoibHdhLWdsb2JhbC1lYXN0dXMtaGJmLWFpMS11aSIsImFwcGlkIjoiY2MzNzdjMTQtYTQ4Ny00NTcyLThiODgtNTEyMWRkNjU0MGYzIiwiYXBwaWRhY3IiOiIwIiwiZmFtaWx5X25hbWUiOiJNYWxpIiwiZ2l2ZW5fbmFtZSI6IkFyY2hhbmEiLCJpZHR5cCI6InVzZXIiLCJpcGFkZHIiOiIyMC4yNDIuMTg1LjM5IiwibmFtZSI6Ik1hbGksIEFyY2hhbmEiLCJvaWQiOiJmYTM2M2Q4Ny1lM2E4LTRjNzktYTNhMi02MDlkNDgxZGFhMWMiLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtNzQzMTExMzU5LTI3NDE1OTc4NjUtMjYyMzU4OTA5NS0xMjg3MzYiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzIwMDNEOTJENjk5QSIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4UU1BQUFBQUFBQUF3QUFBQUFBQUFBQmJBS1JiQUEuIiwic2NwIjoiZW1haWwgb3BlbmlkIHByb2ZpbGUgUHJvZmlsZVBob3RvLlJlYWQuQWxsIFVzZXIuUmVhZCIsInN1YiI6IkpCUU4yZ2kwcXhKa1plNW1nMVRoZHF3SW5fZExuSzEtWF9OYWJXcS1zdjgiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiTkEiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoiRGxZTUhRd1lJa3laTU43dGpyV1NBQSIsInZlciI6IjEuMCIsIndpZHMiOlsiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il0sInhtc19jYyI6WyJDUDEiXSwieG1zX2lkcmVsIjoiMSA2IiwieG1zX3NzbSI6IjEiLCJ4bXNfc3QiOnsic3ViIjoieFVKVDFXM2VFbWdfSzI1aHg3aG5EU0QwMDUxLXJQUS1TSjB2ZElvUXVBUSJ9LCJ4bXNfdGNkdCI6MTMxNzY4MzIyOH0.FOTOUoXFnuP6cnn93TBblbjjXKmOkJ8iza3RAyEd8slK0AcS3-v5tx9RgI2LGRIxjrUAbUrCRmJpKqKltcEd1bTjUoxNxTilIYn72ENmagjKSwhSK-Jkbh93sZlJFpcudEVd82Yhiln0RxoOekjKu9ts581XJVsMdrl0NhT9L4t8znCnDmDwteBYPW11NI6vaasSfHAN_QYlZhQ7Wr0rvYS-NCwutPEHntJNMSKWmmlQYTAJksamxiAKymclEmKhSCIatADdXyeStowtfwi8xWt1mLD_-JwRJMrF1VsncO_Mk8yizgUbSMLbk1VJ2C5OY160NcmHjMXJUKPtWaaPfg</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-128">
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            <stringProp name="HTTPSampler.domain">login.windows.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/authorize</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">code id_token</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/.auth/login/aad/callback</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">cc377c14-a487-4572-8b88-5121dd6540f3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid profile email</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_mode</stringProp>
                  <stringProp name="Argument.value">form_post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">51f48716667b4843806e451e3040a58c_20241106121920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">redir=%2Fmanifest.json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">manifest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-129">
            <stringProp name="HTTPSampler.domain">officeclient.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/config16Processed</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lcid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lcid</stringProp>
                  <stringProp name="Argument.value">1033</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="syslcid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syslcid</stringProp>
                  <stringProp name="Argument.value">1033</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="uilcid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uilcid</stringProp>
                  <stringProp name="Argument.value">1033</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="crev" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crev</stringProp>
                  <stringProp name="Argument.value">3a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="services" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">services</stringProp>
                  <stringProp name="Argument.value">HomeRealmDiscovery,GetFederationProvider,GetIdentityProvider,ODCUserConnectedServices,OneDriveWebServiceUrl,MsGraphBase</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Office-Application" elementType="Header">
                  <stringProp name="Header.name">X-Office-Application</stringProp>
                  <stringProp name="Header.value">110</stringProp>
                </elementProp>
                <elementProp name="X-Office-Platform" elementType="Header">
                  <stringProp name="Header.name">X-Office-Platform</stringProp>
                  <stringProp name="Header.value">Win32</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="X-Office-Version" elementType="Header">
                  <stringProp name="Header.name">X-Office-Version</stringProp>
                  <stringProp name="Header.value">24.132.0701.0003</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Microsoft SkyDriveSync 24.132.0701.0003 ship; Windows NT 10.0 (22631)</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-119">
            <stringProp name="HTTPSampler.domain">teams.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�Z�o&#x1d;YZ/&apos;��ر�8q&#x1e;Ӄ�c�Q�������zn���f���{�43j�NU��&gt;q=���G�[B,�z��&#xd;�&#x0;�&#x2;�i`&#x3;&#xb;$X�m�&#xd;l�&#x5;{�&#x1;�&#x2;�Ω��t�n�{���tS���9�;��|�g�媰���$&#xd;
[&#x18;&#x5;I#�}&#x1c;�&amp;�,&#x1d;�ǿ�����&#x17;���{_,D�&#x1e;B�����&quot;VT&#x11;ے, �1&#xd;$&#x19;X�&#x7f;�������12�I�8J&quot;/�ԣ�&#x13;ň.���+&#x12;�&#x19;�+���#!�N&#x1f;N�q��&amp;��&#x7f;�,�&amp;&#x8a;�h��l�W���g`�&#x14;l�А��,��FGIu&#x5;&apos;�i��N&#x1f;O�}v��~1)&#xd;
U�*I�,r�O&amp;Ǿ�&#x15;$|J&#xf;���&#x3;I�t�*�&#x2;�H�ZU%���V&#x17;���:0r{7&#xc;p�c쒛��~&#x18;&#x1d;��ier���&#x1b;�Z|�&#xf;_&#x7f;��oԛ�\5`�����)4&#x4;Ք뼠�&amp;�&#x18;�U�4k&#xd;
/�YS&#x15;��X=�����m&#x8;��7�U^[5^��l��&#x17;&#x2;���Zk��&#x8;�А��&#x1f;�&#x14;&apos;�&#xb;�,p��	R��&amp;p����tur��=�����Ng=��j�&apos;0�LQ��&#x4;��!��&#x6;&#x7;[&apos;&#x1d;&#x18;&#xb;P�Ǉܓ�X���i�j�&#x13;ea��1��&#x19;&#x18;e��%�&#x10;�+&#x1c;&apos;�Or�D�._���&#x11;�&#x13;�&#x1e;�đ�[�q�Y�����6��E��&#x4;���2�,�&#x4;]1Ds� 	��+���MS&#x14;U�.�*{5TIQy��&#xb;��)��SB�*�!Q�Q&#x10;&#x14;Е�w�WdI&#x11;4� j9A���tF���Iz��Z&#x10;&#x14;8���C�&#x14;&#x19;�(9&#x14;EY�3��R���(���̪�&#x1b;�Gf&apos;T�NL��z�&#x1;�������p&apos;�AI)&#x15;�&#xf;��&#x1d;ʕ��p&#xc;��&#x3;�EC3�&#xb;S�E��F��c0&#xb;&#x7;�D&#x1;&amp;wc���?�6�0k���&#xd;&#x14;�3���&#x6;&#xe;�,�&#x1e;�&#x6;���[&#xf;S�܊&#x13;�����߱��$)&#xe;x&#x12;���U�)~#r��]�qI~�&#xe;I�&#x5;�b���P&#x1c;X������p�IO,&apos;&#xd;
&#x2;&#x14;��&#xf;&#x11;�z&#x1a;uph�в��ߎ��]+�g=N_��(��&#xb;��&#xd;
鴞(��t�ێ#&apos;&#x1f;��&#x8;&#x11;&#x4;?��?�&gt;J�(&#xe;�]rM1�_��c\�ҽ�&#x4;�M&#x14;t`�6@�&#x5;=KX�&#x11;�a[&#x3;�):o��呎&#x1d;,&#x19;�#�*�No���IR�!&#x1c;��I�&#x18;��ǚ�=*&#x11;;T5�R�܌b.I�(&#x8;`�����M�&#x4;&#xe;Ⱦ&#x4;&#x381;�(�Y&#x15;�����X407[��j��!�K|D~c&#x10;�x��O�;Y&#x1e;4��D��h�Gڌ\�&#x13;�*�&#x7f;���!�B�?�,	��bȺP�Էw+?�HUCX{�mov���&#xb;&#xb;��s��&#xd;
&gt;$&#xe;f�&#x17;1�a&#x1c;3�&#x1d;�n&#x1b;sOFG�cN�2K&#xb;�bVU��^&#x1f;&#x12;�&#x19;��&#xd;&#x14;� ��}��&#x4;�v&#x1f;��&#xd;&#xf;�	&#x1e;&#x18;�JVQ@�&#x13;Rf ���h�A&#x7f;^�?F3���fϽt�&#xf;hE)�7q&#x10;�&apos; ����&#x7f;���&#x6;NZl[�Ca������&#xe;X&amp;7?Jo�gdn{gke�&#x7b2;&#x1a;/[����f��m&#x1c;�&#x3;�Ί&#xf;�ϔys-W&#x7;�Y/��@	q*;8tq\Y�!�ċ�o2�M�u�&#x8;�&#x11;l&lt;��p�Y۰��&#x12;&#x1a;&#x1c;�o&#x1d;d8&gt;�:(F,M&apos;&#x16;�\4K�ϡ�o�8�b+E�L�&#x7;���&#x13;�[&quot;:�@8`�dR�M�T$Q�&#x8;9&#x2;&#x0;�=Nɍ�&#x1d;B�qsCð&#x3;��/=�&#x1d;&#xd;
�I&gt;�9&#x7;&#x19;�q+��a�� Q��{�&#x5;%&#x10;m�$g�I��P�����/�&quot;fq3�&#x4;�3��GGd&#x2;&#xc;{&#x1f;&#x4;u�K�b(	������&#xd;
��&#x7f;�-����|�v�M;�A����%�-&#xb;�u�,&#x1;K&#x1f;O�&#xc;s��&#x1f;�O�C��k���&#x19;̳�Eh��c`��m&#x7;CnC��-ڼ&#xd;
���Ȇ.Q��gEq���E6U&#x12;&#x1d;�Um^6=&#x17;B�����:��bW�TӃ\V��$V�94tz�_��=6&#x14;$`$�e|��W&#x15;�k&quot;&#x16;1Fb!&#x1d;�L�P[�&#xd;
���i&apos;Y^Z�#&#x18;�&#x6;��F,]T!�,y�m�&#x8;B��&#x18;P����&#x2;F&lt;�&#x4;&#x1d;C�&#x16;4O�f�&#x6;�O]+��&apos;��W���&#x8;�������0&#x19;WMM�*&#x3;�&#x10;(�&#x4;&#x12;�&#x5;)��|��|e��8�R&#x2;&amp;��&#x6;x�𼠵DiYT�&#x5;8� ��PJ&#x2;��W&quot;�&#x1c;y�D� ��&amp;wVj�OV�W&gt;Y�m�&#x14;&amp;p��.��^&#x1c;���&#xb;�w���C&#x13;�8D9��l�j��U�&#x12;��T�*@&quot;t%��=Y�&#xd;Z�`CA�&#x8;i&#x5;��{\�ha�{�4&gt;�&#x17;�WV��p�´�&#xc;���I��&amp;n�򒛦y8�mZ��Յ�[&#x7f;�u���7ڻ&#x7;&#x1f;��k-3����n&#xb;���y����&#xe;�&#x7f;��z���&#xb;ܽ��۴T�ޏ��X&#x15;g��I���Wk��Ӡ���&#x1a;��&#x7;ڶ�y}$&#x8;�$n�/&gt;\��&#x0;�Nu�X�_o���mr&#xf;z#&#x10;��&#x4;�b���Rwp��&#xb;ĕ��4���m&#x1c;�&#x18;���.�+�b�����}�粣z��A��N�&#xf;}�&#x1b;0��um�B���z&#x13;A&#x11;&#x6;�&#xc;&#x1;����$@�	��,&#x4;��&#x1e;f�a�b2o�� �4&amp;O��o�SٶEl+��l��%��@���S�&#x3;�U�=iV,���s�u�&#x1e;��&#x7f;&#x14;�f�L��p&amp;G�&#x6;��&#x1e;S2&#x15;H?{V��!w^��Q&#x12;�3�d&#x1;&#x1b;e�0�&#xe;��&#x13;?����&gt;M�S&#x2;-��`y����&#xb;W�C&#x2;�&#x1e;�ɠڎ�[|��A���&#x1d;C&#xd;fe1!�p%�\tL�$0�[4T!�U�&#x14;��g��ҥ���n��$lِ{3;�&#x1d;&#xe;5�7T�����&lt;M�3��&#x11;�$4@��o*O�Uv��a��kl�nn&#x12;��&#xd;
˿�41qSp,���:C&amp;�8c&#x10;�&amp;&#xc;��a��&#x5;�M&#x0;&#x15;��+.ړT�y�@nw JU(&#x1;��Β��&#xd;
p�)&#x14;2&#x3;ĨI=/��ܭ���g��0/m�7��R&#x3;{�͓V&#x15;��iP#�S����x��Q���J~9�����t���1�&#x7;�&gt;�L&#x16;l�rE86&#x4;A&#x17;&#x14;�+�&#x6;qy�PZ&#x6;8��ǲ�z:�@Ѧ�m&#x1b;b�f&#xb;� i��������*��k���2l&#x1b;�&amp;I����@.�M�N��&#xb;��ӏ�I�W&#x6;H��&#x0;�&amp;D:�^�����/��_]�&#x6;�&#xb;2.i���e/.N��t���&#x18;%��&#x18;t?&#x1e;Fp&#xd;��\���̠#q�^&#x1c;&#x5;��	w�Y�#��Iri���&#x1c;	�@�\g�|�&#x0;D&#x1e;��&#xc;�4�]R&#x14;���P�&apos;�K�\߳&#x1;&quot;an��I@	=�7�V�)�&#x7;}�&#x1d;�&gt;J(u.�&amp;�Z0B�[�V�&#x13;&#xc;����,r@�&apos;OP^&#x1b;;���P�Ge��N�Kc&#x14;&amp;��d&#x1d;?��&#x4;,�tT��4��&#x10;��������K�)٦,xp��f�%ʠ~C��U���).�&#x2;�=*rO�۾fN|&#x2;�&#x18;tR(��(&#x1c;�&#x1a;�NL&#xd;����UA���$�k�e&#xb;��,=&#x16;��&#x7;��&#x17;&#x530;f�&amp;�zrd�����ة��6�遼�~&#x15;��	&#x3;%&#x19;8&#xd;
Xέ�&#x1d;�\�p�z�vlQSm��&#x5;�&#x3;y���M�3yMq4�4�A��݆&#xb;C\kSE���f���9.�U��pT^�*4���&#x2;&#x4;M�Q�XS�Uj&#x1d;`&#x10;&quot;�OH���&#x10;մ�ӟ����X��d&#x1f;Wְ�&#x1f;=�ԡ�&#xc;�R~&#x7f;�&#x7f;�&amp;�PL�)&#xd;��7�&quot;��Y�r	r�&#x4;e&#x14;��&#xe;���:&gt;��2&#x15;&#x1d;�d���(�:&lt;r��g&#xb;�&#x17;&#x14;��:��-&#x1a;��_R��?4N�&#x1b;��&#x10;q�&#x19;G1c&#xe;&#x6;��9B�&#x3;�b��]J����v\�t5�hy�&#x4;&#xf;&#x7f;��M&#x3;���%��q�X���V�?FZ�&#x7f;�˿�j�&#x7f;k-�?��Z��U���c&#x7f;ձ���_u�:��g;�W������K�B�;Z�-�3�3��hg������&#x3;��?&#x1f;茌��u&lt;��&#x1e;�-��&#x5;�&#xe;��W��xT�!j�-���C�|w�U��&gt;i�����&#x17; g�&#xb;��&quot;&lt;�R� �&#xf;z�`&#x14;&#xf;r9$�&#x14;�N����&#xf;��K������4SbV&quot;*&#x15;2?&#x8;*F�{%�g�y{�{��1v2��U����~���eaq&#x1;{&#xb;�?�x!]X^0��#����&#x12;��&amp;&#xc;�/,K�.�&#x10;��z��&#x1c;��s&#x11;$��Q&#x8;�*���v�L���&quot;�3��(��@%&#x7;�g.i��I8�&#x1c;��&#x7;��&#x17;B���&#x10;�@r�`i&#x10;&#x12;��!�&#xb;��&#x12;��~�7��F�b?����&gt;q�]&#x0;��F&#x17;�:�射�&#xb;������&lt;&quot;�E�0D&#x17;���e`&#xe;�&#xb;�&#x1c;&gt;�v���X�\A��&#x2;�*;�&#x5;&#x15;�ͰE&#x19;��-�&#xf;9�.��i�g��e��=�&#x5;�T�7�,)&#xd;
�&lt;��rѱ�&#xe;½&#xb; �G�3���&#x0;&#x18;�&quot;&#xc;l5&#x12;&#x1f;�0Z&#x14;x��_&#xd;�T�kتG0��HT&#x18;�&#x4;�0�&#x1c;�h&#x17;a2�Ͱ|TS&#x1b;�B�&#x4;w.DQ&#x15;&#xf;˨�&#x1a;�r���&#x4;�ѕ&#x15;-�&#x4;ʖ$�B�b���&#xb;Q�ov�D&#x1;�4�3�R�i�&#x1e;v&#x0;��Ţ&#x1f;-R&#x14;��B&#x4;)&#x1d;U�T�B&#x14;�O�,�&#x1;M-h9T���O{�{�赅8���Ы�6&#x13;4&lt;�-M��]���&#x1a;&#x14;G�Iy�W����W��T��7\��Jխ}�b���&#x1b;���&#xb;�7�L5�D�&#x1e;&amp;m�ё�5?����m&#x7f;���&#x1d;����:����&#x2;f~��Z���x�U�W�U�&#x1;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upload-Time" elementType="Header">
                  <stringProp name="Header.name">Upload-Time</stringProp>
                  <stringProp name="Header.value">1730895251147</stringProp>
                </elementProp>
                <elementProp name="APIKey" elementType="Header">
                  <stringProp name="Header.name">APIKey</stringProp>
                  <stringProp name="Header.value">faab4ead691e451eb230afc98a28e0f2-4089b390-5e4a-4a54-ac5c-6be4f2ea9321-7247</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Expect" elementType="Header">
                  <stringProp name="Header.name">Expect</stringProp>
                  <stringProp name="Header.value">100-continue</stringProp>
                </elementProp>
                <elementProp name="SDK-Version" elementType="Header">
                  <stringProp name="Header.name">SDK-Version</stringProp>
                  <stringProp name="Header.value">EVT-Windows-C++-ECS-3.8.32.1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-132">
            <stringProp name="HTTPSampler.domain">odc.officeapps.live.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odc/v2.1/federationprovider</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="domain" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">domain</stringProp>
                  <stringProp name="Argument.value">fdb97aed-2488-4767-b0ea-a607e72006f1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-OneAuth-AppName" elementType="Header">
                  <stringProp name="Header.name">X-OneAuth-AppName</stringProp>
                  <stringProp name="Header.value">Teams Emblem</stringProp>
                </elementProp>
                <elementProp name="X-Office-Application" elementType="Header">
                  <stringProp name="Header.name">X-Office-Application</stringProp>
                  <stringProp name="Header.value">107</stringProp>
                </elementProp>
                <elementProp name="X-Office-Platform-Version" elementType="Header">
                  <stringProp name="Header.name">X-Office-Platform-Version</stringProp>
                  <stringProp name="Header.value">10.0.22621.3958</stringProp>
                </elementProp>
                <elementProp name="X-Office-Platform" elementType="Header">
                  <stringProp name="Header.name">X-Office-Platform</stringProp>
                  <stringProp name="Header.value">Win32</stringProp>
                </elementProp>
                <elementProp name="X-Office-Version" elementType="Header">
                  <stringProp name="Header.name">X-Office-Version</stringProp>
                  <stringProp name="Header.value">24277.3507.3205.5228</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="X-CorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-CorrelationId</stringProp>
                  <stringProp name="Header.value">6a72ea3f-6949-49ce-8832-c40ca1a53fe3</stringProp>
                </elementProp>
                <elementProp name="X-OneAuth-Version" elementType="Header">
                  <stringProp name="Header.name">X-OneAuth-Version</stringProp>
                  <stringProp name="Header.value">3.5.4</stringProp>
                </elementProp>
                <elementProp name="X-OneAuth-AppId" elementType="Header">
                  <stringProp name="Header.name">X-OneAuth-AppId</stringProp>
                  <stringProp name="Header.value">com.microsoft.teams</stringProp>
                </elementProp>
                <elementProp name="Enlightened-Hrd-Client" elementType="Header">
                  <stringProp name="Header.name">Enlightened-Hrd-Client</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; OneAuth)</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-133">
            <stringProp name="HTTPSampler.domain">odc.officeapps.live.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odc/v2.1/federationprovider</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="domain" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">domain</stringProp>
                  <stringProp name="Argument.value">fdb97aed-2488-4767-b0ea-a607e72006f1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-OneAuth-AppName" elementType="Header">
                  <stringProp name="Header.name">X-OneAuth-AppName</stringProp>
                  <stringProp name="Header.value">Teams Emblem</stringProp>
                </elementProp>
                <elementProp name="X-Office-Application" elementType="Header">
                  <stringProp name="Header.name">X-Office-Application</stringProp>
                  <stringProp name="Header.value">107</stringProp>
                </elementProp>
                <elementProp name="X-Office-Platform-Version" elementType="Header">
                  <stringProp name="Header.name">X-Office-Platform-Version</stringProp>
                  <stringProp name="Header.value">10.0.22621.3958</stringProp>
                </elementProp>
                <elementProp name="X-Office-Platform" elementType="Header">
                  <stringProp name="Header.name">X-Office-Platform</stringProp>
                  <stringProp name="Header.value">Win32</stringProp>
                </elementProp>
                <elementProp name="X-Office-Version" elementType="Header">
                  <stringProp name="Header.name">X-Office-Version</stringProp>
                  <stringProp name="Header.value">24277.3507.3205.5228</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="X-CorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-CorrelationId</stringProp>
                  <stringProp name="Header.value">a69a51b1-3252-43e3-a567-51681caad3a0</stringProp>
                </elementProp>
                <elementProp name="X-OneAuth-Version" elementType="Header">
                  <stringProp name="Header.name">X-OneAuth-Version</stringProp>
                  <stringProp name="Header.value">3.5.4</stringProp>
                </elementProp>
                <elementProp name="X-OneAuth-AppId" elementType="Header">
                  <stringProp name="Header.name">X-OneAuth-AppId</stringProp>
                  <stringProp name="Header.value">com.microsoft.teams</stringProp>
                </elementProp>
                <elementProp name="Enlightened-Hrd-Client" elementType="Header">
                  <stringProp name="Header.name">Enlightened-Hrd-Client</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; OneAuth)</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-135">
            <stringProp name="HTTPSampler.domain">odc.officeapps.live.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odc/v2.1/federationprovider</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="domain" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">domain</stringProp>
                  <stringProp name="Argument.value">fdb97aed-2488-4767-b0ea-a607e72006f1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-OneAuth-AppName" elementType="Header">
                  <stringProp name="Header.name">X-OneAuth-AppName</stringProp>
                  <stringProp name="Header.value">Teams Emblem</stringProp>
                </elementProp>
                <elementProp name="X-Office-Application" elementType="Header">
                  <stringProp name="Header.name">X-Office-Application</stringProp>
                  <stringProp name="Header.value">107</stringProp>
                </elementProp>
                <elementProp name="X-Office-Platform-Version" elementType="Header">
                  <stringProp name="Header.name">X-Office-Platform-Version</stringProp>
                  <stringProp name="Header.value">10.0.22621.3958</stringProp>
                </elementProp>
                <elementProp name="X-Office-Platform" elementType="Header">
                  <stringProp name="Header.name">X-Office-Platform</stringProp>
                  <stringProp name="Header.value">Win32</stringProp>
                </elementProp>
                <elementProp name="X-Office-Version" elementType="Header">
                  <stringProp name="Header.name">X-Office-Version</stringProp>
                  <stringProp name="Header.value">24277.3507.3205.5228</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="X-CorrelationId" elementType="Header">
                  <stringProp name="Header.name">X-CorrelationId</stringProp>
                  <stringProp name="Header.value">538c8b8f-b5e8-4fd4-a3e2-4275e07883a6</stringProp>
                </elementProp>
                <elementProp name="X-OneAuth-Version" elementType="Header">
                  <stringProp name="Header.name">X-OneAuth-Version</stringProp>
                  <stringProp name="Header.value">3.5.4</stringProp>
                </elementProp>
                <elementProp name="X-OneAuth-AppId" elementType="Header">
                  <stringProp name="Header.name">X-OneAuth-AppId</stringProp>
                  <stringProp name="Header.value">com.microsoft.teams</stringProp>
                </elementProp>
                <elementProp name="Enlightened-Hrd-Client" elementType="Header">
                  <stringProp name="Header.name">Enlightened-Hrd-Client</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; OneAuth)</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-134">
            <stringProp name="HTTPSampler.domain">officeclient.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/config16Processed</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="lcid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lcid</stringProp>
                  <stringProp name="Argument.value">1033</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="syslcid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syslcid</stringProp>
                  <stringProp name="Argument.value">1033</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="uilcid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uilcid</stringProp>
                  <stringProp name="Argument.value">1033</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="crev" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crev</stringProp>
                  <stringProp name="Argument.value">3a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="services" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">services</stringProp>
                  <stringProp name="Argument.value">HomeRealmDiscovery,GetFederationProvider,GetIdentityProvider,ODCUserConnectedServices,OneDriveWebServiceUrl,MsGraphBase</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Office-Application" elementType="Header">
                  <stringProp name="Header.name">X-Office-Application</stringProp>
                  <stringProp name="Header.value">110</stringProp>
                </elementProp>
                <elementProp name="X-Office-Platform" elementType="Header">
                  <stringProp name="Header.name">X-Office-Platform</stringProp>
                  <stringProp name="Header.value">Win32</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="X-Office-Version" elementType="Header">
                  <stringProp name="Header.name">X-Office-Version</stringProp>
                  <stringProp name="Header.value">24.132.0701.0003</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Microsoft SkyDriveSync 24.132.0701.0003 ship; Windows NT 10.0 (22631)</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-136">
            <stringProp name="HTTPSampler.domain">substrate.office.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/search/api/v1/userconfig</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-137">
            <stringProp name="HTTPSampler.domain">substrate.office.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/KnowledgeGraph/api/v1.0/Capabilities?provider=Yggdrasil</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type,x-accept-language,x-anchormailbox,x-clientcorrelationid,x-clientrequestid,x-routingparameter-sessionkey,x-scenario,x-spdf-testfeedback</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-139">
            <stringProp name="HTTPSampler.domain">substrate.office.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/search/api/v1/userconfig</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;requestedConfigTypes&quot;:[&quot;Unfurling&quot;],&quot;culture&quot;:&quot;en-us&quot;,&quot;uiCulture&quot;:&quot;en-us&quot;,&quot;cvid&quot;:&quot;aef8965e-95c3-43fa-a684-36bb44e44a83&quot;,&quot;timeZone&quot;:&quot;(India Standard Time)&quot;,&quot;timeZoneOffsetInMinutes&quot;:330,&quot;scenario&quot;:{&quot;name&quot;:&quot;genericloader&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IlN6T0R2M1Byc0RwdGhIcXJxWDBDSExhZnRoenhYYzFCaWZMMlI3TzlrVEkiLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJodHRwczovL3N1YnN0cmF0ZS5vZmZpY2UuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZmRiOTdhZWQtMjQ4OC00NzY3LWIwZWEtYTYwN2U3MjAwNmYxLyIsImlhdCI6MTczMDg5NDg3MywibmJmIjoxNzMwODk0ODczLCJleHAiOjE3MzA4OTk1NjgsImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBVlFBcS84WUFBQUExcGlZVGU3UkhmaTMrZWhjRmhVeXpVSHAwUXI3VEJ4UFp1WHB0Tk8xditPdndjZlkvTktlQW5rcjZJUzd1QkVqTzhTZmFFaU1nVG9BTWdSdUp4UHllZWowOGdaRm0zWXhzakFVQUpXN0JQdz0iLCJhbXIiOlsicHdkIiwicnNhIiwibWZhIl0sImFwcGlkIjoiMWZlYzhlNzgtYmNlNC00YWFmLWFiMWItNTQ1MWNjMzg3MjY0IiwiYXBwaWRhY3IiOiIwIiwiZGV2aWNlaWQiOiI3MDYyMjRhNy1jMGFhLTRlZTQtOWE1Zi01YWUwMzQwODdlYjUiLCJmYW1pbHlfbmFtZSI6Ik1hbGkiLCJnaXZlbl9uYW1lIjoiQXJjaGFuYSIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjIwLjI0Mi4xODUuMzkiLCJuYW1lIjoiTWFsaSwgQXJjaGFuYSIsIm9pZCI6ImZhMzYzZDg3LWUzYTgtNGM3OS1hM2EyLTYwOWQ0ODFkYWExYyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS03NDMxMTEzNTktMjc0MTU5Nzg2NS0yNjIzNTg5MDk1LTEyODczNiIsInB1aWQiOiIxMDAzMjAwM0Q5MkQ2OTlBIiwicHdkX3VybCI6Imh0dHBzOi8vcG9ydGFsLm1pY3Jvc29mdG9ubGluZS5jb20vQ2hhbmdlUGFzc3dvcmQuYXNweCIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4WUZ2RmV3NjhyMUhzVy1mc3Naa0lQbGJBS1JiQUEuIiwic2NwIjoiRmlsZXMuUmVhZFdyaXRlIEZpbGVzLlJlYWRXcml0ZS5TaGFyZWQgTm90ZXMtSW50ZXJuYWwuUmVhZFdyaXRlIE9mZmljZUZlZWQtSW50ZXJuYWwuUmVhZFdyaXRlIFBlb3BsZVByZWRpY3Rpb25zLUludGVybmFsLlJlYWQgUGxhY2UuUmVhZC5BbGwgUGxhY2UuUmVhZFdyaXRlLkFsbCBTaWduYWxzLlJlYWRXcml0ZSBTaWduYWxzLUludGVybmFsLlJlYWRXcml0ZSBTdWJzdHJhdGVTZWFyY2gtSW50ZXJuYWwuUmVhZFdyaXRlIFRhc2tzLlJlYWRXcml0ZSBVc2VyLlJlYWRXcml0ZSIsInN1YiI6IjlWY3A1aTZpYnFLakRPeGN2TzVpdHB0S0VEdGp0NERSdG9FdVhLMlktTEkiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoiMnM3SGhueXgway15Z01ZaG1fU3pBQSIsInZlciI6IjEuMCIsIndpZHMiOlsiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il0sInhtc19hdWRfZ3VpZCI6ImVjMTU2ZjgxLWYyM2EtNDdiZC1iMTZmLTlmYjJjNjY0MjBmOSIsInhtc19pZHJlbCI6IjEgMzAifQ.Wrao5MVTe2e1YljQ2utgzzs5QePPBJE07IFT9qe0XglfiYgYr3UwwlgxITdryheckstDZHwySCbgAUgtz8E_eOrV0Xqc-OhEtuVz1V4G2E2dC_TgVuL1EIDLhRv9tbFDru_3D4GptCt-9yQidLqd4vbwGcWIa77XmAvMUd430AniCVsiVWAgl5dodoer8FO1R88KNA6adZX-xIon5uvpsFUXpyUuoHTPdYmOyjNBu8XBqjWr2HNBmqksDfZKdIJUN8oHvgazOzrXBAYmaM_v4FQze2bA-HbOVYqkpvq8ERQoOfszaRBWh4sczGmiNn7hrMyyxbb_xiApFKzVr2koKA</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Microsoft Edge&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;130&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-138">
            <stringProp name="HTTPSampler.domain">go.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="check" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">check</stringProp>
                  <stringProp name="Argument.value">1730895271223</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">71b21d26-3aa4-44c1-8e81-dc4b39c8996b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">505cfaf5-8877-4464-86af-a88c091c2b4b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2024.39.01.12&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;49/24100324916&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Query1">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AppLaunch-144">
            <stringProp name="HTTPSampler.domain">pub-ent-ussc-02-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v4/c</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2024.39.01.12&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;49/24100324916&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">505cfaf5-8877-4464-86af-a88c091c2b4b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">71b21d26-3aa4-44c1-8e81-dc4b39c8996b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1730895038928_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">lvhwvYs72rl1lT5sW7r/wA==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-149">
            <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-back.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/harvey-chatbot</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-150">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1731471417824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1730894978824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scae" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scae</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2024.39.01.12&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;49/24100324916&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">505cfaf5-8877-4464-86af-a88c091c2b4b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">KOXxNUq-TPQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">71b21d26-3aa4-44c1-8e81-dc4b39c8996b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1730895038928_1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730895278886</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-MS-Migration" elementType="Header">
                  <stringProp name="Header.name">X-MS-Migration</stringProp>
                  <stringProp name="Header.value">True</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="X-Ms-Test-User" elementType="Header">
                  <stringProp name="Header.name">X-Ms-Test-User</stringProp>
                  <stringProp name="Header.value">False</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IjZMcUZtU0VIWHI1cGVZZUk4bW9jNUZJMXpFZjN2SVNUUnpyUkZ5Smk4ZU0iLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJodHRwczovL2ljMy50ZWFtcy5vZmZpY2UuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZmRiOTdhZWQtMjQ4OC00NzY3LWIwZWEtYTYwN2U3MjAwNmYxLyIsImlhdCI6MTczMDg5NDg3MiwibmJmIjoxNzMwODk0ODcyLCJleHAiOjE3MzA5ODE1NzIsImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBVlFBcS84WUFBQUE4dkVHZzN6a1ZuTUFKNHFqS242MjUvZHV5Wit5VGN6Tm04N3VmcjBpVE1OVUcvdzRrUlZwQUdPTlRraGl2WlhCYlc5Y1ZJcnFaWFhDK0ZLeThQMDVLMW82S3k3a1dTK1d5QVRTL3Bnc1UvUT0iLCJhbXIiOlsicHdkIiwicnNhIiwibWZhIl0sImFwcGlkIjoiMWZlYzhlNzgtYmNlNC00YWFmLWFiMWItNTQ1MWNjMzg3MjY0IiwiYXBwaWRhY3IiOiIwIiwiZGV2aWNlaWQiOiI3MDYyMjRhNy1jMGFhLTRlZTQtOWE1Zi01YWUwMzQwODdlYjUiLCJmYW1pbHlfbmFtZSI6Ik1hbGkiLCJnaXZlbl9uYW1lIjoiQXJjaGFuYSIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjIwLjI0Mi4xODUuMzkiLCJuYW1lIjoiTWFsaSwgQXJjaGFuYSIsIm9pZCI6ImZhMzYzZDg3LWUzYTgtNGM3OS1hM2EyLTYwOWQ0ODFkYWExYyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS03NDMxMTEzNTktMjc0MTU5Nzg2NS0yNjIzNTg5MDk1LTEyODczNiIsInB1aWQiOiIxMDAzMjAwM0Q5MkQ2OTlBIiwicHdkX3VybCI6Imh0dHBzOi8vcG9ydGFsLm1pY3Jvc29mdG9ubGluZS5jb20vQ2hhbmdlUGFzc3dvcmQuYXNweCIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4VlR3cWptbGdjZElwUGdDa3dFZ2xibGJBS1JiQUEuIiwic2NwIjoiVGVhbXMuQWNjZXNzQXNVc2VyLkFsbCIsInN1YiI6IkRwZ0lOUXZ5V3cyVGVCaXVfMVpxTDdsYlZ2Z1NGUG5aeGlIdjlKY2N2dkUiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoiOGI2bFdPcElrRVc2RlFaenpRUkpBQSIsInZlciI6IjEuMCIsInhtc19jYyI6WyJDUDEiXSwieG1zX2lkcmVsIjoiMSAxMiIsInhtc19zc20iOiIxIn0.ctUfjyBoi9VXYEj48s5KM7KnHMCd7uKxhJz_NmeveR-n3g9mMYaBJx29iLoEPppLpqryzxBAvvrE2awmtcicw5FvoIjVFEcp0iTA0EbAReJo1TVozb4Wlt5Dtk0fg_dAMM1PZK2YEeiK9Gn_KLOFFjMG0ssZzofqnI2DVRBlZDYKSBESKqA4LLL_NFD8jEGfcfSi7V_BTHwC7WGm5u6ot-EUxhrzhd2L7ZaR3WEZhLaLAs8fMAIaaVHUOE1G16esrX3Vsdf0t3bCoA8iEjXuBXaMF2nqRx2OhPYPrNrQXHh7E6LxF_IeFMH7Yg7TWqgJH9rvRE6dqTaB0G0E5X_ZFA</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-152">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/websocket/b9c9fc51b3171b02-4a530b19553019da</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1731471417824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1730894978824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scae" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scae</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2024.39.01.12&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;49/24100324916&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">505cfaf5-8877-4464-86af-a88c091c2b4b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">KOXxNUq-TPQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">71b21d26-3aa4-44c1-8e81-dc4b39c8996b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1730895038928_1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">hiuLBZQffHvZR6XjKrClPA==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-153">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/b9c9fc51b3171b02-4a530b19553019da?sr=QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk&amp;issuer=prod-2&amp;sp=connect&amp;se=1731471417824&amp;st=1730894978824&amp;scae=1&amp;sig=ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg&amp;v=v4&amp;tc=%7B%22cv%22:%222024.39.01.12%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2249/24100324916%22%7D&amp;timeout=40&amp;auth=true&amp;epid=505cfaf5-8877-4464-86af-a88c091c2b4b&amp;ccid=KOXxNUq-TPQ&amp;cor_id=71b21d26-3aa4-44c1-8e81-dc4b39c8996b&amp;con_num=1730895038928_1&amp;t=1730895280399</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,x-ms-migration,x-ms-test-user</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-154">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/b9c9fc51b3171b02-4a530b19553019da</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1731471417824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1730894978824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scae" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scae</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2024.39.01.12&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;49/24100324916&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">505cfaf5-8877-4464-86af-a88c091c2b4b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">KOXxNUq-TPQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">71b21d26-3aa4-44c1-8e81-dc4b39c8996b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1730895038928_1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730895280399</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-MS-Migration" elementType="Header">
                  <stringProp name="Header.name">X-MS-Migration</stringProp>
                  <stringProp name="Header.value">True</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="X-Ms-Test-User" elementType="Header">
                  <stringProp name="Header.name">X-Ms-Test-User</stringProp>
                  <stringProp name="Header.value">False</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IjZMcUZtU0VIWHI1cGVZZUk4bW9jNUZJMXpFZjN2SVNUUnpyUkZ5Smk4ZU0iLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJodHRwczovL2ljMy50ZWFtcy5vZmZpY2UuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZmRiOTdhZWQtMjQ4OC00NzY3LWIwZWEtYTYwN2U3MjAwNmYxLyIsImlhdCI6MTczMDg5NDg3MiwibmJmIjoxNzMwODk0ODcyLCJleHAiOjE3MzA5ODE1NzIsImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBVlFBcS84WUFBQUE4dkVHZzN6a1ZuTUFKNHFqS242MjUvZHV5Wit5VGN6Tm04N3VmcjBpVE1OVUcvdzRrUlZwQUdPTlRraGl2WlhCYlc5Y1ZJcnFaWFhDK0ZLeThQMDVLMW82S3k3a1dTK1d5QVRTL3Bnc1UvUT0iLCJhbXIiOlsicHdkIiwicnNhIiwibWZhIl0sImFwcGlkIjoiMWZlYzhlNzgtYmNlNC00YWFmLWFiMWItNTQ1MWNjMzg3MjY0IiwiYXBwaWRhY3IiOiIwIiwiZGV2aWNlaWQiOiI3MDYyMjRhNy1jMGFhLTRlZTQtOWE1Zi01YWUwMzQwODdlYjUiLCJmYW1pbHlfbmFtZSI6Ik1hbGkiLCJnaXZlbl9uYW1lIjoiQXJjaGFuYSIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjIwLjI0Mi4xODUuMzkiLCJuYW1lIjoiTWFsaSwgQXJjaGFuYSIsIm9pZCI6ImZhMzYzZDg3LWUzYTgtNGM3OS1hM2EyLTYwOWQ0ODFkYWExYyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS03NDMxMTEzNTktMjc0MTU5Nzg2NS0yNjIzNTg5MDk1LTEyODczNiIsInB1aWQiOiIxMDAzMjAwM0Q5MkQ2OTlBIiwicHdkX3VybCI6Imh0dHBzOi8vcG9ydGFsLm1pY3Jvc29mdG9ubGluZS5jb20vQ2hhbmdlUGFzc3dvcmQuYXNweCIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4VlR3cWptbGdjZElwUGdDa3dFZ2xibGJBS1JiQUEuIiwic2NwIjoiVGVhbXMuQWNjZXNzQXNVc2VyLkFsbCIsInN1YiI6IkRwZ0lOUXZ5V3cyVGVCaXVfMVpxTDdsYlZ2Z1NGUG5aeGlIdjlKY2N2dkUiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoiOGI2bFdPcElrRVc2RlFaenpRUkpBQSIsInZlciI6IjEuMCIsInhtc19jYyI6WyJDUDEiXSwieG1zX2lkcmVsIjoiMSAxMiIsInhtc19zc20iOiIxIn0.ctUfjyBoi9VXYEj48s5KM7KnHMCd7uKxhJz_NmeveR-n3g9mMYaBJx29iLoEPppLpqryzxBAvvrE2awmtcicw5FvoIjVFEcp0iTA0EbAReJo1TVozb4Wlt5Dtk0fg_dAMM1PZK2YEeiK9Gn_KLOFFjMG0ssZzofqnI2DVRBlZDYKSBESKqA4LLL_NFD8jEGfcfSi7V_BTHwC7WGm5u6ot-EUxhrzhd2L7ZaR3WEZhLaLAs8fMAIaaVHUOE1G16esrX3Vsdf0t3bCoA8iEjXuBXaMF2nqRx2OhPYPrNrQXHh7E6LxF_IeFMH7Yg7TWqgJH9rvRE6dqTaB0G0E5X_ZFA</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-155">
            <stringProp name="HTTPSampler.domain">teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/registrar/prod/V2/registrations</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;clientDescription&quot;:{&quot;appId&quot;:&quot;TeamsCDLWebWorker&quot;,&quot;aesKey&quot;:&quot;&quot;,&quot;languageId&quot;:&quot;en-US&quot;,&quot;platform&quot;:&quot;edge&quot;,&quot;templateKey&quot;:&quot;TeamsCDLWebWorker_2.1&quot;,&quot;platformUIVersion&quot;:&quot;49/24100324916&quot;},&quot;registrationId&quot;:&quot;505cfaf5-8877-4464-86af-a88c091c2b4b&quot;,&quot;nodeId&quot;:&quot;&quot;,&quot;transports&quot;:{&quot;TROUTER&quot;:[{&quot;context&quot;:&quot;&quot;,&quot;path&quot;:&quot;${scheme}://pub-ent-usnc-12-f.trouter.teams.microsoft.com:3443/v4/f/1g-oMOBKkUeKOXxNUq-TPQ/&quot;,&quot;ttl&quot;:576137}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-MS-Migration" elementType="Header">
                  <stringProp name="Header.name">X-MS-Migration</stringProp>
                  <stringProp name="Header.value">True</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/v2/worker/precompiled-web-worker-8f1dae8bc160a667.js</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="x-ms-test-user" elementType="Header">
                  <stringProp name="Header.name">x-ms-test-user</stringProp>
                  <stringProp name="Header.value">False</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IjZMcUZtU0VIWHI1cGVZZUk4bW9jNUZJMXpFZjN2SVNUUnpyUkZ5Smk4ZU0iLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJodHRwczovL2ljMy50ZWFtcy5vZmZpY2UuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZmRiOTdhZWQtMjQ4OC00NzY3LWIwZWEtYTYwN2U3MjAwNmYxLyIsImlhdCI6MTczMDg5NDg3MiwibmJmIjoxNzMwODk0ODcyLCJleHAiOjE3MzA5ODE1NzIsImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBVlFBcS84WUFBQUE4dkVHZzN6a1ZuTUFKNHFqS242MjUvZHV5Wit5VGN6Tm04N3VmcjBpVE1OVUcvdzRrUlZwQUdPTlRraGl2WlhCYlc5Y1ZJcnFaWFhDK0ZLeThQMDVLMW82S3k3a1dTK1d5QVRTL3Bnc1UvUT0iLCJhbXIiOlsicHdkIiwicnNhIiwibWZhIl0sImFwcGlkIjoiMWZlYzhlNzgtYmNlNC00YWFmLWFiMWItNTQ1MWNjMzg3MjY0IiwiYXBwaWRhY3IiOiIwIiwiZGV2aWNlaWQiOiI3MDYyMjRhNy1jMGFhLTRlZTQtOWE1Zi01YWUwMzQwODdlYjUiLCJmYW1pbHlfbmFtZSI6Ik1hbGkiLCJnaXZlbl9uYW1lIjoiQXJjaGFuYSIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjIwLjI0Mi4xODUuMzkiLCJuYW1lIjoiTWFsaSwgQXJjaGFuYSIsIm9pZCI6ImZhMzYzZDg3LWUzYTgtNGM3OS1hM2EyLTYwOWQ0ODFkYWExYyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS03NDMxMTEzNTktMjc0MTU5Nzg2NS0yNjIzNTg5MDk1LTEyODczNiIsInB1aWQiOiIxMDAzMjAwM0Q5MkQ2OTlBIiwicHdkX3VybCI6Imh0dHBzOi8vcG9ydGFsLm1pY3Jvc29mdG9ubGluZS5jb20vQ2hhbmdlUGFzc3dvcmQuYXNweCIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4VlR3cWptbGdjZElwUGdDa3dFZ2xibGJBS1JiQUEuIiwic2NwIjoiVGVhbXMuQWNjZXNzQXNVc2VyLkFsbCIsInN1YiI6IkRwZ0lOUXZ5V3cyVGVCaXVfMVpxTDdsYlZ2Z1NGUG5aeGlIdjlKY2N2dkUiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoiOGI2bFdPcElrRVc2RlFaenpRUkpBQSIsInZlciI6IjEuMCIsInhtc19jYyI6WyJDUDEiXSwieG1zX2lkcmVsIjoiMSAxMiIsInhtc19zc20iOiIxIn0.ctUfjyBoi9VXYEj48s5KM7KnHMCd7uKxhJz_NmeveR-n3g9mMYaBJx29iLoEPppLpqryzxBAvvrE2awmtcicw5FvoIjVFEcp0iTA0EbAReJo1TVozb4Wlt5Dtk0fg_dAMM1PZK2YEeiK9Gn_KLOFFjMG0ssZzofqnI2DVRBlZDYKSBESKqA4LLL_NFD8jEGfcfSi7V_BTHwC7WGm5u6ot-EUxhrzhd2L7ZaR3WEZhLaLAs8fMAIaaVHUOE1G16esrX3Vsdf0t3bCoA8iEjXuBXaMF2nqRx2OhPYPrNrQXHh7E6LxF_IeFMH7Yg7TWqgJH9rvRE6dqTaB0G0E5X_ZFA</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-156" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/b9c9fc51b3171b02-4a530b19553019da?sr=QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk&amp;issuer=prod-2&amp;sp=connect&amp;se=1731471417824&amp;st=1730894978824&amp;scae=1&amp;sig=ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg&amp;v=v4&amp;tc=%7B%22cv%22:%222024.39.01.12%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2249/24100324916%22%7D&amp;timeout=40&amp;auth=true&amp;epid=505cfaf5-8877-4464-86af-a88c091c2b4b&amp;ccid=KOXxNUq-TPQ&amp;cor_id=71b21d26-3aa4-44c1-8e81-dc4b39c8996b&amp;con_num=1730895038928_1&amp;connected=true&amp;t=1730895280847</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,x-ms-migration,x-ms-test-user</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-158" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/b9c9fc51b3171b02-4a530b19553019da?sr=QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk&amp;issuer=prod-2&amp;sp=connect&amp;se=1731471417824&amp;st=1730894978824&amp;scae=1&amp;sig=ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg&amp;v=v4&amp;tc=%7B%22cv%22:%222024.39.01.12%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2249/24100324916%22%7D&amp;timeout=40&amp;auth=true&amp;epid=505cfaf5-8877-4464-86af-a88c091c2b4b&amp;ccid=KOXxNUq-TPQ&amp;cor_id=71b21d26-3aa4-44c1-8e81-dc4b39c8996b&amp;con_num=1730895038928_1&amp;connected=true&amp;userActivity=%7B%22state%22%3A%22active%22%2C%22cv%22%3A%22Vk2dzLiBx3svkqynlLMriA.0.0%22%7D&amp;t=1730895281058</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,x-ms-migration,x-ms-test-user</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-151">
            <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-back.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/harvey-chatbot</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query_string&quot;:&quot;Hello\n&quot;,&quot;memory_messages&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJhcGk6Ly8xYjNiZGM1Yy0yZjRhLTQyNzYtOWVjOC05OGFmMzYxMTU2MjEiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9mZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEvIiwiaWF0IjoxNzMwODk0OTIzLCJuYmYiOjE3MzA4OTQ5MjMsImV4cCI6MTczMDg5OTE4MywiYWNyIjoiMSIsImFpbyI6IkFWUUFxLzhZQUFBQWU5cDVOandPUHM5eDNIZFpYblozak52T3NENVF4YlBnQjFEYklGQkFtTTMvZHNHcUFSZUtHN2g3WEdZTlp0VCtRNWk4S1Z1UFRaMm1HWHhFODRIb3R5OHpNVHQ4OU5TaXh5WG9mN0wxUEdRPSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwaWQiOiJjYzM3N2MxNC1hNDg3LTQ1NzItOGI4OC01MTIxZGQ2NTQwZjMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6Ik1hbGkiLCJnaXZlbl9uYW1lIjoiQXJjaGFuYSIsImlwYWRkciI6IjIwLjI0Mi4xODUuMzkiLCJuYW1lIjoiTWFsaSwgQXJjaGFuYSIsIm9pZCI6ImZhMzYzZDg3LWUzYTgtNGM3OS1hM2EyLTYwOWQ0ODFkYWExYyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS03NDMxMTEzNTktMjc0MTU5Nzg2NS0yNjIzNTg5MDk1LTEyODczNiIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4VnpjT3h0S0wzWkNuc2lZcnpZUlZpRmJBS1JiQUEuIiwic2NwIjoidXNlcl9pbXBlcnNvbmF0aW9uIiwic3ViIjoiZFJkdkR5aWVQRmdxZlg4SnNPaTliQW93LWMyQVhQZHljeUhSaG1FZUw4OCIsInRpZCI6ImZkYjk3YWVkLTI0ODgtNDc2Ny1iMGVhLWE2MDdlNzIwMDZmMSIsInVuaXF1ZV9uYW1lIjoiQXJjaGFuYS5NYWxpQGhiZnVsbGVyLmNvbSIsInVwbiI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1dGkiOiJtbENDRmZobTZFU1l0VWhHdDdFQUFBIiwidmVyIjoiMS4wIn0.b6VmaViCcTyyxTA_e0gnde0Ao_EwMM3rao91dJjlYfUY6i2gc7lBVcFT5oiro5QvAp7fnxtyJdXjBMOP2EJ78GAPxXyh5V8qUUELXkO46SmpuT2Xe_59d0i1hFkq5C7L5J90kISAAIC3_7oM0AAfgSyqwC9mRT0b-ioQufvNmwi-lVcyXDTyg-_vWDemTuhHQa2alF7nPz11cAZipcPFPF2gG4lzmH6HEUZiTbbXWdZLjX3D-Q7_01i4VmAgYyVig9a8_zJstHfe1_SK2VwV5BlAE1DGlb8qtxoto-N5M_0vZDxfVHyZHKfV_F0ve3Nedm-GSuQinr5jzr76phtesg</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-157" enabled="false">
            <stringProp name="HTTPSampler.domain">go.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="check" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">check</stringProp>
                  <stringProp name="Argument.value">1730895281068</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">71b21d26-3aa4-44c1-8e81-dc4b39c8996b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">505cfaf5-8877-4464-86af-a88c091c2b4b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2024.39.01.12&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;49/24100324916&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-159" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/b9c9fc51b3171b02-4a530b19553019da?sr=QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk&amp;issuer=prod-2&amp;sp=connect&amp;se=1731471417824&amp;st=1730894978824&amp;scae=1&amp;sig=ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg&amp;v=v4&amp;tc=%7B%22cv%22:%222024.39.01.12%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2249/24100324916%22%7D&amp;timeout=40&amp;auth=true&amp;epid=505cfaf5-8877-4464-86af-a88c091c2b4b&amp;ccid=KOXxNUq-TPQ&amp;cor_id=71b21d26-3aa4-44c1-8e81-dc4b39c8996b&amp;con_num=1730895038928_1&amp;connected=true&amp;userActivity=%7B%22state%22%3A%22active%22%2C%22cv%22%3A%22Vk2dzLiBx3svkqynlLMriA.0.0%22%7D&amp;t=1730895281058</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0::</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-MS-Migration" elementType="Header">
                  <stringProp name="Header.name">X-MS-Migration</stringProp>
                  <stringProp name="Header.value">True</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="X-Ms-Test-User" elementType="Header">
                  <stringProp name="Header.name">X-Ms-Test-User</stringProp>
                  <stringProp name="Header.value">False</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IjZMcUZtU0VIWHI1cGVZZUk4bW9jNUZJMXpFZjN2SVNUUnpyUkZ5Smk4ZU0iLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJodHRwczovL2ljMy50ZWFtcy5vZmZpY2UuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZmRiOTdhZWQtMjQ4OC00NzY3LWIwZWEtYTYwN2U3MjAwNmYxLyIsImlhdCI6MTczMDg5NDg3MiwibmJmIjoxNzMwODk0ODcyLCJleHAiOjE3MzA5ODE1NzIsImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBVlFBcS84WUFBQUE4dkVHZzN6a1ZuTUFKNHFqS242MjUvZHV5Wit5VGN6Tm04N3VmcjBpVE1OVUcvdzRrUlZwQUdPTlRraGl2WlhCYlc5Y1ZJcnFaWFhDK0ZLeThQMDVLMW82S3k3a1dTK1d5QVRTL3Bnc1UvUT0iLCJhbXIiOlsicHdkIiwicnNhIiwibWZhIl0sImFwcGlkIjoiMWZlYzhlNzgtYmNlNC00YWFmLWFiMWItNTQ1MWNjMzg3MjY0IiwiYXBwaWRhY3IiOiIwIiwiZGV2aWNlaWQiOiI3MDYyMjRhNy1jMGFhLTRlZTQtOWE1Zi01YWUwMzQwODdlYjUiLCJmYW1pbHlfbmFtZSI6Ik1hbGkiLCJnaXZlbl9uYW1lIjoiQXJjaGFuYSIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjIwLjI0Mi4xODUuMzkiLCJuYW1lIjoiTWFsaSwgQXJjaGFuYSIsIm9pZCI6ImZhMzYzZDg3LWUzYTgtNGM3OS1hM2EyLTYwOWQ0ODFkYWExYyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS03NDMxMTEzNTktMjc0MTU5Nzg2NS0yNjIzNTg5MDk1LTEyODczNiIsInB1aWQiOiIxMDAzMjAwM0Q5MkQ2OTlBIiwicHdkX3VybCI6Imh0dHBzOi8vcG9ydGFsLm1pY3Jvc29mdG9ubGluZS5jb20vQ2hhbmdlUGFzc3dvcmQuYXNweCIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4VlR3cWptbGdjZElwUGdDa3dFZ2xibGJBS1JiQUEuIiwic2NwIjoiVGVhbXMuQWNjZXNzQXNVc2VyLkFsbCIsInN1YiI6IkRwZ0lOUXZ5V3cyVGVCaXVfMVpxTDdsYlZ2Z1NGUG5aeGlIdjlKY2N2dkUiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoiOGI2bFdPcElrRVc2RlFaenpRUkpBQSIsInZlciI6IjEuMCIsInhtc19jYyI6WyJDUDEiXSwieG1zX2lkcmVsIjoiMSAxMiIsInhtc19zc20iOiIxIn0.ctUfjyBoi9VXYEj48s5KM7KnHMCd7uKxhJz_NmeveR-n3g9mMYaBJx29iLoEPppLpqryzxBAvvrE2awmtcicw5FvoIjVFEcp0iTA0EbAReJo1TVozb4Wlt5Dtk0fg_dAMM1PZK2YEeiK9Gn_KLOFFjMG0ssZzofqnI2DVRBlZDYKSBESKqA4LLL_NFD8jEGfcfSi7V_BTHwC7WGm5u6ot-EUxhrzhd2L7ZaR3WEZhLaLAs8fMAIaaVHUOE1G16esrX3Vsdf0t3bCoA8iEjXuBXaMF2nqRx2OhPYPrNrQXHh7E6LxF_IeFMH7Yg7TWqgJH9rvRE6dqTaB0G0E5X_ZFA</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-160" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v4/c</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2024.39.01.12&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;49/24100324916&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">505cfaf5-8877-4464-86af-a88c091c2b4b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">KOXxNUq-TPQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">71b21d26-3aa4-44c1-8e81-dc4b39c8996b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1730895038928_1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">taeYRGgmO0TCadJ3tqu6Fg==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-161" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v4/a?cor_id=71b21d26-3aa4-44c1-8e81-dc4b39c8996b&amp;con_num=1730895038928_2&amp;epid=505cfaf5-8877-4464-86af-a88c091c2b4b&amp;sr=QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk&amp;issuer=prod-2&amp;sp=connect&amp;se=1731471417824&amp;st=1730894978824&amp;scae=1&amp;sig=ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg&amp;v=v4</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,x-ms-migration,x-ms-test-user</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-162" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v4/a?cor_id=71b21d26-3aa4-44c1-8e81-dc4b39c8996b&amp;con_num=1730895038928_2&amp;epid=505cfaf5-8877-4464-86af-a88c091c2b4b&amp;sr=QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk&amp;issuer=prod-2&amp;sp=connect&amp;se=1731471417824&amp;st=1730894978824&amp;scae=1&amp;sig=ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg&amp;v=v4</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="x-ms-migration" elementType="Header">
                  <stringProp name="Header.name">x-ms-migration</stringProp>
                  <stringProp name="Header.value">True</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="x-ms-test-user" elementType="Header">
                  <stringProp name="Header.name">x-ms-test-user</stringProp>
                  <stringProp name="Header.value">False</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IjZMcUZtU0VIWHI1cGVZZUk4bW9jNUZJMXpFZjN2SVNUUnpyUkZ5Smk4ZU0iLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJodHRwczovL2ljMy50ZWFtcy5vZmZpY2UuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZmRiOTdhZWQtMjQ4OC00NzY3LWIwZWEtYTYwN2U3MjAwNmYxLyIsImlhdCI6MTczMDg5NDg3MiwibmJmIjoxNzMwODk0ODcyLCJleHAiOjE3MzA5ODE1NzIsImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBVlFBcS84WUFBQUE4dkVHZzN6a1ZuTUFKNHFqS242MjUvZHV5Wit5VGN6Tm04N3VmcjBpVE1OVUcvdzRrUlZwQUdPTlRraGl2WlhCYlc5Y1ZJcnFaWFhDK0ZLeThQMDVLMW82S3k3a1dTK1d5QVRTL3Bnc1UvUT0iLCJhbXIiOlsicHdkIiwicnNhIiwibWZhIl0sImFwcGlkIjoiMWZlYzhlNzgtYmNlNC00YWFmLWFiMWItNTQ1MWNjMzg3MjY0IiwiYXBwaWRhY3IiOiIwIiwiZGV2aWNlaWQiOiI3MDYyMjRhNy1jMGFhLTRlZTQtOWE1Zi01YWUwMzQwODdlYjUiLCJmYW1pbHlfbmFtZSI6Ik1hbGkiLCJnaXZlbl9uYW1lIjoiQXJjaGFuYSIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjIwLjI0Mi4xODUuMzkiLCJuYW1lIjoiTWFsaSwgQXJjaGFuYSIsIm9pZCI6ImZhMzYzZDg3LWUzYTgtNGM3OS1hM2EyLTYwOWQ0ODFkYWExYyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS03NDMxMTEzNTktMjc0MTU5Nzg2NS0yNjIzNTg5MDk1LTEyODczNiIsInB1aWQiOiIxMDAzMjAwM0Q5MkQ2OTlBIiwicHdkX3VybCI6Imh0dHBzOi8vcG9ydGFsLm1pY3Jvc29mdG9ubGluZS5jb20vQ2hhbmdlUGFzc3dvcmQuYXNweCIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4VlR3cWptbGdjZElwUGdDa3dFZ2xibGJBS1JiQUEuIiwic2NwIjoiVGVhbXMuQWNjZXNzQXNVc2VyLkFsbCIsInN1YiI6IkRwZ0lOUXZ5V3cyVGVCaXVfMVpxTDdsYlZ2Z1NGUG5aeGlIdjlKY2N2dkUiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoiOGI2bFdPcElrRVc2RlFaenpRUkpBQSIsInZlciI6IjEuMCIsInhtc19jYyI6WyJDUDEiXSwieG1zX2lkcmVsIjoiMSAxMiIsInhtc19zc20iOiIxIn0.ctUfjyBoi9VXYEj48s5KM7KnHMCd7uKxhJz_NmeveR-n3g9mMYaBJx29iLoEPppLpqryzxBAvvrE2awmtcicw5FvoIjVFEcp0iTA0EbAReJo1TVozb4Wlt5Dtk0fg_dAMM1PZK2YEeiK9Gn_KLOFFjMG0ssZzofqnI2DVRBlZDYKSBESKqA4LLL_NFD8jEGfcfSi7V_BTHwC7WGm5u6ot-EUxhrzhd2L7ZaR3WEZhLaLAs8fMAIaaVHUOE1G16esrX3Vsdf0t3bCoA8iEjXuBXaMF2nqRx2OhPYPrNrQXHh7E6LxF_IeFMH7Yg7TWqgJH9rvRE6dqTaB0G0E5X_ZFA</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-163" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/?sr=QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk&amp;issuer=prod-2&amp;sp=connect&amp;se=1731471417824&amp;st=1730894978824&amp;scae=1&amp;sig=ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg&amp;v=v4&amp;tc=%7B%22cv%22:%222024.39.01.12%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2249/24100324916%22%7D&amp;timeout=40&amp;auth=true&amp;epid=505cfaf5-8877-4464-86af-a88c091c2b4b&amp;userActivity=%7B%22state%22%3A%22active%22%2C%22cv%22%3A%22Vk2dzLiBx3svkqynlLMriA.0.1%22%7D&amp;ccid=KOXxNUq-TPQ&amp;cor_id=71b21d26-3aa4-44c1-8e81-dc4b39c8996b&amp;con_num=1730895038928_2&amp;t=1730895283067</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,x-ms-migration,x-ms-test-user</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-164" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1731471417824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1730894978824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scae" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scae</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2024.39.01.12&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;49/24100324916&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">505cfaf5-8877-4464-86af-a88c091c2b4b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;Vk2dzLiBx3svkqynlLMriA.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">KOXxNUq-TPQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">71b21d26-3aa4-44c1-8e81-dc4b39c8996b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1730895038928_2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730895283067</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-MS-Migration" elementType="Header">
                  <stringProp name="Header.name">X-MS-Migration</stringProp>
                  <stringProp name="Header.value">True</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="X-Ms-Test-User" elementType="Header">
                  <stringProp name="Header.name">X-Ms-Test-User</stringProp>
                  <stringProp name="Header.value">False</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IjZMcUZtU0VIWHI1cGVZZUk4bW9jNUZJMXpFZjN2SVNUUnpyUkZ5Smk4ZU0iLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJodHRwczovL2ljMy50ZWFtcy5vZmZpY2UuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZmRiOTdhZWQtMjQ4OC00NzY3LWIwZWEtYTYwN2U3MjAwNmYxLyIsImlhdCI6MTczMDg5NDg3MiwibmJmIjoxNzMwODk0ODcyLCJleHAiOjE3MzA5ODE1NzIsImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBVlFBcS84WUFBQUE4dkVHZzN6a1ZuTUFKNHFqS242MjUvZHV5Wit5VGN6Tm04N3VmcjBpVE1OVUcvdzRrUlZwQUdPTlRraGl2WlhCYlc5Y1ZJcnFaWFhDK0ZLeThQMDVLMW82S3k3a1dTK1d5QVRTL3Bnc1UvUT0iLCJhbXIiOlsicHdkIiwicnNhIiwibWZhIl0sImFwcGlkIjoiMWZlYzhlNzgtYmNlNC00YWFmLWFiMWItNTQ1MWNjMzg3MjY0IiwiYXBwaWRhY3IiOiIwIiwiZGV2aWNlaWQiOiI3MDYyMjRhNy1jMGFhLTRlZTQtOWE1Zi01YWUwMzQwODdlYjUiLCJmYW1pbHlfbmFtZSI6Ik1hbGkiLCJnaXZlbl9uYW1lIjoiQXJjaGFuYSIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjIwLjI0Mi4xODUuMzkiLCJuYW1lIjoiTWFsaSwgQXJjaGFuYSIsIm9pZCI6ImZhMzYzZDg3LWUzYTgtNGM3OS1hM2EyLTYwOWQ0ODFkYWExYyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS03NDMxMTEzNTktMjc0MTU5Nzg2NS0yNjIzNTg5MDk1LTEyODczNiIsInB1aWQiOiIxMDAzMjAwM0Q5MkQ2OTlBIiwicHdkX3VybCI6Imh0dHBzOi8vcG9ydGFsLm1pY3Jvc29mdG9ubGluZS5jb20vQ2hhbmdlUGFzc3dvcmQuYXNweCIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4VlR3cWptbGdjZElwUGdDa3dFZ2xibGJBS1JiQUEuIiwic2NwIjoiVGVhbXMuQWNjZXNzQXNVc2VyLkFsbCIsInN1YiI6IkRwZ0lOUXZ5V3cyVGVCaXVfMVpxTDdsYlZ2Z1NGUG5aeGlIdjlKY2N2dkUiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoiOGI2bFdPcElrRVc2RlFaenpRUkpBQSIsInZlciI6IjEuMCIsInhtc19jYyI6WyJDUDEiXSwieG1zX2lkcmVsIjoiMSAxMiIsInhtc19zc20iOiIxIn0.ctUfjyBoi9VXYEj48s5KM7KnHMCd7uKxhJz_NmeveR-n3g9mMYaBJx29iLoEPppLpqryzxBAvvrE2awmtcicw5FvoIjVFEcp0iTA0EbAReJo1TVozb4Wlt5Dtk0fg_dAMM1PZK2YEeiK9Gn_KLOFFjMG0ssZzofqnI2DVRBlZDYKSBESKqA4LLL_NFD8jEGfcfSi7V_BTHwC7WGm5u6ot-EUxhrzhd2L7ZaR3WEZhLaLAs8fMAIaaVHUOE1G16esrX3Vsdf0t3bCoA8iEjXuBXaMF2nqRx2OhPYPrNrQXHh7E6LxF_IeFMH7Yg7TWqgJH9rvRE6dqTaB0G0E5X_ZFA</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-165" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/websocket/4bf78d02c2ff1323-4f1bc27ce295c13c</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1731471417824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1730894978824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scae" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scae</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2024.39.01.12&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;49/24100324916&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">505cfaf5-8877-4464-86af-a88c091c2b4b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;Vk2dzLiBx3svkqynlLMriA.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">KOXxNUq-TPQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">71b21d26-3aa4-44c1-8e81-dc4b39c8996b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1730895038928_2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">2MmyLa5rS8wSSvNtyDLi6g==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-166" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/4bf78d02c2ff1323-4f1bc27ce295c13c?sr=QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk&amp;issuer=prod-2&amp;sp=connect&amp;se=1731471417824&amp;st=1730894978824&amp;scae=1&amp;sig=ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg&amp;v=v4&amp;tc=%7B%22cv%22:%222024.39.01.12%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2249/24100324916%22%7D&amp;timeout=40&amp;auth=true&amp;epid=505cfaf5-8877-4464-86af-a88c091c2b4b&amp;userActivity=%7B%22state%22%3A%22active%22%2C%22cv%22%3A%22Vk2dzLiBx3svkqynlLMriA.0.1%22%7D&amp;ccid=KOXxNUq-TPQ&amp;cor_id=71b21d26-3aa4-44c1-8e81-dc4b39c8996b&amp;con_num=1730895038928_2&amp;t=1730895283840</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,x-ms-migration,x-ms-test-user</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-167" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/4bf78d02c2ff1323-4f1bc27ce295c13c</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1731471417824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1730894978824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scae" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scae</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2024.39.01.12&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;49/24100324916&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">505cfaf5-8877-4464-86af-a88c091c2b4b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;Vk2dzLiBx3svkqynlLMriA.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">KOXxNUq-TPQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">71b21d26-3aa4-44c1-8e81-dc4b39c8996b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1730895038928_2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730895283840</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-MS-Migration" elementType="Header">
                  <stringProp name="Header.name">X-MS-Migration</stringProp>
                  <stringProp name="Header.value">True</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="X-Ms-Test-User" elementType="Header">
                  <stringProp name="Header.name">X-Ms-Test-User</stringProp>
                  <stringProp name="Header.value">False</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IjZMcUZtU0VIWHI1cGVZZUk4bW9jNUZJMXpFZjN2SVNUUnpyUkZ5Smk4ZU0iLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJodHRwczovL2ljMy50ZWFtcy5vZmZpY2UuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZmRiOTdhZWQtMjQ4OC00NzY3LWIwZWEtYTYwN2U3MjAwNmYxLyIsImlhdCI6MTczMDg5NDg3MiwibmJmIjoxNzMwODk0ODcyLCJleHAiOjE3MzA5ODE1NzIsImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBVlFBcS84WUFBQUE4dkVHZzN6a1ZuTUFKNHFqS242MjUvZHV5Wit5VGN6Tm04N3VmcjBpVE1OVUcvdzRrUlZwQUdPTlRraGl2WlhCYlc5Y1ZJcnFaWFhDK0ZLeThQMDVLMW82S3k3a1dTK1d5QVRTL3Bnc1UvUT0iLCJhbXIiOlsicHdkIiwicnNhIiwibWZhIl0sImFwcGlkIjoiMWZlYzhlNzgtYmNlNC00YWFmLWFiMWItNTQ1MWNjMzg3MjY0IiwiYXBwaWRhY3IiOiIwIiwiZGV2aWNlaWQiOiI3MDYyMjRhNy1jMGFhLTRlZTQtOWE1Zi01YWUwMzQwODdlYjUiLCJmYW1pbHlfbmFtZSI6Ik1hbGkiLCJnaXZlbl9uYW1lIjoiQXJjaGFuYSIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjIwLjI0Mi4xODUuMzkiLCJuYW1lIjoiTWFsaSwgQXJjaGFuYSIsIm9pZCI6ImZhMzYzZDg3LWUzYTgtNGM3OS1hM2EyLTYwOWQ0ODFkYWExYyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS03NDMxMTEzNTktMjc0MTU5Nzg2NS0yNjIzNTg5MDk1LTEyODczNiIsInB1aWQiOiIxMDAzMjAwM0Q5MkQ2OTlBIiwicHdkX3VybCI6Imh0dHBzOi8vcG9ydGFsLm1pY3Jvc29mdG9ubGluZS5jb20vQ2hhbmdlUGFzc3dvcmQuYXNweCIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4VlR3cWptbGdjZElwUGdDa3dFZ2xibGJBS1JiQUEuIiwic2NwIjoiVGVhbXMuQWNjZXNzQXNVc2VyLkFsbCIsInN1YiI6IkRwZ0lOUXZ5V3cyVGVCaXVfMVpxTDdsYlZ2Z1NGUG5aeGlIdjlKY2N2dkUiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoiOGI2bFdPcElrRVc2RlFaenpRUkpBQSIsInZlciI6IjEuMCIsInhtc19jYyI6WyJDUDEiXSwieG1zX2lkcmVsIjoiMSAxMiIsInhtc19zc20iOiIxIn0.ctUfjyBoi9VXYEj48s5KM7KnHMCd7uKxhJz_NmeveR-n3g9mMYaBJx29iLoEPppLpqryzxBAvvrE2awmtcicw5FvoIjVFEcp0iTA0EbAReJo1TVozb4Wlt5Dtk0fg_dAMM1PZK2YEeiK9Gn_KLOFFjMG0ssZzofqnI2DVRBlZDYKSBESKqA4LLL_NFD8jEGfcfSi7V_BTHwC7WGm5u6ot-EUxhrzhd2L7ZaR3WEZhLaLAs8fMAIaaVHUOE1G16esrX3Vsdf0t3bCoA8iEjXuBXaMF2nqRx2OhPYPrNrQXHh7E6LxF_IeFMH7Yg7TWqgJH9rvRE6dqTaB0G0E5X_ZFA</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-168" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/4bf78d02c2ff1323-4f1bc27ce295c13c?sr=QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk&amp;issuer=prod-2&amp;sp=connect&amp;se=1731471417824&amp;st=1730894978824&amp;scae=1&amp;sig=ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg&amp;v=v4&amp;tc=%7B%22cv%22:%222024.39.01.12%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2249/24100324916%22%7D&amp;timeout=40&amp;auth=true&amp;epid=505cfaf5-8877-4464-86af-a88c091c2b4b&amp;userActivity=%7B%22state%22%3A%22active%22%2C%22cv%22%3A%22Vk2dzLiBx3svkqynlLMriA.0.1%22%7D&amp;ccid=KOXxNUq-TPQ&amp;cor_id=71b21d26-3aa4-44c1-8e81-dc4b39c8996b&amp;con_num=1730895038928_2&amp;connected=true&amp;t=1730895284224</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,x-ms-migration,x-ms-test-user</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-169" enabled="false">
            <stringProp name="HTTPSampler.domain">teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/registrar/prod/V2/registrations</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;clientDescription&quot;:{&quot;appId&quot;:&quot;TeamsCDLWebWorker&quot;,&quot;aesKey&quot;:&quot;&quot;,&quot;languageId&quot;:&quot;en-US&quot;,&quot;platform&quot;:&quot;edge&quot;,&quot;templateKey&quot;:&quot;TeamsCDLWebWorker_2.1&quot;,&quot;platformUIVersion&quot;:&quot;49/24100324916&quot;},&quot;registrationId&quot;:&quot;505cfaf5-8877-4464-86af-a88c091c2b4b&quot;,&quot;nodeId&quot;:&quot;&quot;,&quot;transports&quot;:{&quot;TROUTER&quot;:[{&quot;context&quot;:&quot;&quot;,&quot;path&quot;:&quot;${scheme}://pub-ent-usnc-12-f.trouter.teams.microsoft.com:3443/v4/f/1g-oMOBKkUeKOXxNUq-TPQ/&quot;,&quot;ttl&quot;:576133}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-MS-Migration" elementType="Header">
                  <stringProp name="Header.name">X-MS-Migration</stringProp>
                  <stringProp name="Header.value">True</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/v2/worker/precompiled-web-worker-8f1dae8bc160a667.js</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="x-ms-test-user" elementType="Header">
                  <stringProp name="Header.name">x-ms-test-user</stringProp>
                  <stringProp name="Header.value">False</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IjZMcUZtU0VIWHI1cGVZZUk4bW9jNUZJMXpFZjN2SVNUUnpyUkZ5Smk4ZU0iLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJodHRwczovL2ljMy50ZWFtcy5vZmZpY2UuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZmRiOTdhZWQtMjQ4OC00NzY3LWIwZWEtYTYwN2U3MjAwNmYxLyIsImlhdCI6MTczMDg5NDg3MiwibmJmIjoxNzMwODk0ODcyLCJleHAiOjE3MzA5ODE1NzIsImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBVlFBcS84WUFBQUE4dkVHZzN6a1ZuTUFKNHFqS242MjUvZHV5Wit5VGN6Tm04N3VmcjBpVE1OVUcvdzRrUlZwQUdPTlRraGl2WlhCYlc5Y1ZJcnFaWFhDK0ZLeThQMDVLMW82S3k3a1dTK1d5QVRTL3Bnc1UvUT0iLCJhbXIiOlsicHdkIiwicnNhIiwibWZhIl0sImFwcGlkIjoiMWZlYzhlNzgtYmNlNC00YWFmLWFiMWItNTQ1MWNjMzg3MjY0IiwiYXBwaWRhY3IiOiIwIiwiZGV2aWNlaWQiOiI3MDYyMjRhNy1jMGFhLTRlZTQtOWE1Zi01YWUwMzQwODdlYjUiLCJmYW1pbHlfbmFtZSI6Ik1hbGkiLCJnaXZlbl9uYW1lIjoiQXJjaGFuYSIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjIwLjI0Mi4xODUuMzkiLCJuYW1lIjoiTWFsaSwgQXJjaGFuYSIsIm9pZCI6ImZhMzYzZDg3LWUzYTgtNGM3OS1hM2EyLTYwOWQ0ODFkYWExYyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS03NDMxMTEzNTktMjc0MTU5Nzg2NS0yNjIzNTg5MDk1LTEyODczNiIsInB1aWQiOiIxMDAzMjAwM0Q5MkQ2OTlBIiwicHdkX3VybCI6Imh0dHBzOi8vcG9ydGFsLm1pY3Jvc29mdG9ubGluZS5jb20vQ2hhbmdlUGFzc3dvcmQuYXNweCIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4VlR3cWptbGdjZElwUGdDa3dFZ2xibGJBS1JiQUEuIiwic2NwIjoiVGVhbXMuQWNjZXNzQXNVc2VyLkFsbCIsInN1YiI6IkRwZ0lOUXZ5V3cyVGVCaXVfMVpxTDdsYlZ2Z1NGUG5aeGlIdjlKY2N2dkUiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoiOGI2bFdPcElrRVc2RlFaenpRUkpBQSIsInZlciI6IjEuMCIsInhtc19jYyI6WyJDUDEiXSwieG1zX2lkcmVsIjoiMSAxMiIsInhtc19zc20iOiIxIn0.ctUfjyBoi9VXYEj48s5KM7KnHMCd7uKxhJz_NmeveR-n3g9mMYaBJx29iLoEPppLpqryzxBAvvrE2awmtcicw5FvoIjVFEcp0iTA0EbAReJo1TVozb4Wlt5Dtk0fg_dAMM1PZK2YEeiK9Gn_KLOFFjMG0ssZzofqnI2DVRBlZDYKSBESKqA4LLL_NFD8jEGfcfSi7V_BTHwC7WGm5u6ot-EUxhrzhd2L7ZaR3WEZhLaLAs8fMAIaaVHUOE1G16esrX3Vsdf0t3bCoA8iEjXuBXaMF2nqRx2OhPYPrNrQXHh7E6LxF_IeFMH7Yg7TWqgJH9rvRE6dqTaB0G0E5X_ZFA</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quer-171" enabled="false">
            <stringProp name="HTTPSampler.domain">browser.pipe.aria.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/Collector/3.0?qsp=true&amp;content-type=application%2Fbond-compact-binary&amp;client-id=NO_AUTH&amp;sdk-version=AWT-Web-JS-1.8.6&amp;x-apikey=8f7cccc3c534426e8894f45b76e666b9-b80f2549-ddb1-4588-8602-f54037a070e7-7552&amp;client-time-epoch-millis=1730895273223&amp;time-delta-to-apply-millis=use-collector-delta</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="m&#x9;&#xb;&#x1;J8f7cccc3c534426e8894f45b76e666b9-b80f2549-ddb1-4588-8602-f54037a070e7-7552&#xa;&#x1;I&#x12;act_default_source�$20e13620-cf3d-4cc2-919e-106b75e5a024�&#x6;�����d�&#x8;&#xa;&#x4;)$ce08cb63-4446-4c8f-bb1c-e134dcfbba29q�&#xb96;�d�&#x6;custom�&#x6;&#x10;cortex_qos_event�&#xd;&#x9;&#x9;(&#x7;EventId$Cortex.TopicsSDK.GetCapabilities.API&#xa;ResultType&#x7;Success&#x4;Area&#x9;TopicsSDK&#x8;Scenario&#xf;GetCapabilities&#x9;Operation&#x3;API&#x4;Name$Cortex.TopicsSDK.GetCapabilities.API&#x13;ClientCorrelationId$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#xb;Environment&#x4;Prod&#x8;Workload&#xe;MicrosoftTeams&#x8;Platform&#x7;Desktop&#x8;Endpoint&#x5;Teams&#xa;HostSource&#x6;Client&#xf;ClientRequestId$4abbdd78-0024-4c59-9813-28d365d62869&#xf;UserAadObjectId$fa363d87-e3a8-4c79-a3a2-609d481daa1c&#x11;TenantAadObjectId$fdb97aed-2488-4767-b0ea-a607e72006f1&#x12;SiteSubscriptionId$fdb97aed-2488-4767-b0ea-a607e72006f1&#xe;DeploymentRing&#x2;WW&#xa;Permission&#xb;NotLicensed&#xa;SdkVersion&#xe;1.20230809.8.0&#xb;AccountType&#x8;Business&#x18;CustomData_correlationId$4abbdd78-0024-4c59-9813-28d365d62869&#x14;CustomData_requestId$4abbdd78-0024-4c59-9813-28d365d62869&#x1e;CustomData_clientCorrelationId$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#x13;CustomData_scenario&#x1d;TeamsWeb.TopicsSDK.Initialize&#xa;AppInfo.Id&#xe;MicrosoftTeams&#x10;AppInfo.Language&#x5;en-us&#xf;AppInfo.Version&#xe;49/24100324916&#xf;AppInfo.Session$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#x11;UserInfo.Language&#x5;en-US&#x11;UserInfo.TimeZone&#x6; 05:30&#x16;DeviceInfo.BrowserName&#x4;Edge&#x19;DeviceInfo.BrowserVersion&#x9;130.0.0.0&#x11;DeviceInfo.OsName&#x7;Windows&#x14;DeviceInfo.OsVersion&#x2;10&#xd;DeviceInfo.Id$47077452-56ca-489f-a8dc-f66661a4b242&#x10;EventInfo.InitId$c134d372-dfc9-4631-a1e3-685792c87e5d&#x12;EventInfo.Sequence&#x1;4&#x14;EventInfo.SdkVersion&#x10;AWT-Web-JS-1.8.6&#xe;EventInfo.Name&#x10;cortex_qos_event&#xe;EventInfo.Time&#x18;2024-11-06T12:14:31.960Z�&#x1f;&#x9;&#x2;&#x5;&#x10;HasTenantLicense&#x0;&#xe;HasUserLicense&#x0;&#xd;IsPreviewUser&#x0;&#xd;IsIntentional&#x0;&#x18;CustomData_useKMEndpoint&#x1;�&quot;&#x9;&#x8;&#x2;&#x8;Duration&#x0;ffff��@&#xf;LogSamplingRate&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�?&#x0;)$b7e8359a-5446-4c6b-827d-69d023f08503q�&#x52e;��d�&#x6;custom�&#x6;&#x10;cortex_qos_event�&#xd;&#x9;&#x9;$&#x7;EventId(Cortex.TopicsSDK.Bootstrapper.Initialize&#xa;ResultType&#x11;UnexpectedFailure&#x5;Error&#x15;No token in Reference&#x4;Area&#x9;TopicsSDK&#x8;Scenario&#xc;Bootstrapper&#x9;Operation&#xa;Initialize&#x4;Name(Cortex.TopicsSDK.Bootstrapper.Initialize&#x13;ClientCorrelationId$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#xb;Environment&#x4;Prod&#x8;Workload&#xe;MicrosoftTeams&#x8;Platform&#x7;Desktop&#x8;Endpoint&#x5;Teams&#xa;HostSource&#x6;Client&#xf;UserAadObjectId$fa363d87-e3a8-4c79-a3a2-609d481daa1c&#x11;TenantAadObjectId$fdb97aed-2488-4767-b0ea-a607e72006f1&#x12;SiteSubscriptionId$fdb97aed-2488-4767-b0ea-a607e72006f1&#xe;DeploymentRing&#x2;WW&#xa;Permission&#xb;NotLicensed&#xa;SdkVersion&#xe;1.20230809.8.0&#xb;AccountType&#x8;Business&#xa;AppInfo.Id&#xe;MicrosoftTeams&#x10;AppInfo.Language&#x5;en-us&#xf;AppInfo.Version&#xe;49/24100324916&#xf;AppInfo.Session$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#x11;UserInfo.Language&#x5;en-US&#x11;UserInfo.TimeZone&#x6; 05:30&#x16;DeviceInfo.BrowserName&#x4;Edge&#x19;DeviceInfo.BrowserVersion&#x9;130.0.0.0&#x11;DeviceInfo.OsName&#x7;Windows&#x14;DeviceInfo.OsVersion&#x2;10&#xd;DeviceInfo.Id$47077452-56ca-489f-a8dc-f66661a4b242&#x10;EventInfo.InitId$c134d372-dfc9-4631-a1e3-685792c87e5d&#x12;EventInfo.Sequence&#x1;3&#x14;EventInfo.SdkVersion&#x10;AWT-Web-JS-1.8.6&#xe;EventInfo.Name&#x10;cortex_qos_event&#xe;EventInfo.Time&#x18;2024-11-06T12:14:31.210Z�&#x1f;&#x9;&#x2;&#x4;&#x10;HasTenantLicense&#x0;&#xe;HasUserLicense&#x0;&#xd;IsPreviewUser&#x0;&#xd;IsIntentional&#x0;�&quot;&#x9;&#x8;&#x2;&#x8;Duration&#x0;����L]@&#xf;LogSamplingRate&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�?&#x0;)$c46f67a1-1c19-41fc-9a51-73838086aa2aq�&#x52e;��d�&#x6;custom�&#x6;&#x10;cortex_qos_event�&#xd;&#x9;&#x9;&apos;&#x7;EventId Cortex.TopicsSDK.GetLokiConfig.GetAuthToken&#xa;ResultType&#x11;UnexpectedFailure&#xa;ResultCode&#x11;GetAuthTokenError&#x5;Error&#x15;No token in Reference&#x4;Area&#x9;TopicsSDK&#x8;Scenario&#xd;GetLokiConfig&#x9;Operation&#xc;GetAuthToken&#x4;Name Cortex.TopicsSDK.GetLokiConfig.GetAuthToken&#x13;ClientCorrelationId$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#xb;Environment&#x4;Prod&#x8;Workload&#xe;MicrosoftTeams&#x8;Platform&#x7;Desktop&#x8;Endpoint&#x5;Teams&#xa;HostSource&#x6;Client&#xf;UserAadObjectId$fa363d87-e3a8-4c79-a3a2-609d481daa1c&#x11;TenantAadObjectId$fdb97aed-2488-4767-b0ea-a607e72006f1&#x12;SiteSubscriptionId$fdb97aed-2488-4767-b0ea-a607e72006f1&#xe;DeploymentRing&#x2;WW&#xa;Permission&#xb;NotLicensed&#xa;SdkVersion&#xe;1.20230809.8.0&#xb;AccountType&#x8;Business&#x18;CustomData_correlationId$d5d79c29-b9c4-486c-9635-ae887e0ef64e&#x13;CustomData_cacheKey&#xd;lokiAuthToken&#xa;AppInfo.Id&#xe;MicrosoftTeams&#x10;AppInfo.Language&#x5;en-us&#xf;AppInfo.Version&#xe;49/24100324916&#xf;AppInfo.Session$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#x11;UserInfo.Language&#x5;en-US&#x11;UserInfo.TimeZone&#x6; 05:30&#x16;DeviceInfo.BrowserName&#x4;Edge&#x19;DeviceInfo.BrowserVersion&#x9;130.0.0.0&#x11;DeviceInfo.OsName&#x7;Windows&#x14;DeviceInfo.OsVersion&#x2;10&#xd;DeviceInfo.Id$47077452-56ca-489f-a8dc-f66661a4b242&#x10;EventInfo.InitId$c134d372-dfc9-4631-a1e3-685792c87e5d&#x12;EventInfo.Sequence&#x1;2&#x14;EventInfo.SdkVersion&#x10;AWT-Web-JS-1.8.6&#xe;EventInfo.Name&#x10;cortex_qos_event&#xe;EventInfo.Time&#x18;2024-11-06T12:14:31.210Z�&#x1f;&#x9;&#x2;&#x5;&#x10;HasTenantLicense&#x0;&#xe;HasUserLicense&#x0;&#xd;IsPreviewUser&#x0;&#xd;IsIntentional&#x0;&#x1a;CustomData_isExpectedError&#x0;�&quot;&#x9;&#x8;&#x1;&#x8;Duration&#x0;&#x0;�����?&#x0;)$e7b651b6-b19a-41fc-9f33-784f03fa9192q�&#x52e;��d�&#x6;custom�&#x6;&#x10;cortex_qos_event�&#xd;&#x9;&#x9;&apos;&#x7;EventId Cortex.TopicsSDK.GetLokiConfig.GetAuthToken&#xa;ResultType&#x11;UnexpectedFailure&#xa;ResultCode&#x11;GetAuthTokenError&#x5;Error&#x15;No token in Reference&#x4;Area&#x9;TopicsSDK&#x8;Scenario&#xd;GetLokiConfig&#x9;Operation&#xc;GetAuthToken&#x4;Name Cortex.TopicsSDK.GetLokiConfig.GetAuthToken&#x13;ClientCorrelationId$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#xb;Environment&#x4;Prod&#x8;Workload&#xe;MicrosoftTeams&#x8;Platform&#x7;Desktop&#x8;Endpoint&#x5;Teams&#xa;HostSource&#x6;Client&#xf;UserAadObjectId$fa363d87-e3a8-4c79-a3a2-609d481daa1c&#x11;TenantAadObjectId$fdb97aed-2488-4767-b0ea-a607e72006f1&#x12;SiteSubscriptionId$fdb97aed-2488-4767-b0ea-a607e72006f1&#xe;DeploymentRing&#x2;WW&#xa;Permission&#xb;NotLicensed&#xa;SdkVersion&#xe;1.20230809.8.0&#xb;AccountType&#x8;Business&#x18;CustomData_correlationId$d5d79c29-b9c4-486c-9635-ae887e0ef64e&#x13;CustomData_cacheKey&#xd;lokiAuthToken&#xa;AppInfo.Id&#xe;MicrosoftTeams&#x10;AppInfo.Language&#x5;en-us&#xf;AppInfo.Version&#xe;49/24100324916&#xf;AppInfo.Session$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#x11;UserInfo.Language&#x5;en-US&#x11;UserInfo.TimeZone&#x6; 05:30&#x16;DeviceInfo.BrowserName&#x4;Edge&#x19;DeviceInfo.BrowserVersion&#x9;130.0.0.0&#x11;DeviceInfo.OsName&#x7;Windows&#x14;DeviceInfo.OsVersion&#x2;10&#xd;DeviceInfo.Id$47077452-56ca-489f-a8dc-f66661a4b242&#x10;EventInfo.InitId$c134d372-dfc9-4631-a1e3-685792c87e5d&#x12;EventInfo.Sequence&#x1;1&#x14;EventInfo.SdkVersion&#x10;AWT-Web-JS-1.8.6&#xe;EventInfo.Name&#x10;cortex_qos_event&#xe;EventInfo.Time&#x18;2024-11-06T12:14:31.209Z�&#x1f;&#x9;&#x2;&#x5;&#x10;HasTenantLicense&#x0;&#xe;HasUserLicense&#x0;&#xd;IsPreviewUser&#x0;&#xd;IsIntentional&#x0;&#x1a;CustomData_isExpectedError&#x0;�&quot;&#x9;&#x8;&#x1;&#x8;Duration&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�?" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">m	&#xb;&#x1;J8f7cccc3c534426e8894f45b76e666b9-b80f2549-ddb1-4588-8602-f54037a070e7-7552
&#x1;I&#x12;act_default_source�$20e13620-cf3d-4cc2-919e-106b75e5a024�&#x6;�����d�&#x8;
&#x4;)$ce08cb63-4446-4c8f-bb1c-e134dcfbba29q�&#xb96;�d�&#x6;custom�&#x6;&#x10;cortex_qos_event�&#xd;		(&#x7;EventId$Cortex.TopicsSDK.GetCapabilities.API
ResultType&#x7;Success&#x4;Area	TopicsSDK&#x8;Scenario&#xf;GetCapabilities	Operation&#x3;API&#x4;Name$Cortex.TopicsSDK.GetCapabilities.API&#x13;ClientCorrelationId$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#xb;Environment&#x4;Prod&#x8;Workload&#xe;MicrosoftTeams&#x8;Platform&#x7;Desktop&#x8;Endpoint&#x5;Teams
HostSource&#x6;Client&#xf;ClientRequestId$4abbdd78-0024-4c59-9813-28d365d62869&#xf;UserAadObjectId$fa363d87-e3a8-4c79-a3a2-609d481daa1c&#x11;TenantAadObjectId$fdb97aed-2488-4767-b0ea-a607e72006f1&#x12;SiteSubscriptionId$fdb97aed-2488-4767-b0ea-a607e72006f1&#xe;DeploymentRing&#x2;WW
Permission&#xb;NotLicensed
SdkVersion&#xe;1.20230809.8.0&#xb;AccountType&#x8;Business&#x18;CustomData_correlationId$4abbdd78-0024-4c59-9813-28d365d62869&#x14;CustomData_requestId$4abbdd78-0024-4c59-9813-28d365d62869&#x1e;CustomData_clientCorrelationId$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#x13;CustomData_scenario&#x1d;TeamsWeb.TopicsSDK.Initialize
AppInfo.Id&#xe;MicrosoftTeams&#x10;AppInfo.Language&#x5;en-us&#xf;AppInfo.Version&#xe;49/24100324916&#xf;AppInfo.Session$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#x11;UserInfo.Language&#x5;en-US&#x11;UserInfo.TimeZone&#x6; 05:30&#x16;DeviceInfo.BrowserName&#x4;Edge&#x19;DeviceInfo.BrowserVersion	130.0.0.0&#x11;DeviceInfo.OsName&#x7;Windows&#x14;DeviceInfo.OsVersion&#x2;10&#xd;DeviceInfo.Id$47077452-56ca-489f-a8dc-f66661a4b242&#x10;EventInfo.InitId$c134d372-dfc9-4631-a1e3-685792c87e5d&#x12;EventInfo.Sequence&#x1;4&#x14;EventInfo.SdkVersion&#x10;AWT-Web-JS-1.8.6&#xe;EventInfo.Name&#x10;cortex_qos_event&#xe;EventInfo.Time&#x18;2024-11-06T12:14:31.960Z�&#x1f;	&#x2;&#x5;&#x10;HasTenantLicense&#x0;&#xe;HasUserLicense&#x0;&#xd;IsPreviewUser&#x0;&#xd;IsIntentional&#x0;&#x18;CustomData_useKMEndpoint&#x1;�&quot;	&#x8;&#x2;&#x8;Duration&#x0;ffff��@&#xf;LogSamplingRate&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�?&#x0;)$b7e8359a-5446-4c6b-827d-69d023f08503q�&#x52e;��d�&#x6;custom�&#x6;&#x10;cortex_qos_event�&#xd;		$&#x7;EventId(Cortex.TopicsSDK.Bootstrapper.Initialize
ResultType&#x11;UnexpectedFailure&#x5;Error&#x15;No token in Reference&#x4;Area	TopicsSDK&#x8;Scenario&#xc;Bootstrapper	Operation
Initialize&#x4;Name(Cortex.TopicsSDK.Bootstrapper.Initialize&#x13;ClientCorrelationId$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#xb;Environment&#x4;Prod&#x8;Workload&#xe;MicrosoftTeams&#x8;Platform&#x7;Desktop&#x8;Endpoint&#x5;Teams
HostSource&#x6;Client&#xf;UserAadObjectId$fa363d87-e3a8-4c79-a3a2-609d481daa1c&#x11;TenantAadObjectId$fdb97aed-2488-4767-b0ea-a607e72006f1&#x12;SiteSubscriptionId$fdb97aed-2488-4767-b0ea-a607e72006f1&#xe;DeploymentRing&#x2;WW
Permission&#xb;NotLicensed
SdkVersion&#xe;1.20230809.8.0&#xb;AccountType&#x8;Business
AppInfo.Id&#xe;MicrosoftTeams&#x10;AppInfo.Language&#x5;en-us&#xf;AppInfo.Version&#xe;49/24100324916&#xf;AppInfo.Session$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#x11;UserInfo.Language&#x5;en-US&#x11;UserInfo.TimeZone&#x6; 05:30&#x16;DeviceInfo.BrowserName&#x4;Edge&#x19;DeviceInfo.BrowserVersion	130.0.0.0&#x11;DeviceInfo.OsName&#x7;Windows&#x14;DeviceInfo.OsVersion&#x2;10&#xd;DeviceInfo.Id$47077452-56ca-489f-a8dc-f66661a4b242&#x10;EventInfo.InitId$c134d372-dfc9-4631-a1e3-685792c87e5d&#x12;EventInfo.Sequence&#x1;3&#x14;EventInfo.SdkVersion&#x10;AWT-Web-JS-1.8.6&#xe;EventInfo.Name&#x10;cortex_qos_event&#xe;EventInfo.Time&#x18;2024-11-06T12:14:31.210Z�&#x1f;	&#x2;&#x4;&#x10;HasTenantLicense&#x0;&#xe;HasUserLicense&#x0;&#xd;IsPreviewUser&#x0;&#xd;IsIntentional&#x0;�&quot;	&#x8;&#x2;&#x8;Duration&#x0;����L]@&#xf;LogSamplingRate&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�?&#x0;)$c46f67a1-1c19-41fc-9a51-73838086aa2aq�&#x52e;��d�&#x6;custom�&#x6;&#x10;cortex_qos_event�&#xd;		&apos;&#x7;EventId Cortex.TopicsSDK.GetLokiConfig.GetAuthToken
ResultType&#x11;UnexpectedFailure
ResultCode&#x11;GetAuthTokenError&#x5;Error&#x15;No token in Reference&#x4;Area	TopicsSDK&#x8;Scenario&#xd;GetLokiConfig	Operation&#xc;GetAuthToken&#x4;Name Cortex.TopicsSDK.GetLokiConfig.GetAuthToken&#x13;ClientCorrelationId$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#xb;Environment&#x4;Prod&#x8;Workload&#xe;MicrosoftTeams&#x8;Platform&#x7;Desktop&#x8;Endpoint&#x5;Teams
HostSource&#x6;Client&#xf;UserAadObjectId$fa363d87-e3a8-4c79-a3a2-609d481daa1c&#x11;TenantAadObjectId$fdb97aed-2488-4767-b0ea-a607e72006f1&#x12;SiteSubscriptionId$fdb97aed-2488-4767-b0ea-a607e72006f1&#xe;DeploymentRing&#x2;WW
Permission&#xb;NotLicensed
SdkVersion&#xe;1.20230809.8.0&#xb;AccountType&#x8;Business&#x18;CustomData_correlationId$d5d79c29-b9c4-486c-9635-ae887e0ef64e&#x13;CustomData_cacheKey&#xd;lokiAuthToken
AppInfo.Id&#xe;MicrosoftTeams&#x10;AppInfo.Language&#x5;en-us&#xf;AppInfo.Version&#xe;49/24100324916&#xf;AppInfo.Session$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#x11;UserInfo.Language&#x5;en-US&#x11;UserInfo.TimeZone&#x6; 05:30&#x16;DeviceInfo.BrowserName&#x4;Edge&#x19;DeviceInfo.BrowserVersion	130.0.0.0&#x11;DeviceInfo.OsName&#x7;Windows&#x14;DeviceInfo.OsVersion&#x2;10&#xd;DeviceInfo.Id$47077452-56ca-489f-a8dc-f66661a4b242&#x10;EventInfo.InitId$c134d372-dfc9-4631-a1e3-685792c87e5d&#x12;EventInfo.Sequence&#x1;2&#x14;EventInfo.SdkVersion&#x10;AWT-Web-JS-1.8.6&#xe;EventInfo.Name&#x10;cortex_qos_event&#xe;EventInfo.Time&#x18;2024-11-06T12:14:31.210Z�&#x1f;	&#x2;&#x5;&#x10;HasTenantLicense&#x0;&#xe;HasUserLicense&#x0;&#xd;IsPreviewUser&#x0;&#xd;IsIntentional&#x0;&#x1a;CustomData_isExpectedError&#x0;�&quot;	&#x8;&#x1;&#x8;Duration&#x0;&#x0;�����?&#x0;)$e7b651b6-b19a-41fc-9f33-784f03fa9192q�&#x52e;��d�&#x6;custom�&#x6;&#x10;cortex_qos_event�&#xd;		&apos;&#x7;EventId Cortex.TopicsSDK.GetLokiConfig.GetAuthToken
ResultType&#x11;UnexpectedFailure
ResultCode&#x11;GetAuthTokenError&#x5;Error&#x15;No token in Reference&#x4;Area	TopicsSDK&#x8;Scenario&#xd;GetLokiConfig	Operation&#xc;GetAuthToken&#x4;Name Cortex.TopicsSDK.GetLokiConfig.GetAuthToken&#x13;ClientCorrelationId$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#xb;Environment&#x4;Prod&#x8;Workload&#xe;MicrosoftTeams&#x8;Platform&#x7;Desktop&#x8;Endpoint&#x5;Teams
HostSource&#x6;Client&#xf;UserAadObjectId$fa363d87-e3a8-4c79-a3a2-609d481daa1c&#x11;TenantAadObjectId$fdb97aed-2488-4767-b0ea-a607e72006f1&#x12;SiteSubscriptionId$fdb97aed-2488-4767-b0ea-a607e72006f1&#xe;DeploymentRing&#x2;WW
Permission&#xb;NotLicensed
SdkVersion&#xe;1.20230809.8.0&#xb;AccountType&#x8;Business&#x18;CustomData_correlationId$d5d79c29-b9c4-486c-9635-ae887e0ef64e&#x13;CustomData_cacheKey&#xd;lokiAuthToken
AppInfo.Id&#xe;MicrosoftTeams&#x10;AppInfo.Language&#x5;en-us&#xf;AppInfo.Version&#xe;49/24100324916&#xf;AppInfo.Session$e7a5eb27-9d29-4f32-8050-e84a81032a9e&#x11;UserInfo.Language&#x5;en-US&#x11;UserInfo.TimeZone&#x6; 05:30&#x16;DeviceInfo.BrowserName&#x4;Edge&#x19;DeviceInfo.BrowserVersion	130.0.0.0&#x11;DeviceInfo.OsName&#x7;Windows&#x14;DeviceInfo.OsVersion&#x2;10&#xd;DeviceInfo.Id$47077452-56ca-489f-a8dc-f66661a4b242&#x10;EventInfo.InitId$c134d372-dfc9-4631-a1e3-685792c87e5d&#x12;EventInfo.Sequence&#x1;1&#x14;EventInfo.SdkVersion&#x10;AWT-Web-JS-1.8.6&#xe;EventInfo.Name&#x10;cortex_qos_event&#xe;EventInfo.Time&#x18;2024-11-06T12:14:31.209Z�&#x1f;	&#x2;&#x5;&#x10;HasTenantLicense&#x0;&#xe;HasUserLicense&#x0;&#xd;IsPreviewUser&#x0;&#xd;IsIntentional&#x0;&#x1a;CustomData_isExpectedError&#x0;�&quot;	&#x8;&#x1;&#x8;Duration&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�?</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Microsoft Edge&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;130&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-170" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/4bf78d02c2ff1323-4f1bc27ce295c13c</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="issuer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">issuer</stringProp>
                  <stringProp name="Argument.value">prod-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">connect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="se" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">se</stringProp>
                  <stringProp name="Argument.value">1731471417824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1730894978824</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scae" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scae</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">v4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tc</stringProp>
                  <stringProp name="Argument.value">{&quot;cv&quot;:&quot;2024.39.01.12&quot;,&quot;ua&quot;:&quot;TeamsCDL&quot;,&quot;hr&quot;:&quot;&quot;,&quot;v&quot;:&quot;49/24100324916&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">40</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="auth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="epid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">epid</stringProp>
                  <stringProp name="Argument.value">505cfaf5-8877-4464-86af-a88c091c2b4b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="userActivity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userActivity</stringProp>
                  <stringProp name="Argument.value">{&quot;state&quot;:&quot;active&quot;,&quot;cv&quot;:&quot;Vk2dzLiBx3svkqynlLMriA.0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccid</stringProp>
                  <stringProp name="Argument.value">KOXxNUq-TPQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cor_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cor_id</stringProp>
                  <stringProp name="Argument.value">71b21d26-3aa4-44c1-8e81-dc4b39c8996b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="con_num" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">con_num</stringProp>
                  <stringProp name="Argument.value">1730895038928_2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connected" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">connected</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730895284224</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-MS-Migration" elementType="Header">
                  <stringProp name="Header.name">X-MS-Migration</stringProp>
                  <stringProp name="Header.value">True</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="X-Ms-Test-User" elementType="Header">
                  <stringProp name="Header.name">X-Ms-Test-User</stringProp>
                  <stringProp name="Header.value">False</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IjZMcUZtU0VIWHI1cGVZZUk4bW9jNUZJMXpFZjN2SVNUUnpyUkZ5Smk4ZU0iLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJodHRwczovL2ljMy50ZWFtcy5vZmZpY2UuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZmRiOTdhZWQtMjQ4OC00NzY3LWIwZWEtYTYwN2U3MjAwNmYxLyIsImlhdCI6MTczMDg5NDg3MiwibmJmIjoxNzMwODk0ODcyLCJleHAiOjE3MzA5ODE1NzIsImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBVlFBcS84WUFBQUE4dkVHZzN6a1ZuTUFKNHFqS242MjUvZHV5Wit5VGN6Tm04N3VmcjBpVE1OVUcvdzRrUlZwQUdPTlRraGl2WlhCYlc5Y1ZJcnFaWFhDK0ZLeThQMDVLMW82S3k3a1dTK1d5QVRTL3Bnc1UvUT0iLCJhbXIiOlsicHdkIiwicnNhIiwibWZhIl0sImFwcGlkIjoiMWZlYzhlNzgtYmNlNC00YWFmLWFiMWItNTQ1MWNjMzg3MjY0IiwiYXBwaWRhY3IiOiIwIiwiZGV2aWNlaWQiOiI3MDYyMjRhNy1jMGFhLTRlZTQtOWE1Zi01YWUwMzQwODdlYjUiLCJmYW1pbHlfbmFtZSI6Ik1hbGkiLCJnaXZlbl9uYW1lIjoiQXJjaGFuYSIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjIwLjI0Mi4xODUuMzkiLCJuYW1lIjoiTWFsaSwgQXJjaGFuYSIsIm9pZCI6ImZhMzYzZDg3LWUzYTgtNGM3OS1hM2EyLTYwOWQ0ODFkYWExYyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS03NDMxMTEzNTktMjc0MTU5Nzg2NS0yNjIzNTg5MDk1LTEyODczNiIsInB1aWQiOiIxMDAzMjAwM0Q5MkQ2OTlBIiwicHdkX3VybCI6Imh0dHBzOi8vcG9ydGFsLm1pY3Jvc29mdG9ubGluZS5jb20vQ2hhbmdlUGFzc3dvcmQuYXNweCIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4VlR3cWptbGdjZElwUGdDa3dFZ2xibGJBS1JiQUEuIiwic2NwIjoiVGVhbXMuQWNjZXNzQXNVc2VyLkFsbCIsInN1YiI6IkRwZ0lOUXZ5V3cyVGVCaXVfMVpxTDdsYlZ2Z1NGUG5aeGlIdjlKY2N2dkUiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoiOGI2bFdPcElrRVc2RlFaenpRUkpBQSIsInZlciI6IjEuMCIsInhtc19jYyI6WyJDUDEiXSwieG1zX2lkcmVsIjoiMSAxMiIsInhtc19zc20iOiIxIn0.ctUfjyBoi9VXYEj48s5KM7KnHMCd7uKxhJz_NmeveR-n3g9mMYaBJx29iLoEPppLpqryzxBAvvrE2awmtcicw5FvoIjVFEcp0iTA0EbAReJo1TVozb4Wlt5Dtk0fg_dAMM1PZK2YEeiK9Gn_KLOFFjMG0ssZzofqnI2DVRBlZDYKSBESKqA4LLL_NFD8jEGfcfSi7V_BTHwC7WGm5u6ot-EUxhrzhd2L7ZaR3WEZhLaLAs8fMAIaaVHUOE1G16esrX3Vsdf0t3bCoA8iEjXuBXaMF2nqRx2OhPYPrNrQXHh7E6LxF_IeFMH7Yg7TWqgJH9rvRE6dqTaB0G0E5X_ZFA</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-172" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/4bf78d02c2ff1323-4f1bc27ce295c13c?sr=QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk&amp;issuer=prod-2&amp;sp=connect&amp;se=1731471417824&amp;st=1730894978824&amp;scae=1&amp;sig=ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg&amp;v=v4&amp;tc=%7B%22cv%22:%222024.39.01.12%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2249/24100324916%22%7D&amp;timeout=40&amp;auth=true&amp;epid=505cfaf5-8877-4464-86af-a88c091c2b4b&amp;userActivity=%7B%22state%22%3A%22active%22%2C%22cv%22%3A%22Vk2dzLiBx3svkqynlLMriA.0.1%22%7D&amp;ccid=KOXxNUq-TPQ&amp;cor_id=71b21d26-3aa4-44c1-8e81-dc4b39c8996b&amp;con_num=1730895038928_2&amp;connected=true&amp;t=1730895284867</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,x-ms-migration,x-ms-test-user</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-173" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/4bf78d02c2ff1323-4f1bc27ce295c13c?sr=QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk&amp;issuer=prod-2&amp;sp=connect&amp;se=1731471417824&amp;st=1730894978824&amp;scae=1&amp;sig=ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg&amp;v=v4&amp;tc=%7B%22cv%22:%222024.39.01.12%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2249/24100324916%22%7D&amp;timeout=40&amp;auth=true&amp;epid=505cfaf5-8877-4464-86af-a88c091c2b4b&amp;userActivity=%7B%22state%22%3A%22active%22%2C%22cv%22%3A%22Vk2dzLiBx3svkqynlLMriA.0.1%22%7D&amp;ccid=KOXxNUq-TPQ&amp;cor_id=71b21d26-3aa4-44c1-8e81-dc4b39c8996b&amp;con_num=1730895038928_2&amp;connected=true&amp;t=1730895284868</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,x-ms-migration,x-ms-test-user</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-174" enabled="false">
            <stringProp name="HTTPSampler.domain">pub-ent-usnc-12-t.trouter.teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/socket.io/1/xhr-polling/4bf78d02c2ff1323-4f1bc27ce295c13c?sr=QU4AAPsg1g-oMOBKkUeKOXxNUq-TPRKcxi2DZ5_e3PctPf45MuKzDiWck7or6o2E76fQ4VkDqByJkktn3VSgfK95GcS6yqn2P53QV0ch5OHemgk5nPk&amp;issuer=prod-2&amp;sp=connect&amp;se=1731471417824&amp;st=1730894978824&amp;scae=1&amp;sig=ffkXGgPb1Hi6906muLV-trIBVDQSCIhVVSskNYFjpDg&amp;v=v4&amp;tc=%7B%22cv%22:%222024.39.01.12%22,%22ua%22:%22TeamsCDL%22,%22hr%22:%22%22,%22v%22:%2249/24100324916%22%7D&amp;timeout=40&amp;auth=true&amp;epid=505cfaf5-8877-4464-86af-a88c091c2b4b&amp;userActivity=%7B%22state%22%3A%22active%22%2C%22cv%22%3A%22Vk2dzLiBx3svkqynlLMriA.0.1%22%7D&amp;ccid=KOXxNUq-TPQ&amp;cor_id=71b21d26-3aa4-44c1-8e81-dc4b39c8996b&amp;con_num=1730895038928_2&amp;connected=true&amp;t=1730895284867</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">5:1+::{&quot;name&quot;:&quot;trouter.processed_message_loss&quot;,&quot;args&quot;:[{&quot;droppedIndicators&quot;:[{&quot;tag&quot;:&quot;&quot;,&quot;etag&quot;:&quot;2024-11-06T12:14:40.8087731Z&quot;},{&quot;tag&quot;:&quot;messaging&quot;,&quot;etag&quot;:&quot;2024-11-06T12:14:40.8088599Z&quot;},{&quot;tag&quot;:&quot;messagingsync&quot;,&quot;etag&quot;:&quot;2024-11-06T12:14:40.8088769Z&quot;},{&quot;tag&quot;:&quot;pinnedchannel&quot;,&quot;etag&quot;:&quot;2024-11-06T12:14:40.8088859Z&quot;},{&quot;tag&quot;:&quot;tps&quot;,&quot;etag&quot;:&quot;2024-11-06T12:14:40.8088960Z&quot;}]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="X-MS-Migration" elementType="Header">
                  <stringProp name="Header.name">X-MS-Migration</stringProp>
                  <stringProp name="Header.value">True</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="X-Ms-Test-User" elementType="Header">
                  <stringProp name="Header.name">X-Ms-Test-User</stringProp>
                  <stringProp name="Header.value">False</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IjZMcUZtU0VIWHI1cGVZZUk4bW9jNUZJMXpFZjN2SVNUUnpyUkZ5Smk4ZU0iLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJodHRwczovL2ljMy50ZWFtcy5vZmZpY2UuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZmRiOTdhZWQtMjQ4OC00NzY3LWIwZWEtYTYwN2U3MjAwNmYxLyIsImlhdCI6MTczMDg5NDg3MiwibmJmIjoxNzMwODk0ODcyLCJleHAiOjE3MzA5ODE1NzIsImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBVlFBcS84WUFBQUE4dkVHZzN6a1ZuTUFKNHFqS242MjUvZHV5Wit5VGN6Tm04N3VmcjBpVE1OVUcvdzRrUlZwQUdPTlRraGl2WlhCYlc5Y1ZJcnFaWFhDK0ZLeThQMDVLMW82S3k3a1dTK1d5QVRTL3Bnc1UvUT0iLCJhbXIiOlsicHdkIiwicnNhIiwibWZhIl0sImFwcGlkIjoiMWZlYzhlNzgtYmNlNC00YWFmLWFiMWItNTQ1MWNjMzg3MjY0IiwiYXBwaWRhY3IiOiIwIiwiZGV2aWNlaWQiOiI3MDYyMjRhNy1jMGFhLTRlZTQtOWE1Zi01YWUwMzQwODdlYjUiLCJmYW1pbHlfbmFtZSI6Ik1hbGkiLCJnaXZlbl9uYW1lIjoiQXJjaGFuYSIsImlkdHlwIjoidXNlciIsImlwYWRkciI6IjIwLjI0Mi4xODUuMzkiLCJuYW1lIjoiTWFsaSwgQXJjaGFuYSIsIm9pZCI6ImZhMzYzZDg3LWUzYTgtNGM3OS1hM2EyLTYwOWQ0ODFkYWExYyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS03NDMxMTEzNTktMjc0MTU5Nzg2NS0yNjIzNTg5MDk1LTEyODczNiIsInB1aWQiOiIxMDAzMjAwM0Q5MkQ2OTlBIiwicHdkX3VybCI6Imh0dHBzOi8vcG9ydGFsLm1pY3Jvc29mdG9ubGluZS5jb20vQ2hhbmdlUGFzc3dvcmQuYXNweCIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4VlR3cWptbGdjZElwUGdDa3dFZ2xibGJBS1JiQUEuIiwic2NwIjoiVGVhbXMuQWNjZXNzQXNVc2VyLkFsbCIsInN1YiI6IkRwZ0lOUXZ5V3cyVGVCaXVfMVpxTDdsYlZ2Z1NGUG5aeGlIdjlKY2N2dkUiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoiOGI2bFdPcElrRVc2RlFaenpRUkpBQSIsInZlciI6IjEuMCIsInhtc19jYyI6WyJDUDEiXSwieG1zX2lkcmVsIjoiMSAxMiIsInhtc19zc20iOiIxIn0.ctUfjyBoi9VXYEj48s5KM7KnHMCd7uKxhJz_NmeveR-n3g9mMYaBJx29iLoEPppLpqryzxBAvvrE2awmtcicw5FvoIjVFEcp0iTA0EbAReJo1TVozb4Wlt5Dtk0fg_dAMM1PZK2YEeiK9Gn_KLOFFjMG0ssZzofqnI2DVRBlZDYKSBESKqA4LLL_NFD8jEGfcfSi7V_BTHwC7WGm5u6ot-EUxhrzhd2L7ZaR3WEZhLaLAs8fMAIaaVHUOE1G16esrX3Vsdf0t3bCoA8iEjXuBXaMF2nqRx2OhPYPrNrQXHh7E6LxF_IeFMH7Yg7TWqgJH9rvRE6dqTaB0G0E5X_ZFA</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-176" enabled="false">
            <stringProp name="HTTPSampler.domain">safebrowsing.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v4/threatListUpdates:fetch</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="$req" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$req</stringProp>
                  <stringProp name="Argument.value">Ch4KDGdvb2dsZWNocm9tZRIOMTMwLjAuNjcyMy4xMTYaKQgFEAEaGwoNCAUQBhgBIgMwMDEwARCzoBkaAhgLIiRdWiIEIAEgAigBGigIEBABGhoKDQgQEAYYASIDMDAxMAEQ8CgaAhgLlqoQ0yIEIAEgAigBGikIARABGhsKDQgBEAYYASIDMDAxMAEQpLUPGgIYC6OTQ2siBCABIAIoARopCAMQARobCg0IAxAGGAEiAzAwMTABEMqsDxoCGAsnUov6IgQgASACKAEaKQgOEAEaGwoNCA4QBhgBIgMwMDEwARD-zgcaAhgLflNoliIEIAEgAigBGikIBxABGhsKDQgHEAYYASIDMDAxMAEQqvsPGgIYC0g5hDgiBCABIAIoARooCAEQCBoaCg0IARAIGAEiAzAwMTAEEIE7GgIYC9u4M-4iBCABIAIoBBopCA8QARobCg0IDxAGGAEiAzAwMTABELn0AxoCGAtCu1UDIgQgASACKAEaJwgJEAEaGQoNCAkQBhgBIgMwMDEwARAjGgIYC5eeSMsiBCABIAIoARooCAgQARoaCg0ICBAGGAEiAzAwMTABEIgXGgIYC3F0gg0iBCABIAIoARopCA0QARobCg0IDRAGGAEiAzAwMTABEMewAhoCGAujkw8OIgQgASACKAEiAggB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$ct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$ct</stringProp>
                  <stringProp name="Argument.value">application/x-protobuf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-HTTP-Method-Override" elementType="Header">
                  <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="NewChat">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NewChat-177" enabled="false">
            <stringProp name="HTTPSampler.domain">teams.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;content-encoding=gzip</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">apikey,cache-control,client-id,client-version,content-type,upload-time</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NewChat-180">
            <stringProp name="HTTPSampler.domain">c.pki.goog</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/r/r1.crl</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age = 3000</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Microsoft-CryptoAPI/10.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Query1">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-181">
            <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-back.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/harvey-chatbot</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query1-182">
            <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-back.azurewebsites.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/harvey-chatbot</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query_string&quot;:&quot;Hi\n&quot;,&quot;memory_messages&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJhcGk6Ly8xYjNiZGM1Yy0yZjRhLTQyNzYtOWVjOC05OGFmMzYxMTU2MjEiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9mZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEvIiwiaWF0IjoxNzMwODk0OTIzLCJuYmYiOjE3MzA4OTQ5MjMsImV4cCI6MTczMDg5OTE4MywiYWNyIjoiMSIsImFpbyI6IkFWUUFxLzhZQUFBQWU5cDVOandPUHM5eDNIZFpYblozak52T3NENVF4YlBnQjFEYklGQkFtTTMvZHNHcUFSZUtHN2g3WEdZTlp0VCtRNWk4S1Z1UFRaMm1HWHhFODRIb3R5OHpNVHQ4OU5TaXh5WG9mN0wxUEdRPSIsImFtciI6WyJwd2QiLCJtZmEiXSwiYXBwaWQiOiJjYzM3N2MxNC1hNDg3LTQ1NzItOGI4OC01MTIxZGQ2NTQwZjMiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6Ik1hbGkiLCJnaXZlbl9uYW1lIjoiQXJjaGFuYSIsImlwYWRkciI6IjIwLjI0Mi4xODUuMzkiLCJuYW1lIjoiTWFsaSwgQXJjaGFuYSIsIm9pZCI6ImZhMzYzZDg3LWUzYTgtNGM3OS1hM2EyLTYwOWQ0ODFkYWExYyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS03NDMxMTEzNTktMjc0MTU5Nzg2NS0yNjIzNTg5MDk1LTEyODczNiIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4VnpjT3h0S0wzWkNuc2lZcnpZUlZpRmJBS1JiQUEuIiwic2NwIjoidXNlcl9pbXBlcnNvbmF0aW9uIiwic3ViIjoiZFJkdkR5aWVQRmdxZlg4SnNPaTliQW93LWMyQVhQZHljeUhSaG1FZUw4OCIsInRpZCI6ImZkYjk3YWVkLTI0ODgtNDc2Ny1iMGVhLWE2MDdlNzIwMDZmMSIsInVuaXF1ZV9uYW1lIjoiQXJjaGFuYS5NYWxpQGhiZnVsbGVyLmNvbSIsInVwbiI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1dGkiOiJtbENDRmZobTZFU1l0VWhHdDdFQUFBIiwidmVyIjoiMS4wIn0.b6VmaViCcTyyxTA_e0gnde0Ao_EwMM3rao91dJjlYfUY6i2gc7lBVcFT5oiro5QvAp7fnxtyJdXjBMOP2EJ78GAPxXyh5V8qUUELXkO46SmpuT2Xe_59d0i1hFkq5C7L5J90kISAAIC3_7oM0AAfgSyqwC9mRT0b-ioQufvNmwi-lVcyXDTyg-_vWDemTuhHQa2alF7nPz11cAZipcPFPF2gG4lzmH6HEUZiTbbXWdZLjX3D-Q7_01i4VmAgYyVig9a8_zJstHfe1_SK2VwV5BlAE1DGlb8qtxoto-N5M_0vZDxfVHyZHKfV_F0ve3Nedm-GSuQinr5jzr76phtesg</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
