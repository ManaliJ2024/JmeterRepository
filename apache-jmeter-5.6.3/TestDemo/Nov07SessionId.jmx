<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">https://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <stringProp name="HTTPSampler.domain">https://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Applaunch" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Appl-211" enabled="true">
              <stringProp name="HTTPSampler.domain">config.teams.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/config/v1/MicrosoftTeams/49_24277.3507.3205.5228</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ClientId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ClientId</stringProp>
                    <stringProp name="Argument.value">59ae4c46-0ab8-4a16-bf8e-90b986a7d903</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Virtualization" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Virtualization</stringProp>
                    <stringProp name="Argument.value">vdi</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="aaduserid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">aaduserid</stringProp>
                    <stringProp name="Argument.value">fa363d87-e3a8-4c79-a3a2-609d481daa1c</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="agents" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">agents</stringProp>
                    <stringProp name="Argument.value">TeamsBuilds,TeamsWebview2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="audience" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">audience</stringProp>
                    <stringProp name="Argument.value">general</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="cloud" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cloud</stringProp>
                    <stringProp name="Argument.value">prod</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="country" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">country</stringProp>
                    <stringProp name="Argument.value">US</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="cpuarch" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cpuarch</stringProp>
                    <stringProp name="Argument.value">x64</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="desktopVersion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">desktopVersion</stringProp>
                    <stringProp name="Argument.value">24277.3507.3205.5228</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="environment" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">environment</stringProp>
                    <stringProp name="Argument.value">prod</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="Argument.value">fa363d87-e3a8-4c79-a3a2-609d481daa1c</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="mtmaCount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">mtmaCount</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="osplatform" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">osplatform</stringProp>
                    <stringProp name="Argument.value">windows</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="osversion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">osversion</stringProp>
                    <stringProp name="Argument.value">10.0.22631</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="teamsAddOnPlan" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">teamsAddOnPlan</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="teamsLicenseCategory" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">teamsLicenseCategory</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="teamslocale" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">teamslocale</stringProp>
                    <stringProp name="Argument.value">en-us</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="teamsring" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">teamsring</stringProp>
                    <stringProp name="Argument.value">general</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="tenantId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">tenantId</stringProp>
                    <stringProp name="Argument.value">fdb97aed-2488-4767-b0ea-a607e72006f1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Encoding" elementType="Header">
                    <stringProp name="Header.name">Content-Encoding</stringProp>
                    <stringProp name="Header.value">gzip</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Applaunch">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Applaunch-212" enabled="false">
              <stringProp name="HTTPSampler.domain">self.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">�k�$Yvߣ{&#x1e;�]���~�&#x1b;4V�&#x17;֛Q&#x15;7�1̗z�43�US�=&#xd;����&#x11;7k�Ί��Ȝ�Z&#x6;c��h�1��&quot;d�6F&#x6;�&#x8;a�H&#x1f;l&#x7f;��X&#xc;�H&#x2;�e&#x1b;�&quot;�1����X�E����|T�To����&apos;{�&#x14;ĭ���8q�s�?�/=�,Z�O�W��^����&#x7f;����&#x1f;����?���&#x16;�xn�V��A�AdE��&#x8;c�XA��Nd���?��&apos;�f�e��dI�(�f��բ�.:q7+�o̾�u�����8y7˵��33�.�o��,˱q�E��&#x1f;E��xJ�����ɳH�b��َ&#x1b;�&#x1b;�ڪ�L���͕(\6�p�v�W��&#xe;W&gt;����i�A���˛ݢm|��̱o&#xc;c_&#x1e;�~TS֢�h۾�&#x16;�b���n��&#x17;�읎n��H�&lt;�7��Y�&apos;��&#x1c;��	/�?~z�v&#x17;�c/Z��&#x16;-H�񉾘&#x1f;�d&#x6;㓟����绺�;:�N\�o��&#x7;����3Ǿ�����́,�ꗿl^-Lg�]�&#x3;&#x7f;1���Uϳ�&#xd;o���WC�]�&#x2;s9Z�LǷ�-?&#xc;µ��_{�&#x1b;_&#x8;��e�&#xe;̍�^3������2Ck�v�5���/&#x1b;��%T��_��W&#x1c;&lt;�_�9f|���I��&#x16;��l�&#x1c;3O�����$)zy��^[g&apos;Wz%�,���4�i=)ں\ezv�2N,�������h&#x13;[�Ӭ&apos;:�;Y�����Y,�&#x19;�;�xGg���A�ۺS�&#x7b3;&#x3;�3N&quot;���&apos;7s�������J/k��&#x1d;4��N��&#xe;��|e�w��ո�ҝ�&#xe;��t�.��a�Z-v�E�!ᓔȘGKC&#xd;V-�m�/:Ɖ�v�Z���&#x19;.��A�� vޭ&#x1e;o��V+Ũ����og�;��&#x1b;���&#xe;��L���T�=�&#x15;g���z�&#x52d;�q~M��%���fY=t63l��2N����e��gǌ����Y�@���3�A�K�j&lt;����!g��GJ�&#xe;����RO&#x1a;g�Hd~?Ku&apos;���&#x4;���&#x6;��)�t�&#x17;���5̦v������&#x6;ƙ�аҎ����-(&lt;���&#xb;?&#x1b;,(kA�&#xb;�_Pႊ&#x16;l{�	&#x16;\g�u&#x17;�p��&#x16;|w��&#x16;&#x2;&#x7f;!t&#x16;Bo!�&#x17;�`!&#xd;
&#x17;�&#x8;eQ�R8l&#x1c;&#xe;&#xe;\	WP6����&lt;����.�\��E9&#xf;y&lt;��&#xe;&#xd;
�P&#x1;�&#x5;&#x1e;D��H-ظ��8 &#x10;�a���!�s&#x17;l&#x1f;龍���/x����^��jNͭy5����&#xd;
k�[������fG5Ǫ9^��kNPs���j.�5&#x5ef;y(��&lt;�&#x8;k���N��k�U&#xb;T-pjAP&#xb;�Zh�B�&#x16;:�Э�^-�kaP&#xb;�Zd�&quot;�&#x16;�0A&#x16;&#xe;&#x7;��&#x3;&#x12;X��jJ�8\&#x1c;��X�F&gt;[�@&lt;d�I&#x81;4Ȩ&#x1c;���&#xd;
b*&#x7;y!���P`My��!&#x1d;�*��(㡌�s&#x1f;�}�&#xf;pM�&#xc;��@&lt;dW&#x1;�&#xf;�C�8�&#x16;!-�5&quot;�Cv�R8�/�n[�&#x18;�!��,&#x1c;H��6U���&#xd;�mꖚ�&#x11;&#x7;�ێ�&#x3;qP,*&#xc;&#x7;�\Ĺ�&#x6;�Av��9�G%�R���9d��e&#x1b;��h��}B�CV;D�&#x8;�&quot;��X&#x7f;�@��@�&#xe;du &apos;�T�Q�U�ߊ�C&#x1c;�&#xb;&#x1d;;Яc#/�t�_�&#xd;��&#x4;�:��ak`s`{��&#x1d;��@�&#xe;�t�&#x10;&#x1c;�&#x8;K�&#x3;y�&#x18;&#x1c;��	�&#x1b;��&#x1a;&#x1c;��@N&#x7;m�A�p�*&#x1c;4&#xb;&#x7;�&#x81;�&#xe;Z�&#x3;�&#x1d;�ف�]�Ɓ�&#x6;&#x1d;�h&#xf;.dv�K&#x17;r��х|��8�&#x17;:t��|.�C.�&#xd;p0&#xd;��C:ځ�v�BN&#x17;:t!��:�&#x13;���υ&lt;�5&#x17;:tQ�.dqQ�&#x1e;t�A&#x16;&#xf;��%�j&#x1e;�؃&#x1e;=��A�&#x1e;��A��_8�&#x6;&#x19;�q &#x1d;u�A�&#x1e;ڪ&#x7;=zУ&#x7;�=�у&#xe;=��Av&#xf;�{�ݫ^0�Av&#xf;�{�&#x1d;�&#x11;&#x7;��~=�q���&#xf;�&gt;Ρk&#xf;����xx&#x1e;&#xf;���y&lt;����xh�p�5&#x1f;���3�Ч���S&#x1f;r�&#xf;��Ɓx���}��&#x11;�l���&gt;d�!�&#xf;9}��CFXQ&#x1c;8�^}&#x1a;&#x2;Խ&#xf;�|�և&lt;&gt;��!�&#xf;Y|�ᣎ}Ա&#xf;���ɇn�q�j��&#x6;�-P4&quot;��^&#x3;�&#x16;@�&#x1;t&#x1a;@�&#x0;�&#xc; _&#x0;�&#x2;�&#x17;@�&#x0;z&#xd;��&#x0;�O&#x0;�&#x5;�+��&#x2;�&#x15;@�&#x0;2&#x5;x�&#x3;�&#x15;�@�BU&amp;&#xd;
���&#x2;�&#x17;�=&#x6;h�&#x1;d&#xc; [&#x0;]��+�\!d&#xd;
��&#x10;6)T�e�Y��&#xe;![h��!&#xf;d&#xb;![�w&lt;�&#xe;C�3!�:D&#x1d;��[��&#x19;B�&#x10;�&#xb;�.m&quot;�P�!t&#x18;z4�8�x�|h�!Lj��&#x8;�	&#x7;��&#xc;!d&#xf;!w&#x8;�À�&#x14;�Ż&#x13;�]� o&#x4;y#��&#x8;2G&#x16;�Z&#x4;}Fh�&#x11;t&#x1a;A�&#x11;䎠�&#x8;rG�;��&#x11;d���&#x8;�� w��&#x19;A��KK�ky&lt;&#x10;&#x7;�&quot;�&#x17;A�&#x8;m0�|&#x11;�_&#x4;}F�C���9t&#x18;�ģ~#��&#x8;�&#x8;��ƾ����W��&#x10;&#x8;��	4�&#x16;�E&#x3;�~0��&#x17;�9,��;xU�����3&#xb;&#x378;�3.�h�-�t+��&#xd;
�Akn�L�M�B��,&#x1b;2KX�&#x1d;���[4�&#x1d;&#x3;��Ϡ�&#xb;&#x19;�AUމ���?U9%e3&#x1f;^&#x17;U�!�2�2+�q�E��&#xc;X�.I�a*gTy���(J���7�X�&gt;HEL���;��Q��&#x14;�&#x11;&#x2;�G�K&#xf;��a@_IGjW�&#x14;U&#xf;7J&#x7f;J��ʛV����1!`&#x2;uoS�6&#x1d;+�&#x14;&#x1e;��|&quot;:(E��&#x14;�&#x13;&#x2;���ڬ&#x1e;�+&#x4;�&#x1e;+&#xd;
]:&#x6;���z&#x1;&#x13;XQ6+�&#xe;*�^%�&#x2;�(:5E�������|r�^��ӷ!�&#x19;�&#xc;�&#x5;�c�i)z-E�� d&#x1f;�Y��&#x17;�&#xd;�ϡ|�X&#x8;�.&#x4;&#x13;(�CY�&#x14;����R&#xe;��.J�G):(��,&#x6;�rP&#xc;:*&#x4;&gt;�*5b&#x7f;�YX&#x1f;.�~&#xb;&#x1;S�{�&#xb;C�T��R�.u�R�n�3�&#x4;�&#xd;
E_���ж&#x18;Gݻ|,:5&#x4;L�ѿ!�&#x5;�l���峹|?\j��&#xf;�������&#x10;�&#x1e;|,:94X���|��&#x14;&#x1d;���Stq��&#xd;��&#xe;&#x16;O����8&gt;&#x2;=��{S�o�&#xe;Nѳ)���a��&#x14;���[S�k��&#xd;&#x1;�BI=�&#x12;:6&#x4;�(e�&#x7f;C�&#xb;�Yx���Mѹ!P&#xc;�ţ�tl&#x8;\&#x6;��Q�&gt;۳O�ҕ)�1&#x4;U��&#x17;�:}��W�D����}�	}6G�-§���&#x14;&#x1d;��&apos;C�~4-&#x1c;&#x1d;&#x19;&#x2;�$Y�&#x1;k?`��&#x1e;Mѝ)�3E���&apos;S��&#x1b;�b�K@�&#x2;�j�7�NL&#x5;Uo��H?���Q�/�&#x380;&#x12;&#x4;�Az.Eׅ�f�2@��b�&#x7f;!@��FW��&#x10;0��&#x12;��u&#x14;R%!�&#x19;]&#x14;&#x2;�R��&#x1a;��R�Q��I�;)�$X/&#x16;��B�א�!���	���Z&#xb;)sH�@��&#x14;}&#x17;&#x2;v�Y�t_��&#xb;A�&#x19;w&#x18;0����R�Z&#x8;X�&#xd;.b�Flk&#x11;�6�ݍ��D|&#xe;�1E&#x1f;���&#x10;0��ӏ��2���X��e*bMGU���W��j&#x0;&#x0;�`v-&#x6;&#xe;&#x3;&#xe;&#x4; &#x15;&#x2;&#xe;&#x5;l���O&#xf;���n5f`f�#&#x6;�W�&#x19;�3��h��{��{+`j�b!&#x13;ط��?&#xc;0&#x18;�c&#xb;�&#x1e;�� &#x4;&#x1c;r�F�&#x3;	��lz&#x1c;[�U�,&gt;S9t�8�� &#x7;n�#&#x16;&#xe;!�lz&#x1c;��&#x5;&#x1;�.�[5��F7��&#x1a;��&#x7;6&#x1c;��M�t&#x13;v5�����0��&#x3;�&gt;&#x3;&#x7b2;&#x1a;�T�j�Bc���!��80����HUC��c$&#xe;�8$�p�v�c&amp;�A��g��&#x1e;�8Jr&lt;f���&#xf;��&#x1d;��|�Q�&#x1c;u�&#x1c;n@Zލ�8|^&apos;b�J��&#x1a;��&#xc;|&#xe;ͪ�&#x19;&#x7;h�d&#xe;C&#x10;0&#xb;�sY&#x1;.�1�i�&#x11;0�&#x1a;�U�:V&#x5;G$p�&lt;�^\�F���e9��&#x0;��&#x8;Ħ-�i�m&#xf;����&#x7;��A56�/�	�=�&#x12;&#x8;��e&#x2;��UcGjã6hY&#x11;p,����&#x0;&#x1;��!O�&#x8;����&#x14;^��L�&#x1a;p�&#x4;��M�&#x8;��p��&#x58c;&#x13;&#x1b;�oV�:O���Fq˘��1&apos;�꺛�̇�����&#x1f;n^^[�������&#xf;��|}��&#x1b;W�&#x1f;�x{�C��F������w��&#x1c;��&#x13;��&#x5ca;z�~�T3n�ژ���ݸ�z�H�Y�lfKw�&#x13;�g/��t�&#x1d;�&#xe;� ���f�S������4YG��N�S�q����S&#x1;&#x1c;PЏ�&apos;qKg&apos;=릉&#x1e;�Mc�&#xd;�Zn&amp;e6�&#xd;
*�3W�&#x1b;�.�]���&#x16;�N&#xf;��Z/K�/|��Y��+q�&amp;tt�z�8uEw�4��դ���Ύ����3��N�U�oOV3��pr�s[��������;��ʷ�r8�i&lt;&#x7f;���t��V��y�����i&#x7f;bn��s��;MF�٬��U7&#x7f;����[q7y���˞D�&amp;0�ڬ�o��c�1�Y�^��x�&#xb;��&amp;�1�p����lN��֢��&#x16;a~�o�&#xd;gG&#x7;s�Pv&#x14;��|)�t&#x12;O�v���0ub&#x13;ϯ&#x1b;�8�ԃ�r�/K5cX�4&#xc;L�ġ�&amp;Ad�Nl��2�n��8V�1���^��9���J&quot;X��6a&#x1e;&quot;�Ѵ&#x13;3���Dg%q&quot;�&#x11;�ͦqa�&#x15;&apos;�ݢ��q����i�d���Ʃ-H&#x11;w��:+lfb&#xd;
w�^э�]$gO_-:�q˘ߎw۫E��v&#x6;��ٱ�q~[��C��g_ӗ󕽮.Y~[��Vw�H��Y�Z������ήom�u�}�&#x19;Nk��tl-�b@�g�M�&apos;Lo�dL�Mu�s�t�[G{؟&#x19;��O(�ee�&#x15;�U&#x17;�������&#x1b;=�X�̷/���S�|�&#xb;���&#x11;&#x5;�NM&#x18;&lt;T&#x5;��f�ұ&#x19;�V��E���2�^��y&#x19;W3���&#x14;���A�(���Z�q&#x3;�i5�D�&#x16;&#x1a;����k&#x1d;�&quot;Nת����og�;�{��?�;0�\�&#x1b;Y&#xc;�1�H?{��&#x17;P��)zmH���&#x1e;j�&#x1f;��f&lt;�NK��dx�N�&#x1;���*�i�,�\�&#x5;������&#x1b;h����F�&#xc;��&quot;\�&#xd;����W��&apos;�W`l�^�&lt;��&#x1e;Q�ٷa�Ҫ��&apos;�Ͽ�)��A�|�O��ڕhOo�~d-�䍢s�U�i���ڊa&#x18;_��יrP�&#x15;��O���/a_S¾��ѱ���&#x1f;��P&#x0;�O�SG&#x5;����O&#x6;I�� ��$���L�&#x12;�tm&#x1d;�aذ� u&#x1b;�vt�1ܧ	�&#x12;�$&#x4;I&#x8;�&#x10;$!HB�� 	A&#x12;�$&#x4;I&#x8;�&#x10;$!HB�� 	A&#x12;�$&#x4;�p&#x4;��~^&#x19;�JqR�sR��&#x1a;��zg#���w�|G��I�m�.:]&#x1;@&#xf;&#x7;&#x0;}v�3�s���z��	_��Z��&#xf;�wN&#xe;+=�p��`�&#xe;&#x7f;]N�u�&#x4;�&#x1b;K��&#x1;�.��pM7h6�&#x10;N��^3m��d�*^¿��6�ٌM7Fz�B�(������J�%�����k��;��t��fh&#x8;�&#x16;ބ��do��P�Ӄ�G�&#x8a;&#x4;&#xd;�4���wth諂�&#x1e;&#xe;&#x1a;r&#x4;&#xd;	&#x1a;&#x12;4$hHА�!AC��&#x4;&#xd;	&#x1a;&#x12;4$hHА�!AC��&#x4;&#xd;	&#x1a;:&#x1c;&#x1a;�p%�D�&#x5;�\&amp;��2�0�OFo�]m&#x19;�&#x7f;��Yc��֟�&#x1e;&#x16;�&#x1b;���އO��&#x13;&gt;�en_��4�&#x13;�/��G^���N�&#x1c;v��&gt;�z�n�B��&#x10;�{&#x10;��$���*�9�U�cq&#x13;��R������^���&#x12;&#x17;?�0Q��d`&amp;�&#x1b;ð�swJ�(~��)v��,0�&amp;��g&#xf;�&#xd;/&lt;��7�����&#x19;&#x1e;���˅\w?�j6�$&#x18;ȑ����(�L&gt;&amp;�r&#x13;&#x15;=,u�@�D�gǓWt�ؿ�3&#x7;�&amp;��i&#x17;�֘�O&#xf;�&apos;=PIE@�}�=x��ȉ���l&apos;��f�;�{v&#x14;3y�^���n&gt;8��4d��]&#x1f;&#x7f;뛿�C��S�7�-�&gt;&gt;f�&gt;��&#x19;��Q���Y&#x1;�&#x2;f&#x5;�&#xd;
�&#x15;0+`V���Y&#x1;�&#x2;f&#x5;�&#xd;
�&#x15;0+`V��#&#x7;fe��ǅ����xܕm&#x1f;&#xf;��&#x1f;5SGG��8��t�81#�&#xc;Lt����D�:&#xf;��~j�G55��Al�8�f�N^��,��o����߄&#x7f;M	��գ�_+����[�w&#x18;ld&#xb;6&#x12;l$�H��`#�F��&#x4;&#x1b;	6&#x12;l$�H��`#�F��&#x4;&#x1b;	6&#x12;lt?[=�������&#x14;J��2�w��L�:�{��&#x3;+ྸ��Wx&#x18;����&#xf;L&#x17;�&#x19;��k*�&#x11;�&#x6;^��m&#x1e;X�6�4���ۜ�kS�v�b�O���g�&quot;�z���;�rނ��W��&amp;�gˉz=7Y��hc��F&#x1e;����:d9e&#x12;�eow7���K���&#x8;֙&#x16;��+G�u֧&#xe;�\�+�St���[&#x1d;��}��̍S��IWJ˸�_~�w����&#xb;�|�����\��r�{�&#x6;�����S`��o�Iw&#x1b;�&#x12;�&#x17;���&#x19;��@��[Y�&#x15;�$&#x8;I&#x10;� $AH��&#x4;!	B&#x12;�$&#x8;I&#x10;� $AH��&#x4;!	B&#x12;�t&#x14;&#x8;配�\�k:&#x1d;�$ڟ&#x1b;z&#x1c;&#x11;�ܕ��&#x15;�[t����~c&#x5;���&#x1f;�&#x1c;��Ӝ���琅&apos;=j&lt;�&quot;k�&#x14;�z�u���&lt;�]��.&lt;���&#x1b;�&#x1c;I�Hn�����o��ϼ2g�#�7����^�͔��_�&#x1d;�&#x1e;�&#x1d;�}Lv�&#x13;.$\H��p!�B&#x85;�&#xb;	&#x17;&#x12;.$\H��p!�B&#x85;�&#xb;	&#x17;zĹ���}�#��&#x1d;�~�x�؎t�dC��oH����1�7Æk���&#x19;&#x7f;퇦�	�f⤖�&gt;�&#xd;鬩�_&#xf;bC�њ��}}�{�&#x16;�5-��[GǾV�n�҃Y�4&#xe;�����e�&#x10;$!HB�� 	A&#x12;�$&#x4;I&#x8;�&#x10;$!HB�� 	A&#x12;�$&#x4;I&#x8;�&#x10;$!H��9�+�Y)NJqN�SR�3R�ldy:Xj5������&#x15;&#x0;4m&#xb;��pN6�VO�4�&#xb;[_Kw������^g&#x17;��&#x12;&#xe;�y��R�R��Sۄ&#x3;�M7�S3�|�d�϶qW�����r�&#x0;ڋc��u&#x1a;M��$�&#x19;��a��&#x8;�u`c&lt;�t&#x7;&#x11;��&#x16;�&#xc;&#xd;��&#x9b;PR���d���s����GC�&lt;:4�UAC&#xf;&#x7;&#xd;9��&#x4;&#xd;	&#x1a;&#x12;4$hHА�!AC��&#x4;&#xd;	&#x1a;&#x12;4$hHА�!AC��&#x4;&#xd;&#x1d;&#xe;&#xd;]�&apos;���&#x5;ܹL�`�=��d�v�Ֆq����5��i�y�a���ȉ�}���=��]��&#x5;?M3~:Q&#xe;���~��ޮ�d�aW&#x1a;퓨&#x17;��,�H	��&#x7;��K�&lt;/��&#x9b;C[5;&#x16;7a�.%�&#xc;&#xf;�:���9�:,q��	&#x13;ŞO&#x6;fr�1&#xc;�&gt;w�ĉ�盝b�z��&#x2;&#x3;l2J{�`����}�_oi�&#x1e;���ȉ�\�u�&#x3;�f&#x3;J��&#x1c;&#x19;���&quot;��c&quot;/7Q��R�&#xe;�L&#x14;|v&lt;yE7���=s0i��v�j�i���|�&#x3;�T&#x4;&#x14;�gރG&#x1f;���~��vr�n��ügG1�7��&#x1b;����L&#x7;v}�����c��S�7����x�]&#x1f;�#���&#xf;fe�G&#x1;�&#x2;f&#x5;�&#xd;
�&#x15;0+`V���Y&#x1;�&#x2;f&#x5;�&#xd;
�&#x15;0+`V���Y&#x1;��&#x1c;��]&#x1f;&#x1f;&#x17;�:���q7�m&#x1f;&#xf;��۴�Hi�LU���&#x1a;�f�&#x15;&#x11;�~j5��������QM&#xd;8}&#x10;�&gt;ΦY��&#x17;e7K���_���F�ה�yt�k�1Y�w&#x7f;��&#xe;��l�F��&#x4;&#x1b;	6&#x12;l$�H��`#�F��&#x4;&#x1b;	6&#x12;l$�H��`#�F���g�G�3��u�B	YYf��&#x10;�i[gw/6s`&#x5;�&#x17;��&#x4;.�S��$.&#x1e;��S3n8��Ġ(h$��z���msKCjx��)&#x7f;Y�6&#x5;k�.v�D�z&#x7f;F+&quot;_�w�N��/�-��~u�o�y����s��j�6f�l���}�C�S&amp;q^�vw���{��G&#x7f;��&#x4;�L	��&#x1b;G�u֧&#xe;�\�+�St���[&#x1d;��}��̍S��IWJ˸�����+&#xf;���P�7X����5�,��Wk&#x0;o&#x1f;�\&gt;&#x5;vz�V�t��(q~q&#xb;O��~&#xc;d\���]AH��&#x4;!	B&#x12;�$&#x8;I&#x10;� $AH��&#x4;!	B&#x12;�$&#x8;I&#x10;� $AHG��^���e����I�����&#x11;1�]�o]ѻEg���n�7V��_���&#x1;z:&#x379;�z&#x7f;&#xe;YxңƓ.��H!��Y�|=�Sܥj�&#x83;&#x1e;8&#xf;��&#x1;ˑ����h��w��&#x1f;��W�v���&#x7f;��w&#x5;�L	��%ّ�;�Y��t&#x7f;U6�&#x13;,$XH��`!�B��&#x4;&#xb;	&#x16;&#x12;,$XH��`!�B��&#x4;&#xb;	&#x16;zı��}�!�%&#x1b;��4ᤱ&#xd;�Pa�&#x1f;�a��k&#x4;�R�Y��&#x1b;�t&#x1b;�1�0�M;�`1��(m&amp;&#xf;c?:kj�׃؏n���B_&#x7f;��@�״��_&lt;:��:u��&#x1e;�b�q��&apos;?��GB�� 	A&#x12;�$&#x4;I&#x8;�&#x10;$!HB�� 	A&#x12;�$&#x4;I&#x8;�&#x10;$!HB�� ���t�&#xc;g�8)�9)NI��H�����`��pR&#x7f;[��NW&#x0;д�&apos;&#x1a;�9��[=�ӄ/l}-�Շ�;&apos;G[�]�CK8���&#x1b;Ka�v�F#�v&#x12;�t�aFnS����&#x6;F�&#xd;��K*�&#x18;�6��1�2]�8fd��:&#x10;�=��4`&#x0;&#xf;싧�� ��բ��!TZx&#x13;Jʓ�Q�,���7�&#x13;44�h��G���*h��!GА�!AC��&#x4;&#xd;	&#x1a;&#x12;4$hHА�!AC��&#x4;&#xd;	&#x1a;&#x12;4$hHА��á�&#xb;�&#x2;&#x11;?��;��&#x1e;l�g���ގ��2n�&#x18;&#x7f;��|?�?/=,07&#x1e;9��&#xf;�^�&apos;|��ܾ�i�O&apos;�&#x1;_�ߏ���՝,9�J�}&#x12;��ݚ�&#x10;)!R� RsI��E�Uxsh�f��&amp;Lե����Q�۽&lt;�U�%.~:a�����L�7�a���8Q�|�S�^�wY`�MFi�&#x1e;L&#x1b;^x~�o��-��#3&lt;&#x1e;9q�&#xb;��~&#x0;�l@I0�#C?&#x19;=Q�|L��&amp;*zX�ҁ���ώ&apos;��f�&#x7f;�g&#xe;&amp;M&#x14;=�.Z�1͟&#x1e;�Oz����B��{���&#x13;�ϕ�N���^w���(f��~�&#x1b;�|p&gt;��������&#x7f;��&#xb;ޜ&#x12;���e���l��?U�룀Y&#x1;�&#x2;f&#x5;�&#xd;
�&#x15;0+`V���Y&#x1;�&#x2;f&#x5;�&#xd;
�&#x15;0+`V����G&#xe;�ʮ��&#xb;u&#x1d;���	?&#xc;e��C��h�qພg�xKM����~Ŏ&#x19;ۉ&#x13;&#x4;AHo�0�}t���&gt;�}&#x1f;g�,�ɋ��%}&#x0;��_���&#x12;&#x0;6%&#x0;��&#xe;��&lt;&amp;���oA�a��-�H��p#�F&#x8d;�&#x1b;	7&#x12;n$�H��p#�F&#x8d;�&#x1b;	7&#x12;n$�H������&#x7f;f��S(!+�,�&#x11;�3m&#xb;���f&#xe;,���R�n#J&#x3;�&#xd; &#x17;&#x1a;Oӌ�6�&#x18;}���(_�&#x7;V��-&#xd;���6��e��&#x14;,^���&#x13;���&#x19;-�|��-:񎾜�`&amp;�յ�K��r�^�MV�1ڙ���Ƿ6��&#xe;YN��y��ݍ;{�}����7&#x5;�L	��kG�u֧&#xe;�\�+�St���[&#x1d;��}��̍S��IWJ˸�&#x7;���W&#x1e;&#x10;�y��o���5�k�Y�}�&#x16;&#x1;�&gt;��|&#xb;����8�n�Q���&#x16;�:��&#x18;ȸ~++���&#x4;!	B&#x12;�$&#x8;I&#x10;� $AH��&#x4;!	B&#x12;�$&#x8;I&#x10;� $AH���&#x2;!�����|M��D�sC�#b��&#x12;ߺ�w��^����o�@&#x13;���&apos;&#x7;��4����9d�I�&#x1a;O���#���g���8Oq���&#xb;&#xf;z�&lt;h�&#x6;,G�*���i�?��|ᐟ���&#x7f;�&#x7f;C�͔�����թ�7&#xf;��[_&#x7f;�s�0�X&#x4;�&#x8;b&#x11;�&quot;�E&#x10;� &#x16;A,�X&#x4;�&#x8;b&#x11;�&quot;�E&#x10;� &#x16;A,�Xd��}��y�&#x1f;��8�ɡm�.:]!+�FV�?�5�VO�t��4������&#xe;օ;��;}�&#xd;
�&#xe;&#x1d;4}�l�42ax&quot;3D&#xf;�l�M/�&#x7f;��K�&#x1d;@&#x7;�2UԄ2=�&#x3;&#x6;��l8v���Fh�&#xd;���#��&#xe;��~���&#x11;44-h�/�&#xe;&#xd;}U���AC��!AC��&#x4;&#xd;	&#x1a;&#x12;4$hHА�!AC��&#x4;&#xd;	&#x1a;&#x12;4$hHА�!AC�CC&#x17;�&#x17;&#x1b;�����D&#xf;�E&#x7f;~2z�����������x�D�&gt;|z����.s����&#x19;?�(&#x7;|i~?�joWw���&#x0;�&apos;Q/ޭY&#x8;�&#x12;&quot;u&#xf;&quot;5��y^tY�7��jv,n�T]JZ&#x19;&#x1e;&#x1c;u���s\uX��&#x13;&amp;�=�&#xc;��xc&#x18;&#x16;}�N�&#x13;��7;���|�&#x5;&#x6;�d�������w����Һ=2��&#x13;w����&#x7;P�&#x6;�&#x4;&#x3;92���&#x13;E���D^n����.&#x1d;H�(��x�n&#x16;��{�`�D�3��&#x1a;������&#x7;*�&#x8;(�ϼ&#x7;�&gt;&#x1e;9��\���:��u�yώb&amp;o��7���&#x7;�&#x13;�~��ß�&#x3;��S�9&#x7f;tt�S&gt;L%&#x1f;�&#x12;�)\S��pM��5�k&#xd;
�&#x14;�)\S��pM��5�k&#xd;
�&#x14;�yG��ˇ��7~N&#x1f;�Ү���&#x11;�M&apos;Ԧۈb3ă��m�V�TI����T�&#x2;�{H&#x1f;��&#x7f;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Upload-Time" elementType="Header">
                    <stringProp name="Header.name">Upload-Time</stringProp>
                    <stringProp name="Header.value">1730988332125</stringProp>
                  </elementProp>
                  <elementProp name="APIKey" elementType="Header">
                    <stringProp name="Header.name">APIKey</stringProp>
                    <stringProp name="Header.value">5476d0c4a7a347909c4b8a13078d4390-f8bdcecf-243f-40f8-b7c3-b9c44a57dead-7230</stringProp>
                  </elementProp>
                  <elementProp name="Content-Encoding" elementType="Header">
                    <stringProp name="Header.name">Content-Encoding</stringProp>
                    <stringProp name="Header.value">deflate</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Expect" elementType="Header">
                    <stringProp name="Header.name">Expect</stringProp>
                    <stringProp name="Header.value">100-continue</stringProp>
                  </elementProp>
                  <elementProp name="SDK-Version" elementType="Header">
                    <stringProp name="Header.name">SDK-Version</stringProp>
                    <stringProp name="Header.value">EVT-Windows-C++-No-3.4.276.7</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                  </elementProp>
                  <elementProp name="Client-Id" elementType="Header">
                    <stringProp name="Header.name">Client-Id</stringProp>
                    <stringProp name="Header.value">NO_AUTH</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Applaunch-213" enabled="true">
              <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Applaunch-214" enabled="true">
              <stringProp name="HTTPSampler.domain">config.teams.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/config/v1/MicrosoftTeams/49_24277.3507.3205.5228</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ClientId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ClientId</stringProp>
                    <stringProp name="Argument.value">59ae4c46-0ab8-4a16-bf8e-90b986a7d903</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Virtualization" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Virtualization</stringProp>
                    <stringProp name="Argument.value">vdi</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="aaduserid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">aaduserid</stringProp>
                    <stringProp name="Argument.value">fa363d87-e3a8-4c79-a3a2-609d481daa1c</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="agents" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">agents</stringProp>
                    <stringProp name="Argument.value">TeamsBuilds,TeamsWebview2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="audience" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">audience</stringProp>
                    <stringProp name="Argument.value">general</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="cloud" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cloud</stringProp>
                    <stringProp name="Argument.value">prod</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="country" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">country</stringProp>
                    <stringProp name="Argument.value">US</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="cpuarch" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cpuarch</stringProp>
                    <stringProp name="Argument.value">x64</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="desktopVersion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">desktopVersion</stringProp>
                    <stringProp name="Argument.value">24277.3507.3205.5228</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="environment" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">environment</stringProp>
                    <stringProp name="Argument.value">prod</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="Argument.value">fa363d87-e3a8-4c79-a3a2-609d481daa1c</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="mtmaCount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">mtmaCount</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="osplatform" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">osplatform</stringProp>
                    <stringProp name="Argument.value">windows</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="osversion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">osversion</stringProp>
                    <stringProp name="Argument.value">10.0.22631</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="teamsAddOnPlan" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">teamsAddOnPlan</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="teamsLicenseCategory" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">teamsLicenseCategory</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="teamslocale" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">teamslocale</stringProp>
                    <stringProp name="Argument.value">en-us</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="teamsring" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">teamsring</stringProp>
                    <stringProp name="Argument.value">general</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="tenantId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">tenantId</stringProp>
                    <stringProp name="Argument.value">fdb97aed-2488-4767-b0ea-a607e72006f1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Encoding" elementType="Header">
                    <stringProp name="Header.name">Content-Encoding</stringProp>
                    <stringProp name="Header.value">gzip</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Applaunch-219" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Applaunch-218" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/authorize</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">cc377c14-a487-4572-8b88-5121dd6540f3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile offline_access</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">bbfb68ea-5e02-4275-a05d-0eccbccc7eda</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">code</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">msal.js.browser</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-VER" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-VER</stringProp>
                    <stringProp name="Argument.value">2.39.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="code_challenge" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">code_challenge</stringProp>
                    <stringProp name="Argument.value">TDjmqZP92duCsRW6RIkaKg0XwWPqv_LZoxfQa3Wh6dw</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="code_challenge_method" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">code_challenge_method</stringProp>
                    <stringProp name="Argument.value">S256</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">e4804ffc-e9eb-4a03-8713-c3d07fda22d9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">eyJpZCI6ImQyODRlOWE2LTk3Y2MtNDRjMy05ZjExLTUwYmYyYzZjZmY5MiIsIm1ldGEiOnsiaW50ZXJhY3Rpb25UeXBlIjoicmVkaXJlY3QifX0=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="claims" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">claims</stringProp>
                    <stringProp name="Argument.value">{&quot;access_token&quot;:{&quot;xms_cc&quot;:{&quot;values&quot;:[&quot;CP1&quot;]}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Applaunch-220" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">login.windows.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/authorize</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">code id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/.auth/login/aad/callback</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">cc377c14-a487-4572-8b88-5121dd6540f3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile email</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">form_post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">8cc120c6e6234a0b858656dd0fed0f3b_20241107141035</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">redir=%2Fmanifest.json</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Applaunch-221" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">hbfuller-com.access.mcas.ms</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/aad_login</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="id_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">id_token</stringProp>
                    <stringProp name="Argument.value">eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkExMjhDQkMtSFMyNTYiLCJraWQiOiI1NDJmYWU1MS1hMDRkLTQwM2YtODgyOS1mZWY2YTdkMGQ5YWQiLCJ4NXQiOiJpMFhqbUNsVlRHZTU4QzJHME5qMWhzSkJjQTgifQ.QcquY_-R02pdjSHn3bEg0zZCOIBoeIdUo5tlNPJdOBnBJpy6yOPeuKqT4v_GHHUGCeoIs0qz0uEC10G2Vhx4S8A75C5IhEhoyOZoNp-J2wqby9vYBx6qEsOqeHyKZHJgucG4oe6iCsxGeHK62MhJGYJPNGDTACejVwhl26LoBN75t3qt3PFcnwp2KCIsiOma0Kg3e11gKg3aLyaSuTCs2R9vyx4YXydNp-DydiboLXoND-LfzyzHT536DvFDWYbmDXmUBck2faaC8_kdr8XAlGM2Yasx9J-O3ecJly9weql5NScRkaInp6ziG8N8tmTDtEJGpXAyYvrz0ppPobVIbA.ZcbLShG4GXp3wepf1k-BKA.dgzDnGRU50qsYpFhWXjY7qyeE4V5eC70CCR5e6j3Us4dVBMjdQYD5SRlWOTxRh3BhBMce8w7EFlHiK8w1h0F7orxTquroLudqIkaaj_-DM171TyfKBikEfNDH_n8Pk8QDR0m30stJodFrL_aIctJh7bKBFXIXvrADt7ofM0K0W-9k06vuiapIr9abkawVvSXjqclcB5LuewNtS3Sc3U2N6o9PC78xCSC5P-wagi347QpgFTLd6A45m2BNJV_jBQkL1ygdb4WXG8Ds3jQKC4atYvBlE-PkIwYcz4lvm1AToFj4xY1HtbFxu0zX3Uoilb-nX2lIs4wbOs7tXgaFcQEUFUeoaarZHRFtAh5gjcCPel8cfoP8ViBviFLaRg-G6ax3cAKwvt6wWmeI4RE10JSGteXTh1t_yFWgydyDCsu3ZkGx6Wl7U341nIfJlu28KOif9ai6g1mthL7rqCJe-iUGNnxaWb20xS8DO0-ca69NaZ2fkWSSX3lfHY7b5pAsQXaOdHXnR_yB6ylmXI0hRRXxtwvC90rGqEf9WHDC3DqvMNju1LaHpL93AAwmmntzLrv2wPqBcx8fO-dCN1wXSbTw4I8XQ7AFEfiXYI_SC3yoQyl7scOPMOpNIxKVWxiTcZqyagb_GVBxE-qBry1D4y3rdnFCxWtI5s-TBUU00Jo7U_YJcC1Pw4HUeamJcJ5VbacQB9jfz4HWxHx6L3_szI6E243hXssQe4a1kgK8AOCZhGR6WmQQ4hndouqstWTeWgpDt1Y7tG5eRNn3Yd5030rkm7_S5TGWQ687rXLNbxCon6ZNCSmAdhCbuWPGX0BrwP19ifxeY7i3rw5ETY_wuuoj7_7G89pv5ZiYraPhqhxSn44YfUham1S5va7zaV5BeJCVFa0om_lIS2y0-HQ20d0TvS1D2J0M1REc5sc0n1C_ska0EKl8Pse4KvaQPMNychkG_HwE-ucA0Gb3yBA2fTVBGZBkRBvwRnm9floFFno3YlqsG6GMc10hCIDi--RZY8BEPKg3BI5Bq3MYGItKlVAGRpeteiigbeDnyxH9VtUEql41QnLG0g8LdugcVe8-jmH9JkpghXjndVpKY-qqn8sjhT4_AzoqZbGKFw8pkWbTDiadf32mm9lOWzRI_H4V6VPFdoRMAzjwWF888yX8WcLnwOFiW4B6NF9TSkJ_v6HAC7wLUnXGKoeEq-di7uW--lNDuvQkH5nTVcFc19DjC0N9Etxe2vqOsQtzqFaM0-Whx9yaip4MFRFrDh2lpviOjS7vtkXkjSXbmaUbF_oVUHvz1MyeFCKa0FaUIohkeX8ZzZWFQuxWoTa_9Pfsh2mNiimO2X4LpsdHeEnVHlS5cANHKHK3gN-O8uHirCvRmiAdPSwAR4YqecRrHHBt1LYX51Iu9MhbjcBDgT25hV6MAy-XWIge3aeo0ubMqyoHb11bkG7C-t6-XKb1A5ND0PTyA9BQCeN8q-5eXCamCR3l4Wsjdol9W7ClL8GFqBOv49UFvfYMONnZZKyF4UMpDyl7GHBep597mFIiCkWR7b5KfP3tdu99hynAgBgkDqNQAmA6UBWq7LKPH06ra6m7y0mvRlMn8g6NNDLLmCnQwdxvF-zSnkhHkrEjns7KTXEyHCqjqUyHS36fjSeca5B9vlD7YANO1sWRzHW4YQgjgmLPaBpnt5r6tD9UERjqPIta4aPPUtMSj7L_HAnIaWZItZDv-saQT4d-eyrn9NBNFa8B6dQAKhH03ylwuql-tZWQrg75s7VWwZwXhg9VvCwihxeHtlyJyV2ygAshPUoJDW9783Sg9NeXLUYKYU0mJlNeT7e3_6CiGfMQ6mE93irW4BxBhtlrm0wtHlbgC801MpryHwsPL9LGv44BJymGuCNXvC4YOspH9vYGeq_btKvTN34mk35i0JYbw3fGCSBAUe5upigG66h6RMG4yaEuJ5oTf8EFy4trl41guSCbahJmXzPh6p4Q3iK4qTiPa4y_d6z9K9iiaDTUlyw8ynU2tTI7k5O6GkUVp8qqD6VkSLPCo0gcdmsbpRrLAR4ZiqiMltIpX2JlGVEHSbqS4VpeJNhK5tqdP4qZPg2g6bjh1VwY8jkMHxLddhVJHYROPJAm9lvUyjKQvy4EdLLOnwUHvnxlevtI_gNu24HZOCtEIlx5luiCHa6nfv63kMmjttHOqDYJkNzIDKO6wbN5N3T5zwRT967idmdKuAHXZeHUeGnbinxi76hzpq2V6_hzWKORhXyeAkK_bGeqnrVdpG22jU4h2iRzGd2aFoaRRUtRF_OHM-472SSayl-YPufMAZxaLSstrIBWG3T4Eu6hQViDEpBRjkWuY-iCa-EaeemyGmzy2aPgZjRgdjafwi_0gmNzxxfTr8y3HCho5WtNNdhdWZ3NJesy9pkMMUSDTq2KDh_q5PDrjN2jFy5teDVwUYcmythC3VEcqJILG0_dCwPuauqAQ6SY4SaoQ0sVSgmjYYEOJYErJUgM0nbagn3o-397nBcrW5X0znLlQkPFLL9meqEcZ9G0TpdEF0rt8cgMBwwZJn61rD2rg6W9EVmXUHCuKsP8OOnWldoIyNQFogjF4K-HekZEfEPwIIS_HdkA4rbBZ_r2XaY5BsPrQHoRq6kZFuAyLNupmyKFvUWu_KDbBTcx61RB3cGA_yZlE9QF2zq8gmudCpyrQPDVkPAvNM5oVYVExQmSgb4ho9d5WOcmlkLxbZ1ZABtmD2WVjQeNv8otPrRyRIkFieiNiukZGUi8l9UMVitVsNC_rfEB7eK5DpoiUmpk6qDIPV8X48eZu5ht3KjM0OulSXntAkj-Xg3SuB4ia_585FIqDt7VQxA9aF4G2GGNNWPdUmVZGQHd7hTr1oSFTJ9tNNTJGHGbl5kJAEcdCDHkTMTKLdWuOM66OqGpzgifhWWBiZjXTE1iFobVbb3pHendMOg0Oa7p2F9aePyjC6bdq7OkqLzVc5x9wpCikqpts7DS0qhJM-7JdA54F9DbThsoo6WZ0mK8rVLivrgJzpelI0YmAejL5cjAwfddkAEwhhNRQLIUWjLDNTEdEBR10MUsmB6ivyK_BUH1vL-TIqrBU0zh739rIwrKu0ZnXvS5-i__Td3ZJVbRMBiouQTPMnQKg5n4TUOeaOFPOSAyxvSuNOamhUtgXEMJ6p2ekL9TliqGbrIWJ2E3Pg6rnMg9xoh0x8G3kRUsjPa5nwqr-BF4RwuCDQ7g94nkHctzvCymBZPmUyPxLCbPae2eM3odcUz0_5Ld66ChmNR91ZrB7e9FCP7pY67fHH611vPC4R9VmknWagFht8k7sEjTHyChi1P0j27MOiMriDTbQgzFKiHlce6szVBu43UCX15HUXHPEP4tbRCPQNhkodt4GyZLV-FzOmiqProwFBu4yRPhEmJwyJcsbheEbsiBJntcbpJmEQhfev-jQIN5T6cvuWxD6h1wdsUYWwhbvxCtyj5cbQXeQm0jRZNPJIQOWkGo6mzJ_CiZq2fiuKFA9f12lSHxNa46Za9vEeR9-4wUOnLr_9sPmOsiyFodKuwd3zKIi-quFfLK6PaX4-CULK2CxBB7jTzQPEMNMqnMavEyKmluZvVEuNCCBMl3DNVSjCLVe5EtVP3ZxUCfEPXGWbJbuXj8mLEMj1t6tYs1-XTI9MAiVyYfYayt-tf5CTlyHbtvNV-bEwVfZeVIMCQ_MR81EqrjLtSBGp3g2DeM_3Fsl7wc3q7xxftZRVK7imGW21hPrtDdm2GnF3Ud3dvhzdphiOFy4MyTCOgVefAcOSI1fJTXRDAD2QyBvxfXtVQlg47_SGfdGr7HjnrON7D4yMsB1yw1uWvjo6Nh-Rq-SCXduTY0aIe_cVn_GF1raPkA3rPK2YpQlEgGvTEX8nCHzMhLTab7Otzxv3Isy1gefv4nB5wXF6YNuMRohqc61-xFoKYdsCCf3EI6s8TvpeAItg_8eSwRyYqYQDgcxgdv2T8UC7zSJBT7KOCBEEMc8j31fRbPo5RFfR-0UX1yX_Fx9Pk85LdvoOV5ghtTAeAMjhX1RpKt3SoYJrippFHmOxUKC9lNJ2RhKDkapTz1JZf34d42B-t_vW51b6VZh3nzl-MhVCkLuXfb801PmFoLTloYKCEftO2tjwi7LCr7qXCrE3apkTWCveyg03skI_kCjoh60TL1DIEp0SC-qu83xRhItfqFJcKTX7u4tb6nzOYwQ46DzQu5Zl0oV9ZI1BufLEMtbGHddoVuWWt6gZ3q6po_iPKAWcCYQeDIu36kXehz2-CcxBsWh1HAJ12U5yHIDcXVs6G61NTZgMKDQhqO3hQbKU2nBvyPO1oV5jvjc0v5gq6C8328pczSQbBC66aaq2xWgpj4FLfU2xjBKHkUi-J-GuekEg4od3hzA_CNJRlBXnUAa8jHj_zTpb4XIBPJ_S8kR5wY0YIv3RiGopcGDBqVpuRcCaq99hO52kwYJbfbkCsFVP96yVDcGXGPiwfRhImWihzwSd-wSfcLLK4HvclUa7N6nqL5lDb8fl0cGHxAHMXizcmXILSPioaaHsR5xJaYbLeB0KZiYRo7XQPZvUT0bP4IdG1zMqpPySSQxJVi4kW1FkyDmKtSLutrR70mOUIoAQQJImxCUtqBS2DN9UYQn58tCeUdcbpFlomC2i3Tr-hHEyW7j1hIexh0Xl-GOwvKakWIQjbzRuO_gwPit_-vMDDaoZMOTxhkmFpJewfqX3SobjW2Kqk3RpfJsP1M91zImD9EEx2CRXrgWQGG1KcS1luRd4S8Y69NQH9IRP0JBkBFJIXryq2FD3pUdjNtg-7U1C3-E_IdG81yLo9ckMZwMgO8hjrLR4aFJYROplcZHC0ploujDvwJM0vh-ul1LLxvB6YIacD-iSPoUcNuI22FZJcr9fiO3ODyECfsHpEzR0ZEX9s7tecprflEjIGF5qbY_M-dOUWuQ.2tHOsXSzYgbNhi-703hHOQ</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Applaunch-222" enabled="true">
              <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Applaunch-225" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Applaunch-226" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/token</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">cc377c14-a487-4572-8b88-5121dd6540f3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile offline_access</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="code" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">code</stringProp>
                    <stringProp name="Argument.value">1.AVsA7Xq5_YgkZ0ew6qYH5yAG8RR8N8yHpHJFi4hRId1lQPNbAKRbAA.AgABBAIAAADW6jl31mB3T7ugrWTT8pFeAwDs_wUA9P9_tHB8-LHH3bAhJBRPCykxmDV7Brj4Ctlfc4jLIay-9_BHPVxQt5cUkvyXGw0QTPw4hhYoc2J74-7dkUNmvN5lp_jZ8PgtwG9mvoGgS9UlXyErvu6wCM6qnA0zX3O2XUpQj-LjyVzGs69Q-9uMFYZnXvfX5hhAglH001lAz9rfn8pSCwnUB1EOJShYVV3PvgTdf2kEaG9_0WRvTeBWxEmLXEIpczOz-x8hDJ7HGRLp3VitSfkbVBK6guIW_JsXKjfmrbd_rGQyPCm-GafTfIKtB3Eh5afwFA6j8-cRLKyFMV5aFGpaEYqMPLT_N_NsSDm8L_NXKLO7ODugBf8Tr6ueVKJRakOB7XXeYS5Bx2LEamHAI-EvgdXnznSdtPAq_I5E4I-UuTthttiVfaEbSmDTCFopNdgmQgy1qiZabXOkPp315Kj-jkjNYco4sdgy6M17ewzcp_aJdUgbP1oukItXT8buEc9BCGHZpNN8mkbH3SId78PzV-VG6tSH3U0MImkgU7788QyvXw6QkvHdssufZh7rIXSkIT7e3oqhGsRk3-3GDghSUmWA3GUQxYyElFPckFkXrM5Tilw8GqBygvKpVx6o6gZ9w6k-uDOGasrH9uv8VSL6w3q5nFU1DW9_9hRcG-dsaNWM7jG62uvf2q4PjmLt1d0ijreTfIz3JpeCiBbNY4rA41GALLHlnhxpUjdbUcMiW2aDUuvKmhC2zq5QC4d18SclyigMpTFuqdzD7Z5MxJcwghe2ae_2GJK6i6s4rIfS_QaZ54-U4cyCUVqnH97KuZ75ImCT0e7zGc_jg1aN7aMiZo3G-enoxbzTxQxU20MZF5IXyw7A7sEK3AXTSB68I99s5MF_h-qEicesOlH5TqLbw6xfqnM</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">msal.js.browser</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-VER" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-VER</stringProp>
                    <stringProp name="Argument.value">2.39.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-ms-lib-capability" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-ms-lib-capability</stringProp>
                    <stringProp name="Argument.value">retry-after, h429</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-current-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-current-telemetry</stringProp>
                    <stringProp name="Argument.value">5|865,0,,,|@azure/msal-react,1.5.13</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-last-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-last-telemetry</stringProp>
                    <stringProp name="Argument.value">5|0|||0,0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="code_verifier" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">code_verifier</stringProp>
                    <stringProp name="Argument.value">WjDVEdO5UfCsaTAdFQ9z5YxFWaXFUCpeRfyMllG0Afk</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                    <stringProp name="Argument.value">authorization_code</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">bbfb68ea-5e02-4275-a05d-0eccbccc7eda</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="claims" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">claims</stringProp>
                    <stringProp name="Argument.value">{&quot;access_token&quot;:{&quot;xms_cc&quot;:{&quot;values&quot;:[&quot;CP1&quot;]}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Argument.value">Oid:fa363d87-e3a8-4c79-a3a2-609d481daa1c@fdb97aed-2488-4767-b0ea-a607e72006f1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Applaunch-227" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">login.windows.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/authorize</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">code id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/.auth/login/aad/callback</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">cc377c14-a487-4572-8b88-5121dd6540f3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile email</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">form_post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">f1164edff439492a8abe047275717a58_20241107141038</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">redir=%2Fmanifest.json</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Applaunch-229" enabled="false">
              <stringProp name="HTTPSampler.domain">graph.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1.0/me/photo/$value</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Applaunch-228" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/token</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">cc377c14-a487-4572-8b88-5121dd6540f3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile email api://1b3bdc5c-2f4a-4276-9ec8-98af36115621/user_impersonation offline_access</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                    <stringProp name="Argument.value">refresh_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">msal.js.browser</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-VER" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-VER</stringProp>
                    <stringProp name="Argument.value">2.39.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-ms-lib-capability" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-ms-lib-capability</stringProp>
                    <stringProp name="Argument.value">retry-after, h429</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-current-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-current-telemetry</stringProp>
                    <stringProp name="Argument.value">5|61,0,,,|@azure/msal-react,1.5.13</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-last-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-last-telemetry</stringProp>
                    <stringProp name="Argument.value">5|1|||0,0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">c74b51e3-9382-40c4-a2fb-e5d65c206b2b</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="refresh_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">refresh_token</stringProp>
                    <stringProp name="Argument.value">1.AVsA7Xq5_YgkZ0ew6qYH5yAG8RR8N8yHpHJFi4hRId1lQPNbAKRbAA.AgABAwEAAADW6jl31mB3T7ugrWTT8pFeAwDs_wUA9P9qi02UQQMlWR0z_yh2HeKOldd7pY7yrQlbVyOOiv_rYshEjhkbxefmDiROyth5f7A4L2_t-MvzSylC5obFtrgJ89bihacPhozXrP9_p8_mL2BlYJjzExa4DGNE6gRK6dUqFmfjeTcybeNbsLFx1hgpnPLP4Esyw2tqwALjwcgHmZqFumK6dsNnZkOnZ8pfYVy48u4tJYdk0saF7j0pUXl9N61fchk_wLoqaKHW0OTUwYtMP52zaCMYz1wfh0hV2TBlV_mr0pN_pkdY6sJezCBG7OepH-5viC-vb6pMlf29_Qluq79XPcRkddUm9GNA5BEBW8aa-avT15wP4Um6KmGxDguo3Tcrp4eLnfDMrXhJsSH7kSTrEdpX_uRWfMuvGGjWaZ83pRZNO7uZIrceHx4SpWMy89IcR1W-c_TrcVuy5BxfMUY18SGBiMgDAikxQvehWim2ra1BWaG-ohXlJmz5crA0r9rqK_NYHji0mE2mwvz_086TgsQxF2GjPXa28eSvsrqfnpjRAaqHZ6owcTbcfXv-WvR7It1h6E5Nj1_eecnPXCS2mdoEl9VsBKQVPz-fFhv_q2VCawwFVAWygR4cmF_rAb0Z4ZKmGhIkl1tTQkWLAfQaW5S380Y_IUwp4-bLCaDe-f0u8r7hL7b9d5ySLQXJM1EBo9S8USUvxn8dEmNQWMD3I1EtDElwRLFLTMRSrypEKSYan4y0Bv57JXV0ZX0WgC9dqprHpV7zQ362yXwh06M_wH5ZIvnLYatVIB0VWxwrBVxMjC01_QV0mjobzL9yddQkfIPj096qDKERbudfeI3tuEphZmyJSHlHZ-SkQBV8srSx9JF2biIgFJO8WQ</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="claims" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">claims</stringProp>
                    <stringProp name="Argument.value">{&quot;access_token&quot;:{&quot;xms_cc&quot;:{&quot;values&quot;:[&quot;CP1&quot;]}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Argument.value">Oid:fa363d87-e3a8-4c79-a3a2-609d481daa1c@fdb97aed-2488-4767-b0ea-a607e72006f1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Applaunch-230" enabled="false">
              <stringProp name="HTTPSampler.domain">graph.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1.0/me/photo/$value</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6Imh6aUExTXF0WVhwUFpuZGtKd3Uyd2tMUHRQZS1JeDFZQ0p5czBIRkxHTU0iLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9mZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEvIiwiaWF0IjoxNzMwOTg4MDM4LCJuYmYiOjE3MzA5ODgwMzgsImV4cCI6MTczMDk5MzIwMywiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFWUUFxLzhZQUFBQVkyZDRQdjRYM0lyQURWRGV5Q2xlcFFudzcrakVuSkNObkhkNlIxQVZjRWFKSldVL1Q4QURVUk44S1RVZVNiSXRTU3BMZG1tcXh6ZklsK2NVcTdhb0c3a2lZUm1SSHc2SWRQRE9pKzFKTnlNPSIsImFtciI6WyJwd2QiLCJ3aWEiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoibHdhLWdsb2JhbC1lYXN0dXMtaGJmLWFpMS11aSIsImFwcGlkIjoiY2MzNzdjMTQtYTQ4Ny00NTcyLThiODgtNTEyMWRkNjU0MGYzIiwiYXBwaWRhY3IiOiIwIiwiZmFtaWx5X25hbWUiOiJNYWxpIiwiZ2l2ZW5fbmFtZSI6IkFyY2hhbmEiLCJpZHR5cCI6InVzZXIiLCJpcGFkZHIiOiIyMC4yNDIuMTg1LjM5IiwibmFtZSI6Ik1hbGksIEFyY2hhbmEiLCJvaWQiOiJmYTM2M2Q4Ny1lM2E4LTRjNzktYTNhMi02MDlkNDgxZGFhMWMiLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtNzQzMTExMzU5LTI3NDE1OTc4NjUtMjYyMzU4OTA5NS0xMjg3MzYiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzIwMDNEOTJENjk5QSIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4UU1BQUFBQUFBQUF3QUFBQUFBQUFBQmJBS1JiQUEuIiwic2NwIjoiZW1haWwgb3BlbmlkIHByb2ZpbGUgUHJvZmlsZVBob3RvLlJlYWQuQWxsIFVzZXIuUmVhZCIsInN1YiI6IkpCUU4yZ2kwcXhKa1plNW1nMVRoZHF3SW5fZExuSzEtWF9OYWJXcS1zdjgiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiTkEiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoib1c3d24wR2ZuVWlfRUlvLVFYaW1BQSIsInZlciI6IjEuMCIsIndpZHMiOlsiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il0sInhtc19jYyI6WyJDUDEiXSwieG1zX2lkcmVsIjoiMSAxMCIsInhtc19zc20iOiIxIiwieG1zX3N0Ijp7InN1YiI6InhVSlQxVzNlRW1nX0syNWh4N2huRFNEMDA1MS1yUFEtU0owdmRJb1F1QVEifSwieG1zX3RjZHQiOjEzMTc2ODMyMjh9.DEJI3iPt83aLQQ_Am0lJqix11X7tLuDHvGDkxtRGxKtxu6odPsbJLpTtjyqnNKhi_oCyCe0GGV8mhKQAFKfYt9ZUPJwac5jP1jDEGyWvtGNi-DOnSgtpC6nKJW8VZxFaSZ3LFSSaxOj_5bITrHApWdcDi_6lCVkVwdC-l7FGqhZwvZMFObIUzxzyYn-FvKyomX3leS4PgfgRajNrp6STK0AVMU-z39KhkffOhmvRg7vkcJQ_XSCCxNJhbKx1zr2bccHto51WT66IOUcj6UPKgMa5SfXa_YqWQxzOSKlZQsPYkmkcJlAzcSKjfZNWaodMekhb3idUD4HgWUvR6rXP-g</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SignOut" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut-231" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/logout</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">7d08d8c5-254d-41cc-aeff-3bd7a4c2dfd8</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut-233" enabled="true">
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.srf</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="wa" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">wa</stringProp>
                    <stringProp name="Argument.value">wsignin1.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="idpflag" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">idpflag</stringProp>
                    <stringProp name="Argument.value">direct</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="wreply" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">wreply</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut-232" enabled="true">
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.htm</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Purpose" elementType="Header">
                    <stringProp name="Header.name">Purpose</stringProp>
                    <stringProp name="Header.value">prefetch</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut-234" enabled="false">
              <stringProp name="HTTPSampler.domain">teams.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Collector/3.0/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">�&lt;Mo[Wv��(�bǉ��)Pd&#xd;
�&#xb;�ѕ��{��.d��0�$�H��&#xc;&#x6;��&#x7bd;Oz&#x11;�G���X1��&#xf;h�(0]&#x17;-0�tS���v�v�E&#x17;�U��̴�/蹏&#x14;EҤb)��.&#x8;&#x3;&quot;y��{�Ϲ�&#xf;��y�c�&quot;�5V�&#x6;��@hbd&#x18;&#x18;&#x1b;���HJ&#x14;�A$��&#x11;&#x15;&#xd;
#N�&#x10;i+1R�K/4��L �&#x13;����XiŶ��n�0o&#x1a;&#x1b;�n+ofI7&#xd;m�$V�*�tU�����rn�E��&#x4;��H&#x11;&#x1e;&quot;AL&#x10;z��Y/��ş�ş����?]]��|�X&quot;5�&#x6;)�ię&#x0;�0�&#x1d;RS�+̱&quot;����&#x7f;�_?7?]�t�&lt;9��E�&#x1d;&#x1c;ul�dq3L�a��f[��&#x13;�&#xc;l��4O�l�o��~�wR��k��g7�]�o�u:�v��Vì�����&#x1f;=��L�&#x1f;t�����Z�������������:�|vЖJ&#x1f;}�������Om��I����G9��U&amp;0��X�&#xd;
J}&#x0;&#x12;�&#x19;��[��ݶa&#xe;�&#xf;�$O¤�������&#x17;&#x17;��&#x15;�[��n�ġ-x��w}&#x1f;�&gt;�B&#x12;�0�&gt;!��!������O�4����m�p?n��C&#x8;[6�&quot;I&#xf;&#x1a; ��&#x1f;ũ5�&#xc;-ng[�о�(n��콑����&#x10;����m�Ib0&#xf;s�i?��y�&#x7;�#�D�0�&#xd;
Q_q�Z&#x1a;�&#xd;
�]}�l�8B;v��V��(D&gt;�!�֣H&#xb;&#x11; �0&#x1;r�J��:���:�&#x5;�wB�n&#xe;�G��^iP�?$�|�!�JЉI�&#x1a;�㨴C{�&#xd;&#x1f;�^x��&gt;;&#x5;&apos;C�6�C�&gt;Ŕ#B&#x10;�&#x1a;���,c�ʕ��w�J&#xb;�M�k�����s_�}��d&#x1d;���4/�K�cX�ē�)QZ�-f��&#xf;��&gt;�y#9�m�¥�+�Jէ6��&#x1d;��,`;6�$���Xp�&apos;��&#x2;��_z���&#x7;L&#xc;3@��SX�FY�^���X�|Ҭmml7w�֫&#x1b;���z��J��\��̶M����-/&#x17;��m�&#xf;�[n�������ܩ~&#x7f;�Zo4�&#x1f;V�&#x6;�&gt;&#x5;�ޣ7&#x11;�~�&#x4;����&#x18;��4�[�ƣ�O�B�:`h|�٨mV���X�=�ݩ6�;;&#xe;{k}mǱB�W!?�ݯl�;��≤���78�X��ʤӕɹ�+s��&lt;��[N���𠚦IZ�`~��w_���`&#xd;
��༛9�k\�7GAd&#x1;�A�&#x2;�]˪�0=���&#x14;&amp;��A˚&#x5;�N-�5&#x1d;HO�}�&#x7f;�[1��+`5&#x8;}�q{�&#x18;��P?�GkOt�r�c��n����&gt;H�����w3&#xb;�w��&#x2;��7�5�懝&lt;[��� `����t��g�#&apos;)���&#x10;��&#xd;&#x6;�M�ez��\(&#xc;&lt;���&#x18;�ĳP�@�&#x12;�ڸ�e8&#x5cc;&#x8;�n#�m&#x8;��&#x3;9��&#x14;��&gt;�G���&#xb;&#x1;$���;&#x1f;U&#x1b;�&#xe;�!�5����K}�ݴ�\������N�ډ&gt;\�Z��&gt;�����jn�a�z&#x18;�i�%Q�&#xd;
�w``{&#x6;ŝc�MD���&apos;&#x4;�o���&#x14;8&#x1d;�_�&#x1;���g�6խ�;�R�H㎋J�v�%J�]q)�&apos;��+.�MY�W��|Pw)��J�&#x18;2&#x7f;{�&#x19;Os7&gt;Ci�v���&#x19;�&#x7f;\mض.���&#x4;��� �}&#x1f;qOzP�Z���Pǂ+ˈ�,�oö���#�&#x10;j7�JNR0�g����A{Ǌ&#x8;u�&#x5;�N�=���M&#x3;@~�]o�m�6��k�&#xd;
�m`Byڵ+��r�&#x15;Am�%&#x1e;�z|�qJe�2H�CP�R�۴��&#xd;�o4��=;-�	X�C�&gt;��鑓6��$!|�0���&#x1d;&#x1b;�6�/|�T��&#x1c;�{L&#x14;&#x1b;Gj&#x5;Y&#x1a;��Y��&#x13;&#x16;&#x1d;F��q&#x6;�}�,&apos;&#xe;��&#x10;����/�*���N�B�QA&#x15;Ra&#x8;E�&#x6;O�5��&#xd;&#x19;�6^&#x0;���Zi��&apos;&#x1b;&#x1;��1D&#x1d;(z�&#x1f;��U*G��ّ���*��:�&#x7b3;}��&#x5;��&#x7f;����hS���&#x10;w&#x3;���]�J�s?D]s&#x16;�&#x6;N�&#x7f;R&#x18;��&#xe;������6��ٽ�&#x3;W4��0�Z��WLV��N@��&#x1f;��cCB�A�~�A��;/&#x13;j�r]]�&#xb;&quot;����D[L��&#x2;B@��q&#x14;x� MCj�,&#xe;#-n&#x14;%CǄ-x�Z���i��q~�@�-L�y�44���Җ�\&quot;�&#x3;p(M�&#x5cb;|�&#x14;&#xe;�/�g&#x14;f�AC�.���/_Z�c��R�!&quot;4b�&#xb;,�&amp;&#x2;�N&lt;&#x1d;�D�P��?��_�4�jj���0����9�v&#xd;
&#x19;n&#x13;�Ե�k�B���k���.�+�!�3{�&#xd;�&#x15;6o-GZ���ͅ5��k6��&#x7;��&#x1c;&#xd;�GA�gj0�&#x6;S&#x12;���¼&apos;��{&#x12;N��`z�&#x17;d��YS&amp;�d�2�teJ��seΜ2�EM&#xb;&amp;����&#x8;c&#x10;6&#x13;c�k&#xf;��cW�,B�O1[ܱ{��p�^�9�	3���|&#x11;3&#x7;�&apos;&#x16;&#x5;�F�?&#xc;u	eHE�&quot;!}k�&apos;$&#x17;���&#x1c;^�&#x7;�2C�!8;��ÕG�&#xc;?8=e�!ȔE�&#x16;�|2B�$瞌T�k����q�{�d�&#x18;�|�&#x11;*B�� D�w&#x5fb;B�v��&#x11;f�ˀ����&#xc;NF~�&#x12;��&#x1b;&#x1c;��LК�q	&#xe;	�&#x10;�&#x10;0`�_�&#x14;�� á��*O)%��&#x7f;������N}&gt;���;uz��&#x7;+F&#x1e;xUⳏ&lt;&#x4;�&#x12;r�ԑ&#x7;�0��S��	�g&#x1f;y&#x14;,�yc5{�&#x15;?��&#x3;����c&#x6;�ya]��N�%�?	5&amp;&amp;^�$�*�&#x13;&#x6;�&#x8;�&#x8;Q(���4&#xc;���S?�&#x3;_�v����	�ݩ����y�&#x8;��7�w�Z���9����s��&apos;Q�Y�04&#x1b;��&#x1e;&#x14;��!O&#x4;\&#xb;&#x13;bO�&#x19;�&#x1c;��;��	5��$2�q&#x14;P�&#x18;�)�,2�&#x11;�0&gt;V�&#xd;
߃:����_�r~�&gt;�S�&#x7f;p�ξf�I��:O���&#xd;
:���S?��nz��X&#x10;�d�z��ܩ&#xb;&#x6;�Y&#x37f; 1s�&#x14;�(sڝ:(���&#x1b;�seΔ2��ߩ�rw�8��&amp;&#x1a;J� &#x8;�q!&#x1c;�Ly�J�ak�&apos;�_.]����y�+3���w��nƿ�N}ڢ�S�b&gt;&#x19;!؛�;��&quot;����1�y&#x7f;m��b�DF����&#x19;&#x1a;&#x1f;��{�%��&#x10;^fp2�-ߩ�LК�qɥ��H���#��&lt;0F�H[�5���X�H[&quot;M&#x18;&#x11;DUD����e�1&#x12;Vk&#x15;a�&#x8;&#x1c;£B������&#x4;6B�Q�8�-��&#x19;&#x14;��&#x8;&#xc;NɈ&#x1e;�=���;�&#x8;&lt;i�A��)=��B�&#xd;
�&#x4;�V&#x7;�&#x2;��ǿ��&#x7f;���X�;�D�&lt;M�9&#x4;��o4M�����5nx�oax3��&#x17;�!Q`&#xd;�&#x15;��j�8�`�&#x16;&#xc;�	&#x11;�&#x10;&#xb;�m46&#xf;�*�_�ԃ���&#x1a;L���)�&gt;�T؍$�&#xb;ȀgKv�	o�d� &#xe;�l]&#x1f;�]�{�����YP7z&#xb;g8�;&#x3;U�]ټYK+�a���&#xe;��z8�&#x8;���&apos;�z�˴�&#x1e;cڪ�v3|���&#xd;
_�����rXiew�2�k��&#x15;&#x1;&#x1;�&#xc;^�q�H9�qUJ&#x7f;u%/g�&#x15;-��K�&#x1;��|&#x7f;3{Cb��$玈7��z|��@��F`.��7*�$&#x3;˸�=N=�`4��&#x17;#��&gt;���pՁ��&#xe;�����?Hҽ�@�c�&#x19;&#x1f;�&#x3;��O�)���Hbe�O��$��~&#x13;�&#x8;&#x13;�#��.�`�&#x2;�|��&apos;��&#x2;,���ۿ��p�{&#x7f;��&#x15;r�G�&#xb;�pS%}a���&#x1e;�&#x4;.&#xb;&#x6;�?&#xf;m&#x17;&#x1a;�^2l��[I���Ep�|ņeBVl&#x6;�&#x7f;��	[	�2��*���nY�&#x17;��&#x1d;y^~d�z��ӕn^��G���l��/ �&#x5;i@U��&#x10;�g�&#x10;/�L N��m���W&#x8;~�oR&#x10;�&gt;��퐘�&#x12;/�L Θb�&#x1b;�\V^�&#x1c;�8g�㰃&#x13;��(�n�&#x4;� &#x13;`d��Ɔ&#x1c;&apos;��&#x5;N�� $&#x1b;e��2���&#x14;Uވ6+�R��|K&#xe;B&#x11;&gt;a����2Q(�;-&#xd;�&amp;�8m��&#x16;����3��H�&#x1d;�H{�gb�R6�IKG�&#x11;ɨ×�&quot;cv�1��&quot;��ű���E!&#x11;.&#x14;w�Lp1&amp;��D�&#x1e;&amp;� #&amp;��&#x15;�&#x1d;i�*�Й��1��&#x13;��aO):&quot;j:�t�&#x10;	&#x8;��x �$M&apos;�L�&#x18;eL�y&#x12;̡s�٘y��&lt;&#x13;&#x1;&#x1d;Έ&#xe;_tȾ?:i&#x10;�7�0b�7�&#x6;�����m~7/�&gt;�&#x15;0��Fe��&#x1f;&#x9f;�&#x5;+x&#x12;&#x1e;�$&#x1d;۾k;P�0�&#x2;�|h�&#xd;�&#x1c;\�h��}��&#x2;��z��_d��&amp;�_�k��R��C2���u&apos;�O�o�&#x16;�t��&#x0;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Expect" elementType="Header">
                    <stringProp name="Header.name">Expect</stringProp>
                    <stringProp name="Header.value">100-continue</stringProp>
                  </elementProp>
                  <elementProp name="SDK-Version" elementType="Header">
                    <stringProp name="Header.name">SDK-Version</stringProp>
                    <stringProp name="Header.value">SCT2-Windows-C++-No-5.0.362.95</stringProp>
                  </elementProp>
                  <elementProp name="Content-Encoding" elementType="Header">
                    <stringProp name="Header.name">Content-Encoding</stringProp>
                    <stringProp name="Header.value">deflate</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                  </elementProp>
                  <elementProp name="Client-Id" elementType="Header">
                    <stringProp name="Header.name">Client-Id</stringProp>
                    <stringProp name="Header.value">NO_AUTH</stringProp>
                  </elementProp>
                  <elementProp name="X-APIKey" elementType="Header">
                    <stringProp name="Header.name">X-APIKey</stringProp>
                    <stringProp name="Header.value">53fdaa090eb946b5a1d6cbdeb4f2ef66-bcbf6380-2590-41cc-ae60-9e467cd51835-7413,7f94c4f712384bdd9dfae2aa01050058-ae16dcf1-29f2-4b84-b240-5eaa9f039134-7255</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">RT HttpStack</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Selec" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sele-235" enabled="false">
              <stringProp name="HTTPSampler.domain">edge.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/identity/api/v3/aad</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;disable_features&quot;:&quot;702b023a,a74ddd5e,c1350ab9,3f6a1a2,f95e5542,322c815,dee07e4,93277d03,b9047d,7727e674,a9159a38,d54f5dd3,4e39dc0e,c2f48bc1&quot;,&quot;enable_features&quot;:&quot;ddfd6cd3,d8475dc5,27e96171,2c4eca72,66aaf0d8,c9b1eff3,69bc2e54,c7f02517,54026607,1207cc22,42217c95,18a22b0d,3891021f,2c975da3,58e057f0,a976f7f5,55a5f854,5cfd95dc,7407dec5,974a1f21,21714a50,95a29f90,177b250e,a49949fb,9e8c649c,bf8cde40,66f69762,df9dd966,ee446086,4ab9326a,99e16ee6,ff424117,5aa83d4f,6c603e1e,e28a1926,ace2c02,62fd93b7,609df054,c428f1f3,50cbb1f,a1d4ae4,33c1300b,67815f60,8b16b1a4,839906b2,8b944d27,15a8d884,1d4568d,9c2a448f&quot;,&quot;filter&quot;:{&quot;version&quot;:&quot;130.0.2849.68&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Mesh-Client-Arch" elementType="Header">
                    <stringProp name="Header.name">Sec-Mesh-Client-Arch</stringProp>
                    <stringProp name="Header.value">x86_64</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Mesh-Client-OS" elementType="Header">
                    <stringProp name="Header.name">Sec-Mesh-Client-OS</stringProp>
                    <stringProp name="Header.value">Windows</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Mesh-Client-Edge-Version" elementType="Header">
                    <stringProp name="Header.name">Sec-Mesh-Client-Edge-Version</stringProp>
                    <stringProp name="Header.value">130.0.2849.68</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Mesh-Client-Edge-Channel" elementType="Header">
                    <stringProp name="Header.name">Sec-Mesh-Client-Edge-Channel</stringProp>
                    <stringProp name="Header.value">stable</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Mesh-Client-OS-Version" elementType="Header">
                    <stringProp name="Header.name">Sec-Mesh-Client-OS-Version</stringProp>
                    <stringProp name="Header.value">10.0.22631</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Mesh-Client-WebView" elementType="Header">
                    <stringProp name="Header.name">Sec-Mesh-Client-WebView</stringProp>
                    <stringProp name="Header.value">0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SelectAccount">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-236">
              <stringProp name="HTTPSampler.domain">config.teams.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/config/v1/Teams/49_24277.3507.3205.5228_24100324916?AADUserID=orgid%3Afa363d87-e3a8-4c79-a3a2-609d481daa1c&amp;AudienceGroup=general&amp;CLRelease=2024.39.01.8&amp;CLVersion=releases%2FCL2024.R39&amp;CPUBrand=Intel(R)%20Xeon(R)%20Platinum%208370C%20CPU%20%40%202.80GHz&amp;CPUCoreCount=1&amp;CPUCount=2&amp;CPUFamily=6&amp;CPUModel=106&amp;CPUName=icelake&amp;CPUSpeedMHz=2793&amp;CPUStepping=6&amp;CPUVendor=GenuineIntel&amp;FormFactor=DESKTOP&amp;GPUDeviceId=140&amp;GPURevision=0&amp;GPUSubSystemId=0&amp;GPUVendor=5140&amp;Manufacturer=Microsoft%20Corporation&amp;Model=Virtual%20Machine&amp;NodeId=8808826561030368115&amp;OSVer=10.0&amp;Region=amer&amp;ResourceID=&amp;SystemMemory=8140&amp;SystemPatch=22631.4317&amp;TeamsRing=general&amp;TenantID=fdb97aed-2488-4767-b0ea-a607e72006f1&amp;UserID=orgid%3Afa363d87-e3a8-4c79-a3a2-609d481daa1c&amp;VdiVendorType=0&amp;global.os=Windows%2010.0%20%20(build%2022631%2C%20platformID%202%2C%20version%200x5867000a)</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">if-none-match</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-237" enabled="true">
              <stringProp name="HTTPSampler.domain">config.teams.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/config/v1/Teams/49_24277.3507.3205.5228_24100324916</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="AADUserID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">AADUserID</stringProp>
                    <stringProp name="Argument.value">orgid:fa363d87-e3a8-4c79-a3a2-609d481daa1c</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="AudienceGroup" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">AudienceGroup</stringProp>
                    <stringProp name="Argument.value">general</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CLRelease" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CLRelease</stringProp>
                    <stringProp name="Argument.value">2024.39.01.8</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CLVersion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">CLVersion</stringProp>
                    <stringProp name="Argument.value">releases/CL2024.R39</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CPUBrand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">CPUBrand</stringProp>
                    <stringProp name="Argument.value">Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CPUCoreCount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CPUCoreCount</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CPUCount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CPUCount</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CPUFamily" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CPUFamily</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CPUModel" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CPUModel</stringProp>
                    <stringProp name="Argument.value">106</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CPUName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CPUName</stringProp>
                    <stringProp name="Argument.value">icelake</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CPUSpeedMHz" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CPUSpeedMHz</stringProp>
                    <stringProp name="Argument.value">2793</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="CPUStepping" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CPUStepping</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="CPUVendor" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CPUVendor</stringProp>
                    <stringProp name="Argument.value">GenuineIntel</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="FormFactor" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">FormFactor</stringProp>
                    <stringProp name="Argument.value">DESKTOP</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="GPUDeviceId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">GPUDeviceId</stringProp>
                    <stringProp name="Argument.value">140</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="GPURevision" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">GPURevision</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="GPUSubSystemId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">GPUSubSystemId</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="GPUVendor" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">GPUVendor</stringProp>
                    <stringProp name="Argument.value">5140</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Manufacturer" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">Manufacturer</stringProp>
                    <stringProp name="Argument.value">Microsoft Corporation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Model" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">Model</stringProp>
                    <stringProp name="Argument.value">Virtual Machine</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="NodeId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NodeId</stringProp>
                    <stringProp name="Argument.value">8808826561030368115</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="OSVer" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">OSVer</stringProp>
                    <stringProp name="Argument.value">10.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Region" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Region</stringProp>
                    <stringProp name="Argument.value">amer</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ResourceID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ResourceID</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="SystemMemory" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">SystemMemory</stringProp>
                    <stringProp name="Argument.value">8140</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="SystemPatch" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">SystemPatch</stringProp>
                    <stringProp name="Argument.value">22631.4317</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="TeamsRing" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">TeamsRing</stringProp>
                    <stringProp name="Argument.value">general</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="TenantID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">TenantID</stringProp>
                    <stringProp name="Argument.value">fdb97aed-2488-4767-b0ea-a607e72006f1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="UserID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">UserID</stringProp>
                    <stringProp name="Argument.value">orgid:fa363d87-e3a8-4c79-a3a2-609d481daa1c</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="VdiVendorType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">VdiVendorType</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="global.os" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">global.os</stringProp>
                    <stringProp name="Argument.value">Windows 10.0  (build 22631, platformID 2, version 0x5867000a)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Microsoft Edge&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;130&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-238" enabled="false">
              <stringProp name="HTTPSampler.domain">self.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">�Y�o&#x1c;Gvn��AQ�%��$k,�ʎ&#x13;�q���w���p���5E����&#x1c;b�L7�&#x6;�ӣ�&#x19;Y\�&#x14; @|�/A&#xe;9&#x6;&#x1;tLN�&#x5;��&#x10;r�!@��O�1�����Eo�&#x1b;&#x7;�&#x18;&#xb;d&#x8;�cO���{��zU&#x1f;�����է�|~2&#x1d;?��&#x7f;��?}�w��/�_���k��e&gt;օ+�v!&#xf;c=�P��V!��+&#x7f;p��{&#x1b;k�{���m����N�igM[,�f��͇u�X&#x16;�;���I=��W��������s%Q&#x6;A&#xe;l&#x8;�/.W���0y��h���]k���ng��&#x14;�Vv+�&#xc;��&#x5;�)Uo�&#x5;�7_�|TO���ywP͏&#x16;�,y�&#x1b;&#x1b;k_���9�}����w��RtE�8.�&gt;l�����&amp;U1�Ж��fB�&lt;y�����o�`��rK�P���\ts����)̯��!y�C���`z\-��*�&#xf;�G���i����ڇ?�zx��a��&#x1f;}��k2��]�l��|�7F��f+3����VpY/�C���ʭw~0pO��&#x7;_|���V/�.�vr�i��Ђ�3����&#x7;�&#x5f7;���o�&#x8;W&gt;��]�%���Z���^&#x19;/������Zvm������f9]&#x1c;�̪z}s9�=���V�,�r8nfռ��z-O��f��⸪o&#xd;�&#x13;�U{8&#x1c;WӢ�&#x1b;���v��M��b�xY&lt;��3�m��a��a��?i.YG�gq���i5h�gUr{sYO�^&#xb;�XT�Ų�\�݁�ɭ~1�T�~&#xb;T��d�̓�Z�9�5�&#xd;
&#x8;/&#x11;Qr&#x1b;�&#x6;&#xb;FO{��M�\�ϖ&#x7;5^�5�ׇC�&#xf;&#x0;{���{��~T���,/&lt;�&#xb;��³��l/&lt;;&gt;�8}�ڨ�&#x1b;�E]�k&#x1e;���d��3����*jmo&#x1e;&#x17;]o�;�&#x12;��`y���ɗ&#x7f;��\ߚ&gt;��&#x6;n&#x5;�&#x1b;�A�&#x1c;�5��նX�ͭgh9�A���`ԥ�X����j�&#xf;�؍ܨt�5BfZ&#x18;�ykF�a��(/KeJ�܈�&#x38d;�f����Px&#x1d;���?r&#x1d;�w��&#x8;�&#x11;�#BGʎr&#x1d;�:Zw��б�cM�َW&#x1d;o:�v��&#x4;�	&#x1;c18&#x17;(&#x12;E�`&amp;� $�U��&#x5;�&#x1a;�k�i�Cc�A&#x1f;��x��+��8g&#x0;&#x1;���H�%�G&#x1; �!1N&#x1a;�&#x19;ݑ&#x16;�V�&#x18;&#x14;�1�t&#xc;�e�HU�S��T�T�T�T�T�T�T�T�2���r�&#xd;
�&#x16;�F&#x7f;�j�&#x1a;&#xc;3���O�H�J�M]�:�:�:�:��&lt;�2�*�:�&amp;�6�.�&gt;&#xd;2&#xd;:&#xd;&#x1e;!(GQ(&#x6;&#x5;&#x8;rօT&#x8;��QP&#x7;XB��&#x14;(�&#x7;F�$&#x14;�&#x1;�P&#x18;&#xf;�&#x2;0�B_�&#x14;�&#x8;&#x5;���٠&#x1d;P��o�1&#x18;c���٢�Ü�&#xc;���&#x1e;&#x605;c=�&#x1;&gt;�������9&#x2;ځ]�&#x2;&#x5;�&#x2;v�Cc�/�_�&#x1c;&#x5;m�.�R&#x11;R	쒺�f%�x�$&#xd;
�X&#x18;&#xc;&#x5;u&#x1a;u�f@&#x1d;�K���&#xf;#�(�c�&#x1b;�%�,�&#x17;A&#x13;&#x5;���&#xd;��c\@��1���&#x1;�SA�&#xd;
X&#x15;p��R%`U�g�g���б�~�D_�TЯ�&#x3;�I�U&#x1;��7�&#x1d;�&#xf;е&#x2;v&#x5;=+�Tp&#x4;&#x5;���(�&#xb;gPЫr|F?x�&#x2;N&#x5;�&#xd;
&gt;��&#x14;&#xd;
^��&#x16;&#xd;
N��]�3&#x14;�+�YA�:�(�7�X�&#x1f;40k�R&#x3;�&#x6;F&#xd;|`A&#x14;�&#xe;utO���&#xf;\Z;&#x14;��y&#xd;��&#x7;&#x1a;~��SC�&#x1a;�4l&#xe;&#x12;O5�i�&#x1;��&#x1a;:&#x530;�&#x6;&#x16;&#xd;�&#x1b;��&#x0;�&#x1;&#x16;P&quot;JH&#xd;ll�G&#x3;L&#x6;z4У�&#x1e;�_(h&#x3;F�5&#xd;
�as&#x3;&#x1d;&#x1a;���&#x1e;&#xd;�h��@�&#x6;:4�n��&#x0;�&#x1;v&#x13;?0�&#x1;�&#x1;v&#x3;� F&#x14;���&#x1a;|q����o��е�&#x1f;&#x1b;��`=&#x6;�1X���&#xd;�c&#xfe0;���&#x1f;,�`�O�uX��&#x2;7�&#x0;(&#x12;&#x5;��ka{+Y&#x1f;�ec&#xc;0[`��i��&#x2;�&#x5;FDQ&#x14;��^-&#x3;&#x1;lo��B�&#x16;x,�X`��b����&#x16;6�Ы&#x5;&amp;&#xb;݂�Q&#x10;5�&#xe;&#x61c;`&#x10;A=���A�&#xe;:u��O&#x7;|&#xe;�&#x1c;�9�sЫ�&#xe;&#x1d;�&#x1f;&#x7;�9�rЕ&#x3;.&#x7;\&#xe;�&#x1c;�u&#x7;\�&#x1;�&#x11;*�(�&#xb;�r����&#xe;���&#x1;���&lt;py����+���&#x5;b&#x19;t�ao&#xf;l^2¡&#xf;�y`���=t���x����&#x1e;z��O&#xf;�&#x1e;���ƽfLD&#x1b;l�Co&#x18; ���7��?=B��w&#x4;~BA&#x1b;����&#x3;�&#x7;n�&#x18;N1/�&#x1d;�o%&#x0;o&#x0;�&#x0;?&#xd;�&#x1c;rօ4@�&#x1;�&#x1a;��&#x0;�&#x6;�&#xe;�i&#x0;�&#x0;�&#x1;�&#x3;0&#x7;�2@�&#x1;�&#x3;�3@�A3Rc.Â:�&#xb;�&#x17;�/�&#x7;&#x3;�&#x5;�_�&gt;&#x3;�&#x10;v`(�&#xd;&#x1d;&#x6;�x�7 ^&#x6;�&quot;�z&#x6;�&#x18;�c�&#x17;��&#x0;&#x4;&amp;d&#x3;�{���3�c&#x1f;L&#x11;��Oq�&amp;;�(8�e&#x17;�.&#xc;�e��T��9Cz�&quot;��&#x1d;��g+cz���9ֳ����:F��!&#x1e;��0&#x14;�&quot;�y&#xd;
&#x12;Td&apos;.A@&#x7f;&quot;�����ED&#x1e;&#x12;���,&#xc;��E`q&#xd;
� %	.&amp;�Qd�H7����?����� &#x11;�J���&quot;&#x1f;E2&quot;&#x1b;	�&#x11;&#x4;��p�@&#x10;��\I&quot;��Iaz�(���ed�H�&#x4;Nb�`&#x3;u/�{Ib%Ka���&#x15;��&#x4;�I��&#x4;�	��dXI� 8&#x1f;&#xd;�-&#x1d;&#x5;�Y���@CI&#x1a;J�H豁&#x13;�P$5AV��+�|ɕK�����m&#x10;�BSp&#xb;�e��&#x4;YK�� &lt;�&#x8;�b�&#x13;�&#xd;ħ���&#x5;&#x11;�&#x10;l *E,�-A�&#x12;$)�h&#xd;
R� G	&#x12;&#x14;vk9&#x5;�&#x1c;�A���&#x14;�5p?�.���=�[&#x10;l��&#x14;&#x6;�V��Խ��5u�O73l@�&#x10;�2A2�o����\&#x16;I&#xd;��\&#x1b;�&#xd;�&#x13;PٚΥ�6��CS�&gt;8&apos;��fd&lt;&#x8;���&quot;��a�s����&#x4;	N��&#x4;)N�� 47X���V�u\&#x2;&#x19;N��&#x4;�M��&#x4;�M��-�bHn��&amp;Hk��&amp;Hl&#x10;��H&#xd;���&#x6;�I���&#x6;�	�&#x16;���m��&#x6;!(��#p&#x12;&#x1b;���v�j��gKŒ�&#x4;y&#xc;&quot;n&#xd;
9&#x1;�i	��M&quot;Ug�r�=��;Zz����c�D&amp;�d&#x10;�G3&#x91;� ����&#x1d;�&#xfe29;%�	ҙ �	&#x12;&#x1a;6�lUq&#x1b;�aԋ# G�:~Q$1��n�f$�	&#x12;&#x17;6�|�w:&quot;p� �K�� $��@&#x17;O&#x18;�/&#x8;t��&#x1b;�J�� ؠb&#x3;;�F�*�t3R&#x14;&#x4;[��SC�(A�&#x12;$&apos;Av&#x12;�$D/&#xe;��&lt;ë&apos;&gt;�م_���&lt;��ٓ&#x1c;�^��%�]&#x10;�hӌ�/A����qE�&#x6;��%�Z&#x10;&#x1c;F�&#xb;�j��&#x5;�60�&#x6;~.�� �	r� �A����c&#x8;�l�b&#x3;�L.&#x13;��&#xe;q�&#x1f;��q�&#x1f;&#x13;&#x0;�C��)&#x14;&#x5;&#x13;&#x1;��`* �ʍ&gt;&#x19;&#xc;�?u�&#x19;�Y3c0�Ųβ�2���&gt;��&gt;wlu&#x1c;����}&#xe;�!���+&#x5;s&#xb;r�d&#x16;&#x4;���/&#x12;L$�&#x5;I2�&#x14;6&#xd;
v�le��&lt;G2�&#x1;-0ca&#xd;
A&#x2;�d&#x1c;Iv�`�·�&#x4;&apos;f71����ib�&#xc;�4!I&#x13;2&amp;3�&#xb;�i��&#x2;���+c�&#x12;󓘠0�C0&#x1d;b&#xe;��&#x4;���H�&#x14;)0Gb�Ĕ��T�9SN&#x11;�,&#x5;;&#x1b;�1KR��&#xd;;sъ�V��,�Sf&#x1d;��&#x6;��mĢ�^&#x15;�%&#x2;&#xd;
1)�&#x14;��Y�Ϙ���LC &#x605;�4&#xd;����\2zC�5�u1��)���B��zф��&#xc;���嘀Hf ��X2&#x16;K�OC2��p&#x14;17�d&#x3;u�\&#x2;��5&#x1b;�&#xd;&#x13;sGj�P&#x1b;��&#x10;�%i&#xf;f&#x6;&#x10;L�=&#x7f;R&#x11;���P&#xd;
�f�)c&#x89;&#x11;&#xc;���&#x11;&#x52d;�|�4����4&#x1e;�\yTOG��dc�*xX5�&#x16;�&#xf;_���;[/�v&#x6;[�_�o��}���&apos;�&#x17;��&#xd;_&lt;z8x���]O���|Q&#x1d;�I�drug�q3l�&#x557;&#xf;�ɼJn�L�b2��&#x19;�S�zc�j�&#xf;L�ڙ&#x1f;T�����!�}��&#x1b;�L�M��m󘬭��L��൧�^�&#x1d;&#x8;ȝ�&#xc;�Ť��M~�a�z���1O-�����(h���&#x1d;n&#x1f;�L&#x17;U;-&amp;&lt;ߺ~����uY&#x7f;�m�g�+�E{&#x4;&#x1d;��`�\ۭ&#x16;EY,�x���/Y�a���&#x1b;��&#x1b;���ۥx���&#xf;�x�ţ-�l]&lt;������&apos;���&#x0;3����xR-�&#x7;�Q5&#x1d;~^�fUyz0w�������a䍽�i���˿�?V�&#x17;��x&#x2;W_¾�%���ãe������y�^&#x1c;����!�8��p�����-a�yWP_]�&#x1f;a�[秣gg�Pv&#x8;%6_�djlD&amp;�#��R&#x15;&#x19;�_�F�3yi��l&#x1c;��Q�&#x5;&quot;B�]V��gz�BV�Bf�2�ڋ�(�8����d^�&#x1d;^�-&#x1f;&#x7;D�Q�!&lt;�lt(�ٸ�]���X&#x5;=*��a����&#x18;WO�I��lM�Ѥ*�K�vY%����XT��4��7�p7~�l&#x16;�p���ʽ�=.&amp;������L&#xf;��g���Z��s�z���&#xf;�V;�͓E5����|9Y���z�+~VW���8&#x1e;g&#xf;���U��jϏ5oD&#x1d;�]D&#xc;��ƹk����u֜~�:y��*�����&apos;�O&#xf;�&#x7;�|6)N�$�~�����^���&#xe;��bz�\;퇸&#x0;S������&#x10;�`&#xd;
���(�������E��H�:h�鼈&apos;��C9.�(�Q�F�5��:+&#xe;�-`XFzo���&#x16;��ǵ�³��.&lt;�&#xb;�����y\r��tT&#x17;&#x8;&#x1f;�&#x7;�o=��&#x3;�&gt;n��&#xc;�.K�&#x19;X���&gt;�xc��b�����逧Q�&#xf;�A�xs1p��&#x1c;��ۆ��^&#x7f;��&#x10;5D��tX&#x1e;f��AYoN�&quot;�&lt;&#x1c;�|}�����͇&#x8;Eet�Ӄ�w&#x1e;�Ms|�~����&gt;�g&#x11;ڕ��&#x1f;�$Y&#x7f;ԴG��(�7�&#x6;�I�|&#x18;��n��k&gt;����E{�����V�_�*�_&#x7f;�˻����\&#x7f;}&apos;w\�}|&gt;�������Vc|;��ir��&#xd;
k&#x17;&#x1;�˿��&#x7f;��_p����tz?��?�&#xd;
���մ��Ve�&#x1a;����A}�˧Qeǣ&quot;7�&#x10;c��U�����\�G�R�G����O&#x2;�|��w&#x1f;.����ǚk|�g&#x8;������~ju?���Z�O��V�S�������~ju?���Z�O��V�S�������~�q?��v�K��V��#�����W�v���qӞ&#xc;g�Q���&lt;���u��:�:�톧�ǫ[������$�w&#x17;Bߣ�x9�`Z/�&#x14;�&#x12;o�}��No&#x7f;�/.r~U�m~�5��G�&#x1c;�I3&gt;����o��&#x1f;��&#x16;�7�&#x1;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Upload-Time" elementType="Header">
                    <stringProp name="Header.name">Upload-Time</stringProp>
                    <stringProp name="Header.value">1730988371207</stringProp>
                  </elementProp>
                  <elementProp name="APIKey" elementType="Header">
                    <stringProp name="Header.name">APIKey</stringProp>
                    <stringProp name="Header.value">5476d0c4a7a347909c4b8a13078d4390-f8bdcecf-243f-40f8-b7c3-b9c44a57dead-7230</stringProp>
                  </elementProp>
                  <elementProp name="Content-Encoding" elementType="Header">
                    <stringProp name="Header.name">Content-Encoding</stringProp>
                    <stringProp name="Header.value">deflate</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Expect" elementType="Header">
                    <stringProp name="Header.name">Expect</stringProp>
                    <stringProp name="Header.value">100-continue</stringProp>
                  </elementProp>
                  <elementProp name="SDK-Version" elementType="Header">
                    <stringProp name="Header.name">SDK-Version</stringProp>
                    <stringProp name="Header.value">EVT-Windows-C++-No-3.4.276.7</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                  </elementProp>
                  <elementProp name="Client-Id" elementType="Header">
                    <stringProp name="Header.name">Client-Id</stringProp>
                    <stringProp name="Header.value">NO_AUTH</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-239" enabled="false">
              <stringProp name="HTTPSampler.domain">c.pki.goog</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/r/r1.crl</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age = 3000</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Microsoft-CryptoAPI/10.0</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-240" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/logoutsession</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="sessionId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sessionId</stringProp>
                    <stringProp name="Argument.value">c2db8dd4-b320-4d09-a4ae-d693f0d5249a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">wGAGhWlvQwXhfXsN0rlHjgQ/8TXPNluvNPXawJjpFnM=7:1:CANARY:</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">4176faed-f5b5-44f2-89b6-93dbe16fd800</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="msaSession" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">msaSession</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="postLogoutRedirectUriValid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">postLogoutRedirectUriValid</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/logout?post_logout_redirect_uri=${scheme}%3A%2F%2Flwa-global-eastus-hbf-ai1-ui.azurewebsites.net&amp;client-request-id=7d08d8c5-254d-41cc-aeff-3bd7a4c2dfd8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-241" enabled="true">
              <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;HTTP&quot;,&quot;request_age_ms&quot;:67016,&quot;request_elapsed_ms&quot;:2181,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;${scheme}://beacons.gcp.gvt2.com/domainreliability/upload&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-243" enabled="true">
              <stringProp name="HTTPSampler.domain">aadcdn.msauthimages.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/dbd5a2dd-iu-azz4erakpyhipldeapj6jwzmlhuaa0bxh0b2d-8/logintenantbranding/0/illustration</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ts" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ts</stringProp>
                    <stringProp name="Argument.value">636081728377863731</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-242" enabled="true">
              <stringProp name="HTTPSampler.domain">aadcdn.msauthimages.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/dbd5a2dd-iu-azz4erakpyhipldeapj6jwzmlhuaa0bxh0b2d-8/logintenantbranding/0/bannerlogo</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ts" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ts</stringProp>
                    <stringProp name="Argument.value">636081810832597727</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-244" enabled="true">
              <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-247" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-249" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">login.windows.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/authorize</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">code id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/.auth/login/aad/callback</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">cc377c14-a487-4572-8b88-5121dd6540f3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile email</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">form_post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">f0c4fdf3de014949882090eb33d9ed43_20241107141119</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">redir=%2Fmanifest.json</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-248" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/authorize</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">cc377c14-a487-4572-8b88-5121dd6540f3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile offline_access</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">code</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">msal.js.browser</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-VER" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-VER</stringProp>
                    <stringProp name="Argument.value">2.39.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="code_challenge" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">code_challenge</stringProp>
                    <stringProp name="Argument.value">WH8PP2BWJAnCEBJtg-c-sqhXeHzqPmeb2B6J9qHnP6E</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="code_challenge_method" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">code_challenge_method</stringProp>
                    <stringProp name="Argument.value">S256</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">fbbd071b-c2ea-441b-944b-ac4401f49b99</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">eyJpZCI6IjNkOGNjZDFlLTAxOWMtNDIwNC04YjUyLTJlNjI0N2QwYzQ4NiIsIm1ldGEiOnsiaW50ZXJhY3Rpb25UeXBlIjoicmVkaXJlY3QifX0=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="claims" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">claims</stringProp>
                    <stringProp name="Argument.value">{&quot;access_token&quot;:{&quot;xms_cc&quot;:{&quot;values&quot;:[&quot;CP1&quot;]}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-250" enabled="true">
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.htm</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Purpose" elementType="Header">
                    <stringProp name="Header.name">Purpose</stringProp>
                    <stringProp name="Header.value">prefetch</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-251" enabled="true">
              <stringProp name="HTTPSampler.domain">go.trouter.teams.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v3/c</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="epid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">epid</stringProp>
                    <stringProp name="Argument.value">3a8b6637-4ba4-995c-0049-289472e2bc90</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ccid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ccid</stringProp>
                    <stringProp name="Argument.value">IrC8mIBkR1w</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="timeout" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">timeout</stringProp>
                    <stringProp name="Argument.value">55</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-MS-Migration" elementType="Header">
                    <stringProp name="Header.name">X-MS-Migration</stringProp>
                    <stringProp name="Header.value">True</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade" elementType="Header">
                    <stringProp name="Header.name">Upgrade</stringProp>
                    <stringProp name="Header.value">websocket</stringProp>
                  </elementProp>
                  <elementProp name="Trouter-Client" elementType="Header">
                    <stringProp name="Header.name">Trouter-Client</stringProp>
                    <stringProp name="Header.value">{&quot;ua&quot;:&quot;SkyLib&quot;,&quot;v&quot;:&quot;49\/24277.3507.3205.5228\/24100324916&quot;,&quot;cv&quot;:&quot;2024.39.01.8&quot;}</stringProp>
                  </elementProp>
                  <elementProp name="X-ClientCorrelationId" elementType="Header">
                    <stringProp name="Header.name">X-ClientCorrelationId</stringProp>
                    <stringProp name="Header.value">8808826561030368115</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Origin" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Origin</stringProp>
                    <stringProp name="Header.value">null</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Version" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                    <stringProp name="Header.value">13</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IlFobnNuMU9uTkxYcGU4ekRicnJVa0cwakdBRnlOMHB2cnNHX0czd3VCX0EiLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJodHRwczovL2ljMy1ub24tY2FlLnRlYW1zLm9mZmljZS5jb20iLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9mZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEvIiwiaWF0IjoxNzMwOTgwMzgwLCJuYmYiOjE3MzA5ODAzODAsImV4cCI6MTczMDk4NTg1NCwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFWUUFxLzhZQUFBQXAzRnEwU2IyZ3R2NSt0KzlGWjJmdTJjc2x5dVBCTEc5UlF0Ukp6S2o4ajdXOGNPOWZHTWhEd1lMaEY5TzdLVjRCL21XM1UvNnp2VjUzcXJ2OHpwOC9iNDRYSExJenJlb2tEOGlEMmMzTFZVPSIsImFtciI6WyJwd2QiLCJyc2EiLCJtZmEiXSwiYXBwaWQiOiIxZmVjOGU3OC1iY2U0LTRhYWYtYWIxYi01NDUxY2MzODcyNjQiLCJhcHBpZGFjciI6IjAiLCJkZXZpY2VpZCI6IjcwNjIyNGE3LWMwYWEtNGVlNC05YTVmLTVhZTAzNDA4N2ViNSIsImZhbWlseV9uYW1lIjoiTWFsaSIsImdpdmVuX25hbWUiOiJBcmNoYW5hIiwiaWR0eXAiOiJ1c2VyIiwiaXBhZGRyIjoiMjAuMjQyLjE4NS4zOSIsIm5hbWUiOiJNYWxpLCBBcmNoYW5hIiwib2lkIjoiZmEzNjNkODctZTNhOC00Yzc5LWEzYTItNjA5ZDQ4MWRhYTFjIiwib25wcmVtX3NpZCI6IlMtMS01LTIxLTc0MzExMTM1OS0yNzQxNTk3ODY1LTI2MjM1ODkwOTUtMTI4NzM2IiwicHVpZCI6IjEwMDMyMDAzRDkyRDY5OUEiLCJwd2RfdXJsIjoiaHR0cHM6Ly9wb3J0YWwubWljcm9zb2Z0b25saW5lLmNvbS9DaGFuZ2VQYXNzd29yZC5hc3B4IiwicmgiOiIxLkFWc0E3WHE1X1lna1owZXc2cVlINXlBRzhWVHdxam1sZ2NkSXBQZ0Nrd0VnbGJsYkFLUmJBQS4iLCJzY3AiOiJUZWFtcy5BY2Nlc3NBc1VzZXIuQWxsIiwic3ViIjoiRHBnSU5RdnlXdzJUZUJpdV8xWnFMN2xiVnZnU0ZQblp4aUh2OUpjY3Z2RSIsInRpZCI6ImZkYjk3YWVkLTI0ODgtNDc2Ny1iMGVhLWE2MDdlNzIwMDZmMSIsInVuaXF1ZV9uYW1lIjoiQXJjaGFuYS5NYWxpQGhiZnVsbGVyLmNvbSIsInVwbiI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1dGkiOiJ0bDJSZVUzOGtFMl91RmVhY3kwT0FBIiwidmVyIjoiMS4wIiwieG1zX2lkcmVsIjoiMSA4In0.TgxqKfs7CgiSTFf89ikwNa_xK-JPNoxM-lflHtt30n5O5re-3ZaRkLnzYLQz1xqNEoZYJFzEo9o6OEsKFzPkQeBPS0fgTSWcounF__GZxA20wsypOFl5EIvGJpsC7TzF8CybkyOXMX4Jl4m6KNvhaNv0uB480t5FkzZeMoo7jTDF6jf31A4q8wPVKDUqlXJHQBcCRd8JtelAQsk9Luwzc7j3OsLCFELCzXs12ozbneC4ARrYfYC-QcZA-RelzGQUr6ShAt-vZ48AEvoot4sYwXQzhhbJHojgxYOyyjzuF7J88YpbzSBcNeAOPwV-UEajpo1AcT268hPac2-ZDsX00g</stringProp>
                  </elementProp>
                  <elementProp name="X-ClientTelemetryEnabled" elementType="Header">
                    <stringProp name="Header.name">X-ClientTelemetryEnabled</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Key" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                    <stringProp name="Header.value">xukJy3d0Z5J2FWvJtUz6IA==</stringProp>
                  </elementProp>
                  <elementProp name="X-ConnectionAttempts" elementType="Header">
                    <stringProp name="Header.name">X-ConnectionAttempts</stringProp>
                    <stringProp name="Header.value">21</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">SkyLib</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-252" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/GetCredentialType?mkt=en-US</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;archana.mali@hbfuller.com&quot;,&quot;isOtherIdpSupported&quot;:false,&quot;checkPhones&quot;:false,&quot;isRemoteNGCSupported&quot;:true,&quot;isCookieBannerShown&quot;:false,&quot;isFidoSupported&quot;:true,&quot;originalRequest&quot;:&quot;rQQIARAAnZHBa9NgAMWTdqtdp65MGF6EUscUNW2Sfk3awpBudV27Ll3HatOOMb4kX9q0X5PYL122jt133EFE9LbjQBi7OPSgnoSdJijKToIosoPITjt4sMP_wMvjvdt7vxfw8ZFYMsLe8fIRNjWuqjFRVDnAQJAQGRAXeSahJBJMnOM5TRPigNVjndFAkH-Rm1n58G5q-0no8_1vr8f2aLHhODZJRaPYhUwdWwrEDILE6RKmoegMNDima0Rgr9tBLlKI4SASMZETPaTpY5r-SdN7nnFdUTRW5BRG5RFkAOi7JAAKA1UAWE4HSSWZPPGMFNNdp8FfiNUxeujM49c7sN5GpvPMa6ONvF2bzgm5ptQqZqVmLTODC0vp9WJl3pEyOVeaZkG1Wd4oLOWx1MyxEl9yq70SkIwcybU5rGUfGEWTGLASZ2tyvlGNLdoKHy8jeQrnmpahth-2oJzH1VjJ0GV28sA7rmtKUoRIY3jQRwVEQWQUtj8ACqyIRJ5lBZ078t6wbGQaWsjuWLqBUcjSdWyYaBWqKiLki5c-HqBPB8b8nuCt61SIuj3BelN-fyBIXaTzAXp3sM99eeLxlcLuYeb5--LNP0PD1NFg1M2ms40KXiu5ckOXicR28GyzXoomluQFCXfXpAUZuvmmPWPOTwopbsdH7_iuHfiG_N4gFfZOL3BHvpE2gTjSJBGlY7kEdX776O1L1Ksh4f8-fRqg9wJ3a6bSMivJjFDtLQou1mRJihcXYdcut-elcq0xN9UzYwWbS1hgP0AfD9MnlxMBn4qh0Sajkc3wPy6rjtVCZji1GV5vk1VVvXBrEHcRCaeWw_324ZWtra23V6jzq2ffX3789OPNr9nTkXs9gPhEmmCOi7l4vtyqyo1Hpl5J4zlW0gw36awLaqFe1PKITO4Hqa9B6i81&quot;,&quot;country&quot;:&quot;US&quot;,&quot;forceotclogin&quot;:false,&quot;isExternalFederationDisallowed&quot;:false,&quot;isRemoteConnectSupported&quot;:false,&quot;federationFlags&quot;:0,&quot;isSignup&quot;:false,&quot;flowToken&quot;:&quot;AQABIQEAAADW6jl31mB3T7ugrWTT8pFeKyEl3SABhzu9S4ZoF2Ys042VRjt2iyppU9nfett9-VZYMv9avr1hWZa0zG5f-Skr2lQpRZcczF25AugxXxif0AhPSGDeEiUzWH2Ch5nuglMyiQvsZAnxHh8PZsxdbO5YvjPD8pCRb82T0h96Ry311B3QTXd6MrXgTaibD70FDSef1QB2670fi9IDa1VWOWmEZF4eRjyQ6Xb9HYyUu8Vqrujh-ANVo4TEBN0wHJa1UK6YVWW7aZrTLHhJ8OWbJfbh3bBZ18Fz4TU9LVbXFwEN5RF3Smp_mDRMxNaHEm-WnqP3hjWi9OdRJE1mMk6ZWY_SrBHV5lUnrKxHYFh_vRSbGWxJ3lPmz6o4XaZGg-arjmb55r8rCtUKdAUBekKeCkll6AUOehWxbGvy20pODvVIqnCK0VMBQvBmhSJTNBMMS7H5WYwsDgy7vAOmh6Yz6yzcqUG3BlQ_4DV1rCgv6PTKqphKI8GUIGjsspqul7JF8etmXyhjAHJOd_P6cUety1I0ajMKsNUpH70qt47A8dAZrhcHHXq4MDgRVw8Py7SkhqkgAA&quot;,&quot;isAccessPassSupported&quot;:true,&quot;isQrCodePinSupported&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">1800</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/authorize?client_id=cc377c14-a487-4572-8b88-5121dd6540f3&amp;scope=openid%20profile%20offline_access&amp;redirect_uri=${scheme}%3A%2F%2Flwa-global-eastus-hbf-ai1-ui.azurewebsites.net&amp;client-request-id=4649ad32-d15d-42c1-8896-20d73fe3bb16&amp;response_mode=fragment&amp;response_type=code&amp;x-client-SKU=msal.js.browser&amp;x-client-VER=2.39.0&amp;client_info=1&amp;code_challenge=WH8PP2BWJAnCEBJtg-c-sqhXeHzqPmeb2B6J9qHnP6E&amp;code_challenge_method=S256&amp;nonce=fbbd071b-c2ea-441b-944b-ac4401f49b99&amp;state=eyJpZCI6IjNkOGNjZDFlLTAxOWMtNDIwNC04YjUyLTJlNjI0N2QwYzQ4NiIsIm1ldGEiOnsiaW50ZXJhY3Rpb25UeXBlIjoicmVkaXJlY3QifX0%3D&amp;claims=%7B%22access_token%22%3A%7B%22xms_cc%22%3A%7B%22values%22%3A%5B%22CP1%22%5D%7D%7D%7D</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">PAQABDgEAAADW6jl31mB3T7ugrWTT8pFeco86lQyRYJRf4ZJZvy7CqIC5BFX7sS9Xa2vfk0qnx_7FeqWLYvUURFPBhiK3wYCzJDMyAPY9UENzNJFfLMizYK1gsihWk4dp69bos_fhSqpl7QGSnIPk-cWH18Fxfddg9ymDfZ6adnus9NnqMpsgkdAE2rjLY1Iq2HVuB3bKI17DOKYcT15mWp3vW6SEz5WYV0tpaWiB96j4GDkZyX4sPSAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">0d94265b-a24c-44b8-9bc7-4f23fc090b00</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1104</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-253" enabled="true">
              <stringProp name="HTTPSampler.domain">autologon.microsoftazuread-sso.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/hbfuller.com/winauth/ssoprobe</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="_" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_</stringProp>
                    <stringProp name="Argument.value">1730988383685</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-254" enabled="true">
              <stringProp name="HTTPSampler.domain">autologon.microsoftazuread-sso.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/hbfuller.com/winauth/ssoprobe</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="_" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_</stringProp>
                    <stringProp name="Argument.value">1730988383685</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-255" enabled="true">
              <stringProp name="HTTPSampler.domain">autologon.microsoftazuread-sso.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/hbfuller.com/winauth/sso?client-request-id=4649ad32-d15d-42c1-8896-20d73fe3bb16&amp;_=1730988384055</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">canary,client-request-id,hpgact,hpgid,hpgrequestid</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-256" enabled="true">
              <stringProp name="HTTPSampler.domain">autologon.microsoftazuread-sso.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/hbfuller.com/winauth/sso</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="_" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_</stringProp>
                    <stringProp name="Argument.value">1730988384055</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">1800</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">PAQABDgEAAADW6jl31mB3T7ugrWTT8pFeoFK4dwSu8uIwql3ZsDu1FiwbQyu2sixgoDc3xcADm2E2e68ZU2gucWlsHzWYSyttWlDVH1HvQOrQrZCBgGdr62sd2XixlR2eQo3tWUIDVBLV0fRHeAN0L5-dx_gT_JHEYvfHWW2r2hEKundNYGxFBrWxbvPExKKrH78hcTKoDW-Am-ZcDFkDpzoLYyuq9iYlCEv320Ym74BGlyW2fM0QsyAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">0d94265b-a24c-44b8-9bc7-4f23fc090b00</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1104</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-257" enabled="true">
              <stringProp name="HTTPSampler.domain">autologon.microsoftazuread-sso.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/hbfuller.com/winauth/sso</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="_" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_</stringProp>
                    <stringProp name="Argument.value">1730988384055</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">1800</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">PAQABDgEAAADW6jl31mB3T7ugrWTT8pFeoFK4dwSu8uIwql3ZsDu1FiwbQyu2sixgoDc3xcADm2E2e68ZU2gucWlsHzWYSyttWlDVH1HvQOrQrZCBgGdr62sd2XixlR2eQo3tWUIDVBLV0fRHeAN0L5-dx_gT_JHEYvfHWW2r2hEKundNYGxFBrWxbvPExKKrH78hcTKoDW-Am-ZcDFkDpzoLYyuq9iYlCEv320Ym74BGlyW2fM0QsyAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">0d94265b-a24c-44b8-9bc7-4f23fc090b00</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1104</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-258" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/instrumentation/dssostatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;resultCode&quot;:0,&quot;ssoDelay&quot;:580,&quot;log&quot;:&quot;&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">1800</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/authorize?client_id=cc377c14-a487-4572-8b88-5121dd6540f3&amp;scope=openid%20profile%20offline_access&amp;redirect_uri=${scheme}%3A%2F%2Flwa-global-eastus-hbf-ai1-ui.azurewebsites.net&amp;client-request-id=4649ad32-d15d-42c1-8896-20d73fe3bb16&amp;response_mode=fragment&amp;response_type=code&amp;x-client-SKU=msal.js.browser&amp;x-client-VER=2.39.0&amp;client_info=1&amp;code_challenge=WH8PP2BWJAnCEBJtg-c-sqhXeHzqPmeb2B6J9qHnP6E&amp;code_challenge_method=S256&amp;nonce=fbbd071b-c2ea-441b-944b-ac4401f49b99&amp;state=eyJpZCI6IjNkOGNjZDFlLTAxOWMtNDIwNC04YjUyLTJlNjI0N2QwYzQ4NiIsIm1ldGEiOnsiaW50ZXJhY3Rpb25UeXBlIjoicmVkaXJlY3QifX0%3D&amp;claims=%7B%22access_token%22%3A%7B%22xms_cc%22%3A%7B%22values%22%3A%5B%22CP1%22%5D%7D%7D%7D</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">PAQABDgEAAADW6jl31mB3T7ugrWTT8pFeoFK4dwSu8uIwql3ZsDu1FiwbQyu2sixgoDc3xcADm2E2e68ZU2gucWlsHzWYSyttWlDVH1HvQOrQrZCBgGdr62sd2XixlR2eQo3tWUIDVBLV0fRHeAN0L5-dx_gT_JHEYvfHWW2r2hEKundNYGxFBrWxbvPExKKrH78hcTKoDW-Am-ZcDFkDpzoLYyuq9iYlCEv320Ym74BGlyW2fM0QsyAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">0d94265b-a24c-44b8-9bc7-4f23fc090b00</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1104</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-259" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/fdb97aed-2488-4767-b0ea-a607e72006f1/login</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                    <stringProp name="Argument.value">archana.mali@hbfuller.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="loginfmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">loginfmt</stringProp>
                    <stringProp name="Argument.value">archana.mali@hbfuller.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dssoToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dssoToken</stringProp>
                    <stringProp name="Argument.value">AQABAQIAAADW6jl31mB3T7ugrWTT8pFevDuW1Jgn_FaQoa51lUhFH7lr3bus2yy7_9AOS95m0tjHinSzlqOsnrzq6TAd9NeAgHt57Po5o3GddkZxaLRbEnYkPTxg0FTfDB4k5iV69-s343rgfXP77ogmnP5WQ0__Z34VwUJgUncckaE3aodiGjg8p7mTBbVwHVIEdr-BHNeKCrEsGnEqb-dunkdora7Yt5VsLpxza6oxpZdC6LBM3XBLyXQgSq-xQ1lJa53iGoLq6ejrvwCT0i-9vT6U-Vljk9Og9XLVzTqXGxErmvvwMyAA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ps</stringProp>
                    <stringProp name="Argument.value">55</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCDefaultType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCDefaultType</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCEntropy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCEntropy</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCSLK" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCSLK</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">wGAGhWlvQwXhfXsN0rlHjgQ/8TXPNluvNPXawJjpFnM=6:1:CANARY:z4e28Asl113wlMUkYXhqnfWAlK0Ndiw9tx6cLgOdJes=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value">rQQIARAAnZHBa9NgAMWTdqtdp65MGF6EUscUNW2Sfk3awpBudV27Ll3HatOOMb4kX9q0X5PYL122jt133EFE9LbjQBi7OPSgnoSdJijKToIosoPITjt4sMP_wMvjvdt7vxfw8ZFYMsLe8fIRNjWuqjFRVDnAQJAQGRAXeSahJBJMnOM5TRPigNVjndFAkH-Rm1n58G5q-0no8_1vr8f2aLHhODZJRaPYhUwdWwrEDILE6RKmoegMNDima0Rgr9tBLlKI4SASMZETPaTpY5r-SdN7nnFdUTRW5BRG5RFkAOi7JAAKA1UAWE4HSSWZPPGMFNNdp8FfiNUxeujM49c7sN5GpvPMa6ONvF2bzgm5ptQqZqVmLTODC0vp9WJl3pEyOVeaZkG1Wd4oLOWx1MyxEl9yq70SkIwcybU5rGUfGEWTGLASZ2tyvlGNLdoKHy8jeQrnmpahth-2oJzH1VjJ0GV28sA7rmtKUoRIY3jQRwVEQWQUtj8ACqyIRJ5lBZ078t6wbGQaWsjuWLqBUcjSdWyYaBWqKiLki5c-HqBPB8b8nuCt61SIuj3BelN-fyBIXaTzAXp3sM99eeLxlcLuYeb5--LNP0PD1NFg1M2ms40KXiu5ckOXicR28GyzXoomluQFCXfXpAUZuvmmPWPOTwopbsdH7_iuHfiG_N4gFfZOL3BHvpE2gTjSJBGlY7kEdX776O1L1Ksh4f8-fRqg9wJ3a6bSMivJjFDtLQou1mRJihcXYdcut-elcq0xN9UzYwWbS1hgP0AfD9MnlxMBn4qh0Sajkc3wPy6rjtVCZji1GV5vk1VVvXBrEHcRCaeWw_324ZWtra23V6jzq2ffX3789OPNr9nTkXs9gPhEmmCOi7l4vtyqyo1Hpl5J4zlW0gw36awLaqFe1PKITO4Hqa9B6i81</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">0d94265b-a24c-44b8-9bc7-4f23fc090b00</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">AQABIQEAAADW6jl31mB3T7ugrWTT8pFeNe4QyrDXe4IXLpqRADvaOukxBRRicu4ldSIIjbtiSD1dhOSKNX9_JzMse3sPzG2sVhMl8SZoUWZiKTjnYlrcKohE4RZ8flpc1t4LED6totkXxJpAiaxk95s0qOM_C78kmEL8xL9_IRWgny4TVcBttCoCi96tnJd5bX4T-q3DI_7Wnq0Q8UBcGGpjhq6Of5Mp2ZYS6dLio_5v1IjYHi650a8cWarl-YrbwVla30BJkqdNawrPvmM5yUDSPC8zBHqv2Qe8Ud7jU8jlwZvJXuCgsjz_Lnkz8Xg8g7JOw0QVHCp1t1oLu8y-blJHXcv5y9ev-pXkWTShzeg9LfKb1ii0T0uybduBpVjsVnrCVdRdYPdIMSgI8Oxz24i4vMLckurFEsr_Kb15wEFyr3M8xS4oiNvgWn6q4dKN7jm-WruHUoiPoq0bVsgp6_PvtqVYkQff2EoYlEPSbO3b8OTNY7QE18tOiDuR-zT4IQ1S5P8bGjrRgL5dZVb-M-HB_xcAATI-vswgBqVC1yO31b9-l9vIM1z27Io9aay6eixKklaHs5kgAA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="PPSX" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PPSX</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="NewUser" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NewUser</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="FoundMSAs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">FoundMSAs</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="fspost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fspost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="i21" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i21</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="CookieDisclosure" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CookieDisclosure</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="IsFidoSupported" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsFidoSupported</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="isSignupPost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isSignupPost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="DfpArtifact" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">DfpArtifact</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">4432</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/authorize?client_id=cc377c14-a487-4572-8b88-5121dd6540f3&amp;scope=openid%20profile%20offline_access&amp;redirect_uri=${scheme}%3A%2F%2Flwa-global-eastus-hbf-ai1-ui.azurewebsites.net&amp;client-request-id=4649ad32-d15d-42c1-8896-20d73fe3bb16&amp;response_mode=fragment&amp;response_type=code&amp;x-client-SKU=msal.js.browser&amp;x-client-VER=2.39.0&amp;client_info=1&amp;code_challenge=WH8PP2BWJAnCEBJtg-c-sqhXeHzqPmeb2B6J9qHnP6E&amp;code_challenge_method=S256&amp;nonce=fbbd071b-c2ea-441b-944b-ac4401f49b99&amp;state=eyJpZCI6IjNkOGNjZDFlLTAxOWMtNDIwNC04YjUyLTJlNjI0N2QwYzQ4NiIsIm1ldGEiOnsiaW50ZXJhY3Rpb25UeXBlIjoicmVkaXJlY3QifX0%3D&amp;claims=%7B%22access_token%22%3A%7B%22xms_cc%22%3A%7B%22values%22%3A%5B%22CP1%22%5D%7D%7D%7D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-260" enabled="true">
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.htm</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Purpose" elementType="Header">
                    <stringProp name="Header.name">Purpose</stringProp>
                    <stringProp name="Header.value">prefetch</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-261" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/SAS/BeginAuth</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;AuthMethodId&quot;:&quot;PhoneAppNotification&quot;,&quot;Method&quot;:&quot;BeginAuth&quot;,&quot;ctx&quot;:&quot;rQQIARAAnZHNb9NmAMbtuIQk0DUUCcEBKcoqNgF2bMex44iKNQlNnbZOUzXUCaqq1_br2u7rD_xRt0G97MSRw4QQu3GsNAn1MgSHbadJPRVpExPaAYFAiANCnDggsXT7D3Z59DzH3-_JpVmqLFL0RYKl6NqUppUFQWM4EnBVgeQqAktW1WqVrDAso-t8haONcjCZy7M_SbNrT3-r375beHb11ZMze7hgRpEf1kollAByA3kqQCQEYRSHpKkaJLAYMrYoMIwDmEA1tCIYUi6MSo9w_BDH3-L4XmrKUFWdFhiV1FgISI4bNZHjVBJoHEczBieqovg8NdGZiSOTPQovsIbwYypjBGDDgW50n_DhTtsfNCResuXNTku2B81ZtLAys91ZXYzkppTIDZrr272dhZU2km2Jltlu0h92OdmSQslhkN66ZnXc0AKrFXqgtM1-edlX2UoPKnUk2Z6lOdc3gdJG_XLXMhR6ep-YMnRVFADUSZYbqeIEXiBVegQAeFqAAkvTvMEcEOc9H7qWXvADz7AQLHiGgSwXrgNNg2H4F4G_JM6BQDOBCygHIOu7kbYYIRhQmuccjuHvxs5kUvlvzmIF7NsLNFHLZHJ57Gh9GsMfHBt9cuPCD-MLDx41f_y98_Xn7Ans4Fgpac20zFW01U0U01BCmQ7QnL3RLVVXlCUZxVvykgKStu3PuovTfI25k8bvpE_vp7MZIo8VicYSc5CecEKAKDuk1MBLQhh8SKduH8cfZ_n_9_e9HL6XuzRw1U13VWzy_eEynyBdkeVKZxnEfs9ZlHsDc74-dMsLPlP1uIc5_PAE_v3J8Qw2mc1eObW_Vvny99zzk9VcWkPAcsJJ6lbxP4frkbcJ3WLtVnHbCdc17ahtARTDsFi7URzRFNd2d3d_Hcc-ffXx9c9__Pnml_dzBxOn56g6VZj9V3Wh4Tk-cHfeTVzu-nLQ32q0m3F3CAXRtJ2e0RLm69vKTV3zmb6kwuVyXdyY79HTD_PYizz24RT-Dw2&quot;,&quot;flowToken&quot;:&quot;AQABIQEAAADW6jl31mB3T7ugrWTT8pFefKTrg4-FO_f_UjtAj5J388JlKfmv_1fWSAg_lKAx-GcuhaKd7K3qaoVu_jvhLlxewbc3len3HkA48CiRnWbtMqJEE6zX4FWzuvAWS1dBCnwgHJAetHo2P4nRsTOnLp1OWwXE_t6wqvz0dv5FD48F0mIuo3GuJMucgzZwHW8rUakbQW_I3Vqst-pQjCLJzjj8JVbmw8zTTiDyh5mmrgrTC6bUMXTNDQFaKxkQKLwvpvgSal0cQGgi1QtbxK5WKegngWa-zWGFfwvN-zYdAdYDs-eGWMmI2COXMMv77p1LFRCA8K53rarnhva8XGWa5ePEkbyFbrK1SEckUsDQRBp_SMX7u0M4mmRIIZZfooqrrzXyZncgESqGMerTiQ9ji2csnRUEBN9ta43jEhJ6cu51vMFp4QcCoozratIFQQGpGfGmgUmQgMTDuWr3gDBSTFgMSC_DPJPOyuHmLwayaQO-skHnFbR6v9DmcCRlU5NZGgS6isq3MNWBf2YpBFfP-0T80CkvvZDFKo-sywUZnSa7YWXYPmI72W0qbJtHhrYFhGWm2DWUK2uOKPDTKDZyDPSXq4HjdDtRI70EwZKXMww8SvXQ1Sjfo_kmkjFxuoFbwLJDyl9gVdrP9CKvb4pLfdExCeZTG7CE55Zt6WTlKHw50JPFjmgAuhSzbixPuvSBN3V_EyiuPDlPdPPMVZdMXuH312GhXdkjbcgWNMhBbqZFpth91ZQXQm3qDHIEk69hiummO-y2uG56tB9Ecxj4aKykDwMyljSNZuKITbWOV5-8DZPq3Z7OM3WOiXICzTccHHBYxY9Ui_Ocn960wS6rJzqUiTKiJsFm1IVpY7GIZPSXPLsNSApyoKEdcgF-jDWEHzgnmToCV-mYs7qUliDksiCA0UEMQ1aJnpiHnPYzkSzop6ZctkVKcjzWSsqBLuHA-kIgAA&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">2000</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/login</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">PAQABDgEAAADW6jl31mB3T7ugrWTT8pFexPdP_hxe5JaswRuM2HAspp28_k3A9C9XENonjhceu7MarYwKNCUw5DoBcyyPRTkhSYlagfEESfoYezyhwRvka3d1Sbr9ri8mk7_NJZTRNaYLzaDJP2iX2BE0hK31jZQxliligu9u1JMioKO3zibVoDJq0AHu_J1MYN0sPheLPBbX3lkDxf1BGpWFAPbKD1owTjHejNY6qr5J7VbhGXIwQiAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">4a095bd4-a780-41bf-897a-09784386da00</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1114</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-262" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/SAS/EndAuth</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="authMethodId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">authMethodId</stringProp>
                    <stringProp name="Argument.value">PhoneAppNotification</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="pollCount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pollCount</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">2000</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/login</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">PAQABDgEAAADW6jl31mB3T7ugrWTT8pFexPdP_hxe5JaswRuM2HAspp28_k3A9C9XENonjhceu7MarYwKNCUw5DoBcyyPRTkhSYlagfEESfoYezyhwRvka3d1Sbr9ri8mk7_NJZTRNaYLzaDJP2iX2BE0hK31jZQxliligu9u1JMioKO3zibVoDJq0AHu_J1MYN0sPheLPBbX3lkDxf1BGpWFAPbKD1owTjHejNY6qr5J7VbhGXIwQiAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-ctx" elementType="Header">
                    <stringProp name="Header.name">x-ms-ctx</stringProp>
                    <stringProp name="Header.value">rQQIARAAnZHNb9NmAMbtuIQk0DUUCcEBKcoqNgF2bMex44iKNQlNnbZOUzXUCaqq1_br2u7rD_xRt0G97MSRw4QQu3GsNAn1MgSHbadJPRVpExPaAYFAiANCnDggsXT7D3Z59DzH3-_JpVmqLFL0RYKl6NqUppUFQWM4EnBVgeQqAktW1WqVrDAso-t8haONcjCZy7M_SbNrT3-r375beHb11ZMze7hgRpEf1kollAByA3kqQCQEYRSHpKkaJLAYMrYoMIwDmEA1tCIYUi6MSo9w_BDH3-L4XmrKUFWdFhiV1FgISI4bNZHjVBJoHEczBieqovg8NdGZiSOTPQovsIbwYypjBGDDgW50n_DhTtsfNCResuXNTku2B81ZtLAys91ZXYzkppTIDZrr272dhZU2km2Jltlu0h92OdmSQslhkN66ZnXc0AKrFXqgtM1-edlX2UoPKnUk2Z6lOdc3gdJG_XLXMhR6ep-YMnRVFADUSZYbqeIEXiBVegQAeFqAAkvTvMEcEOc9H7qWXvADz7AQLHiGgSwXrgNNg2H4F4G_JM6BQDOBCygHIOu7kbYYIRhQmuccjuHvxs5kUvlvzmIF7NsLNFHLZHJ57Gh9GsMfHBt9cuPCD-MLDx41f_y98_Xn7Ans4Fgpac20zFW01U0U01BCmQ7QnL3RLVVXlCUZxVvykgKStu3PuovTfI25k8bvpE_vp7MZIo8VicYSc5CecEKAKDuk1MBLQhh8SKduH8cfZ_n_9_e9HL6XuzRw1U13VWzy_eEynyBdkeVKZxnEfs9ZlHsDc74-dMsLPlP1uIc5_PAE_v3J8Qw2mc1eObW_Vvny99zzk9VcWkPAcsJJ6lbxP4frkbcJ3WLtVnHbCdc17ahtARTDsFi7URzRFNd2d3d_Hcc-ffXx9c9__Pnml_dzBxOn56g6VZj9V3Wh4Tk-cHfeTVzu-nLQ32q0m3F3CAXRtJ2e0RLm69vKTV3zmb6kwuVyXdyY79HTD_PYizz24RT-Dw2</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">4a095bd4-a780-41bf-897a-09784386da00</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1114</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-flowToken" elementType="Header">
                    <stringProp name="Header.name">x-ms-flowToken</stringProp>
                    <stringProp name="Header.value">AQABIQEAAADW6jl31mB3T7ugrWTT8pFeW6BcXa1w2LWr3wVAnmWI4iGR4EpxQ8y3w01Adx5tY59ffJx79RBGQOEfrTVpR2SE66wz0wHfLCPBnLvYWuW9V8Uyt7_NZFjfGlmS04_VmsVQ4lCHEBk247T8Zd_e1K0v40lR1wcNLBjXmZpRx8vLlpT8SduQjd3p6wogFbxr4vcJ_98YFTbkBGMeq3ZD9o7DaeAMrGrFovo5NBcZRoHIo9loryFm4zAqbZwbftYmsxj2QDKIbU4HaUwt6evPx4KXemA3JougOFgalSgJ-fBaYdk7Ss5Ku66aeUF8dK6MdZD8TWS3g71cPrgLiuXqTmRFD8Oij1C8IGRjA1j2leIvIubfYVRRgkYiy_bDwX7-SvCeFIQP_EqHf5r5oy4JQrBG8E5w1ICimCybLTxeiGmaPCR9yP-vq9KDgHC3eBCTkhvXT2t8mSg5fH4aZrAwjVLyFUJuwt0_DKvsJG74vCWhXO6FRNkibJZIZq8CKrrH92Z3r5lp2GLTbg-bt2bs4crMnKklWJpJ15LVzK_xhQgfTD-y6K-epMvsiRzNQrDI1C8nAxwBSyRW69WQKNAqGY3nPlrRVUwNxbwNsitEazp1UqaK4YNNajfZ_1uB6eNhmuvAaQH0u1mHaZsdYnVdAWrs9txWPMgYhQpcUzYgi2dryOcM8rf8CU_-k9RLB4Hd9NI76e6BDFT45Vq5QPs3gUzuFs5WXdkKZvEbFX_Ks6dDrJee_eNM3KEQLurWsAzZALKNqz9rl3VuNuLTH5RVFK-0kAxLpFDshnGemk_I-PY-DpWRoOIBkx2y9tm17c9j5QWDiwYjNaooCjqt5HIYhTudUMf5eo79L1ueA6iUH4OhyxNlwmufgRt2KMzGQ1ttgAARc7HrGWSJoD_S565VRt02LFHPf9dnJNiri69iP77w4sKhSJaN5CKjrN9ZHHXLgE7ZedQzZamjr257bwA0_VkTrvx423KW8sragzv6ualJlf898qB0km-H_-b5bZ_NrKPtJCIEUx5AQzddNRgkQCzjfjJ2qJvHgHC-_flrW0Eu0v-9BrY8KUzuShg7ripS9hiAgUzUBdDTKuQnslfsi-FtIAA</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-sessionId" elementType="Header">
                    <stringProp name="Header.name">x-ms-sessionId</stringProp>
                    <stringProp name="Header.value">220831f1-e716-4b0e-8063-e80a91abdb63</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-263" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/SAS/EndAuth</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="authMethodId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">authMethodId</stringProp>
                    <stringProp name="Argument.value">PhoneAppNotification</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="pollCount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pollCount</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lastPollStart" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollStart</stringProp>
                    <stringProp name="Argument.value">1730988387931</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="lastPollEnd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollEnd</stringProp>
                    <stringProp name="Argument.value">1730988389158</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">2000</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/login</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">PAQABDgEAAADW6jl31mB3T7ugrWTT8pFexPdP_hxe5JaswRuM2HAspp28_k3A9C9XENonjhceu7MarYwKNCUw5DoBcyyPRTkhSYlagfEESfoYezyhwRvka3d1Sbr9ri8mk7_NJZTRNaYLzaDJP2iX2BE0hK31jZQxliligu9u1JMioKO3zibVoDJq0AHu_J1MYN0sPheLPBbX3lkDxf1BGpWFAPbKD1owTjHejNY6qr5J7VbhGXIwQiAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-ctx" elementType="Header">
                    <stringProp name="Header.name">x-ms-ctx</stringProp>
                    <stringProp name="Header.value">rQQIARAAnZHNb9NmAMbtuIQk0DUUCcEBKcoqNgF2bMex44iKNQlNnbZOUzXUCaqq1_br2u7rD_xRt0G97MSRw4QQu3GsNAn1MgSHbadJPRVpExPaAYFAiANCnDggsXT7D3Z59DzH3-_JpVmqLFL0RYKl6NqUppUFQWM4EnBVgeQqAktW1WqVrDAso-t8haONcjCZy7M_SbNrT3-r375beHb11ZMze7hgRpEf1kollAByA3kqQCQEYRSHpKkaJLAYMrYoMIwDmEA1tCIYUi6MSo9w_BDH3-L4XmrKUFWdFhiV1FgISI4bNZHjVBJoHEczBieqovg8NdGZiSOTPQovsIbwYypjBGDDgW50n_DhTtsfNCResuXNTku2B81ZtLAys91ZXYzkppTIDZrr272dhZU2km2Jltlu0h92OdmSQslhkN66ZnXc0AKrFXqgtM1-edlX2UoPKnUk2Z6lOdc3gdJG_XLXMhR6ep-YMnRVFADUSZYbqeIEXiBVegQAeFqAAkvTvMEcEOc9H7qWXvADz7AQLHiGgSwXrgNNg2H4F4G_JM6BQDOBCygHIOu7kbYYIRhQmuccjuHvxs5kUvlvzmIF7NsLNFHLZHJ57Gh9GsMfHBt9cuPCD-MLDx41f_y98_Xn7Ans4Fgpac20zFW01U0U01BCmQ7QnL3RLVVXlCUZxVvykgKStu3PuovTfI25k8bvpE_vp7MZIo8VicYSc5CecEKAKDuk1MBLQhh8SKduH8cfZ_n_9_e9HL6XuzRw1U13VWzy_eEynyBdkeVKZxnEfs9ZlHsDc74-dMsLPlP1uIc5_PAE_v3J8Qw2mc1eObW_Vvny99zzk9VcWkPAcsJJ6lbxP4frkbcJ3WLtVnHbCdc17ahtARTDsFi7URzRFNd2d3d_Hcc-ffXx9c9__Pnml_dzBxOn56g6VZj9V3Wh4Tk-cHfeTVzu-nLQ32q0m3F3CAXRtJ2e0RLm69vKTV3zmb6kwuVyXdyY79HTD_PYizz24RT-Dw2</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">4a095bd4-a780-41bf-897a-09784386da00</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1114</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-flowToken" elementType="Header">
                    <stringProp name="Header.name">x-ms-flowToken</stringProp>
                    <stringProp name="Header.value">AQABIQEAAADW6jl31mB3T7ugrWTT8pFeeAci4OHUj2be7lmva-VyG16gaK9qR_DHFMJWEvKRSwRANPzbzQRFix6ai85OimOjTT9wKSbrRDWNiB8pINKCWQ8yw4vWmKzrZoCLKGFyWJyOPpW0TqkZNs_q2XPi-hhiAkaoC-rOIQqXCJwrr_PRXrUxeZx9jH0D1rX55UN0ec7J8YUBQGTGEl-VIXW6O7iSa1os0zIpU6i1YUkW_QpNwm5S40fLscojhJ2ZLkHp7HvPbwhs_31LO8_PItUCrZ1uhS6grNlnaztEtFxmwavtMFqDJLZp9meNFhGG0JtzgV15r9jtWpNRUSw9F282_WMIH-MvEAGgPBFVnjRot80BsFZAQoDpvK9LKkhusbm_q_X8IIUSY6zEu8A10H-HVqDJkfAjAFTq8jKZieek2GgDakr1cN9YurF10Ty323kaarQqHO4hIRsd6ZoO8oxalVzLJUJT2Ygs6HD5iNFGMJX3qgzj0GuUqsYn9vny-KYGsCQba_H8YVZoOFHeVZQCoqKv9Qt03-cqvU_DO4xsFlWyqLg9x34ozIZYZE_IUjiUZsJdD-3IftzKwz7184ymQItccQSOoK24mZ2YLDCqWIXrahY3jvZDZghkmqpk8UfPXG97BliyxS8rBZTpJUcAZ0fHAeGiqGyOz1jMr8vXyF3qPP9y4sfDRXiCTrm0DTxjyqTFRkmoKrp4ho9zWbNza3FIteK2sSzpjJT2DlrXx9uJa19yCmuCiJyfqH_VoXo9rJ3kkGOoXOtKBKQGu2k_wTVknL84EsDJcSrdrUBRD86eJ3JEjSYRmu2UOgYPSjwazuhVm5DkixyIZ_IgUzFhUcLSWHCsEn6XZ77SWpc9fqDhGkbUfu3I7ibAPKtDUphpvv7lgkcy74nUKzNGpAuF5VqsnNvt5uzMPG0WdQkrPKtDKTTx4CmuhxXxFXJwYqVKmjE1TG2NQY7MQzoh-N5N48moZI2mQAXyFgEhZXkmtxrbXwyCZB6QNCNqd6JoPLjnm3V8CbLK_p3tuLNNoSCnwb2-M1YE8UCkdM8UuO0LvND6X9G_57X8wW4Ss25-XfSAMhXWa0P97XOtHhaxZI_gY5VdIAA</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-sessionId" elementType="Header">
                    <stringProp name="Header.name">x-ms-sessionId</stringProp>
                    <stringProp name="Header.value">220831f1-e716-4b0e-8063-e80a91abdb63</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-264" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/SAS/EndAuth</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="authMethodId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">authMethodId</stringProp>
                    <stringProp name="Argument.value">PhoneAppNotification</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="pollCount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pollCount</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lastPollStart" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollStart</stringProp>
                    <stringProp name="Argument.value">1730988389234</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lastPollEnd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollEnd</stringProp>
                    <stringProp name="Argument.value">1730988389527</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">2000</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/login</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">PAQABDgEAAADW6jl31mB3T7ugrWTT8pFexPdP_hxe5JaswRuM2HAspp28_k3A9C9XENonjhceu7MarYwKNCUw5DoBcyyPRTkhSYlagfEESfoYezyhwRvka3d1Sbr9ri8mk7_NJZTRNaYLzaDJP2iX2BE0hK31jZQxliligu9u1JMioKO3zibVoDJq0AHu_J1MYN0sPheLPBbX3lkDxf1BGpWFAPbKD1owTjHejNY6qr5J7VbhGXIwQiAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-ctx" elementType="Header">
                    <stringProp name="Header.name">x-ms-ctx</stringProp>
                    <stringProp name="Header.value">rQQIARAAnZHNb9NmAMbtuIQk0DUUCcEBKcoqNgF2bMex44iKNQlNnbZOUzXUCaqq1_br2u7rD_xRt0G97MSRw4QQu3GsNAn1MgSHbadJPRVpExPaAYFAiANCnDggsXT7D3Z59DzH3-_JpVmqLFL0RYKl6NqUppUFQWM4EnBVgeQqAktW1WqVrDAso-t8haONcjCZy7M_SbNrT3-r375beHb11ZMze7hgRpEf1kollAByA3kqQCQEYRSHpKkaJLAYMrYoMIwDmEA1tCIYUi6MSo9w_BDH3-L4XmrKUFWdFhiV1FgISI4bNZHjVBJoHEczBieqovg8NdGZiSOTPQovsIbwYypjBGDDgW50n_DhTtsfNCResuXNTku2B81ZtLAys91ZXYzkppTIDZrr272dhZU2km2Jltlu0h92OdmSQslhkN66ZnXc0AKrFXqgtM1-edlX2UoPKnUk2Z6lOdc3gdJG_XLXMhR6ep-YMnRVFADUSZYbqeIEXiBVegQAeFqAAkvTvMEcEOc9H7qWXvADz7AQLHiGgSwXrgNNg2H4F4G_JM6BQDOBCygHIOu7kbYYIRhQmuccjuHvxs5kUvlvzmIF7NsLNFHLZHJ57Gh9GsMfHBt9cuPCD-MLDx41f_y98_Xn7Ans4Fgpac20zFW01U0U01BCmQ7QnL3RLVVXlCUZxVvykgKStu3PuovTfI25k8bvpE_vp7MZIo8VicYSc5CecEKAKDuk1MBLQhh8SKduH8cfZ_n_9_e9HL6XuzRw1U13VWzy_eEynyBdkeVKZxnEfs9ZlHsDc74-dMsLPlP1uIc5_PAE_v3J8Qw2mc1eObW_Vvny99zzk9VcWkPAcsJJ6lbxP4frkbcJ3WLtVnHbCdc17ahtARTDsFi7URzRFNd2d3d_Hcc-ffXx9c9__Pnml_dzBxOn56g6VZj9V3Wh4Tk-cHfeTVzu-nLQ32q0m3F3CAXRtJ2e0RLm69vKTV3zmb6kwuVyXdyY79HTD_PYizz24RT-Dw2</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">4a095bd4-a780-41bf-897a-09784386da00</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1114</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-flowToken" elementType="Header">
                    <stringProp name="Header.name">x-ms-flowToken</stringProp>
                    <stringProp name="Header.value">AQABIQEAAADW6jl31mB3T7ugrWTT8pFeLWF1Jc_n2FpKzR-h9Z0tNs5i77kExGLNh9f9e2hX__ck-jpBloSNI2vNoBStY3LPkiXVIcQabSw--lvJl4YWo2__qMo-HLf7yD5fddkkgb7gVPTV8kmi5hQArVt04y0AZp6at71IrzUoUdieqrDcPZaAWKrc-560R5VsnUDfvMtebEV5PeKefHOZU1cMNTVOEVkpTcwR-hhHLA6OUnc7pds8Aj9fkw0occkilxL0rq8Cid95b-Zj77aWGO4wYe6P6AHVKPxWmrlCxPLtB8Zv3md8BDawAKzd_hXrfXCY9s5sGj6gxqovo1xIaOzBppLx0kcbSV-a8KQiWfhmnvKKLWRbVXRskACcCidTILNiZ64AgHPzC-o-v1uRJP1bZ3FUT3nlG0z_gIEy_j2yrDXPbDd3eNX9vwlhnWhSwt44wDhyDgziocOG8A_-zgIfLAlIe0bGMsNdsIwVzNwVxTPFXHpol_1PD1EinsO2a2q9JW4B-uT1WgN7Ag25NQkYsOwqJNzdC51Ld5i3_zZA3pcnDj6eYjTtq5J6msyxvg78iJkDeOOs4X5W-7gTQANQcO2W6jWk0MJ4PxfcBY1yErKpmrHONjbRH-UZgLLBrReWqxYFTBBxsBQLZqh1dk8K_Z-HvrD_wdBgTZ-o5OjlkodfbvjW9oZ7TgyslScxVYDeFSiE5csFcEZfeuP79KOwCdmHYjAzRNGsNn49-JnxWKT3HhQwJw8oXw2580Ryw83ft0oGsfjBrX_PR7KqfBd3giiTCkweyU7B23OiAdRCdV7vlBtxRQFmMCDEn6hafENfCLE-hdyyffpExGqyKSvF1I8Lc9kteoc0MtI6zfjDMa6OA8FfvnlYp2mi0KF8eerScOrC6ro_dcJ6Jpjpw5ovx1ZOrOZOJiW6ELa5hcXa_RUiGKuw8RZAAisp8rLAqy5D60CLtmr2AWLDva2YTnpJ4sD6KUt-C8G8c3w-R2gHI2PApyH1PNBB6SzQrbPR79zPtLQ6LbhXCI6qMy890xO6dvr9jDTaP1a8xPKuGd_869JfMG9ZbcdLPlFWWFiD4CNV5yRWpK46bnDC41vm1FFcebQ4IAA</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-sessionId" elementType="Header">
                    <stringProp name="Header.name">x-ms-sessionId</stringProp>
                    <stringProp name="Header.value">220831f1-e716-4b0e-8063-e80a91abdb63</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-265" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/SAS/EndAuth</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="authMethodId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">authMethodId</stringProp>
                    <stringProp name="Argument.value">PhoneAppNotification</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="pollCount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pollCount</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lastPollStart" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollStart</stringProp>
                    <stringProp name="Argument.value">1730988390329</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lastPollEnd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollEnd</stringProp>
                    <stringProp name="Argument.value">1730988390619</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">2000</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/login</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">PAQABDgEAAADW6jl31mB3T7ugrWTT8pFexPdP_hxe5JaswRuM2HAspp28_k3A9C9XENonjhceu7MarYwKNCUw5DoBcyyPRTkhSYlagfEESfoYezyhwRvka3d1Sbr9ri8mk7_NJZTRNaYLzaDJP2iX2BE0hK31jZQxliligu9u1JMioKO3zibVoDJq0AHu_J1MYN0sPheLPBbX3lkDxf1BGpWFAPbKD1owTjHejNY6qr5J7VbhGXIwQiAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-ctx" elementType="Header">
                    <stringProp name="Header.name">x-ms-ctx</stringProp>
                    <stringProp name="Header.value">rQQIARAAnZHNb9NmAMbtuIQk0DUUCcEBKcoqNgF2bMex44iKNQlNnbZOUzXUCaqq1_br2u7rD_xRt0G97MSRw4QQu3GsNAn1MgSHbadJPRVpExPaAYFAiANCnDggsXT7D3Z59DzH3-_JpVmqLFL0RYKl6NqUppUFQWM4EnBVgeQqAktW1WqVrDAso-t8haONcjCZy7M_SbNrT3-r375beHb11ZMze7hgRpEf1kollAByA3kqQCQEYRSHpKkaJLAYMrYoMIwDmEA1tCIYUi6MSo9w_BDH3-L4XmrKUFWdFhiV1FgISI4bNZHjVBJoHEczBieqovg8NdGZiSOTPQovsIbwYypjBGDDgW50n_DhTtsfNCResuXNTku2B81ZtLAys91ZXYzkppTIDZrr272dhZU2km2Jltlu0h92OdmSQslhkN66ZnXc0AKrFXqgtM1-edlX2UoPKnUk2Z6lOdc3gdJG_XLXMhR6ep-YMnRVFADUSZYbqeIEXiBVegQAeFqAAkvTvMEcEOc9H7qWXvADz7AQLHiGgSwXrgNNg2H4F4G_JM6BQDOBCygHIOu7kbYYIRhQmuccjuHvxs5kUvlvzmIF7NsLNFHLZHJ57Gh9GsMfHBt9cuPCD-MLDx41f_y98_Xn7Ans4Fgpac20zFW01U0U01BCmQ7QnL3RLVVXlCUZxVvykgKStu3PuovTfI25k8bvpE_vp7MZIo8VicYSc5CecEKAKDuk1MBLQhh8SKduH8cfZ_n_9_e9HL6XuzRw1U13VWzy_eEynyBdkeVKZxnEfs9ZlHsDc74-dMsLPlP1uIc5_PAE_v3J8Qw2mc1eObW_Vvny99zzk9VcWkPAcsJJ6lbxP4frkbcJ3WLtVnHbCdc17ahtARTDsFi7URzRFNd2d3d_Hcc-ffXx9c9__Pnml_dzBxOn56g6VZj9V3Wh4Tk-cHfeTVzu-nLQ32q0m3F3CAXRtJ2e0RLm69vKTV3zmb6kwuVyXdyY79HTD_PYizz24RT-Dw2</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">4a095bd4-a780-41bf-897a-09784386da00</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1114</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-flowToken" elementType="Header">
                    <stringProp name="Header.name">x-ms-flowToken</stringProp>
                    <stringProp name="Header.value">AQABIQEAAADW6jl31mB3T7ugrWTT8pFeS2RQVHhWAhIJ8DnJZO3j5Zb3S1jLL2961anrqPnmypSkyvScxxpDmUWKO_DZct8nTE-RpMoiNuAjLJ4CAGFQKQ8GBVMKG94HvQl0dhsoHYjS_xhnYYzC1O1ai_XZJTGWDfBmPbE78x5osm7p4MkBEjL2wzma_NPye2Cd6ZBIcSFsM4wni_mkADxUPET5KBTXMYyblJ5O0mD6m6IeKtRZhxNxiWm0DNNIaCBpXp0bJpwNkb-V7-7vJK-FKamAnwRR79DnGwG_fYmu7diIs24xegWO5oeAWWLffjZefm9VVQUtodsp7ALSXNwU3T2UkwK5ioJawPZTNIYhEH2w3c5FkxowC7H25dVRyDNSa8BidIaB2Lr3_Vq9674UuMvke3lsviWMi8L39LzQtpK94ZeuGJu9lD73qk-qaqlfEGC6GJFgXkJOCVqpLYmRNeMmg4hybB8UQL9WQEIWyOXknDOO2vBMClSODcwTLxt4ZiJjyoJO1z1dc2OUkW6YeKSICQbyZFyJo-5ykibWTpEXFZ0j0klP8uO_F37zbYyOw5YE1SSP5jXkkwTLAM67Jk9qHIcLOD4jtWsiTuwdiEShOMsTBVvbS53d6YkicEvMdXYZkVG9KaNnFeYSoQ7ItTQFykx9lH6ByILxhxllWbIOYIVujJdXtQjPPQzNhi1VOgPavcJMnsfwgj-RHRa0kKICuavz0G_5wQKkPMirOCbD2xLgAJylRIFyFFZUfgGcN5pW3lhsf9xDjYwD7LDWaskCKlTFFhcjBvngGPaaStxLMUX74Wx5me3kl5ii0Ahtw0SIvH7nr9pnRAlW44wqz-Wfvu4LXSYvRK2S2RBa5xICj9RNOnrHoJJ4aJhuTRcxiG_f0Td1uQhJuLvNPK8zmUa8G_kSI-dzHALl7bd7TZ5sljMmd7D0FrZR9oRqCPfqR_teN9JNnzwJgz5GRYVp3KZ78EcFLjLdlo0LCMjaTQT0ipBYgAdpldb5kN0AQAZ005Ft_8akfPbvEwAO-Jt_Y8NVBU6IB07jTdN1u6nfRREP2PdewFBZL9qSaGtWbEzKSVWBO2uAI2nQa4Ry1MWxAweHzxw_IAA</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-sessionId" elementType="Header">
                    <stringProp name="Header.name">x-ms-sessionId</stringProp>
                    <stringProp name="Header.value">220831f1-e716-4b0e-8063-e80a91abdb63</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-266" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/SAS/EndAuth</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="authMethodId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">authMethodId</stringProp>
                    <stringProp name="Argument.value">PhoneAppNotification</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="pollCount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pollCount</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lastPollStart" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollStart</stringProp>
                    <stringProp name="Argument.value">1730988391426</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lastPollEnd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollEnd</stringProp>
                    <stringProp name="Argument.value">1730988391694</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">2000</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/login</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">PAQABDgEAAADW6jl31mB3T7ugrWTT8pFexPdP_hxe5JaswRuM2HAspp28_k3A9C9XENonjhceu7MarYwKNCUw5DoBcyyPRTkhSYlagfEESfoYezyhwRvka3d1Sbr9ri8mk7_NJZTRNaYLzaDJP2iX2BE0hK31jZQxliligu9u1JMioKO3zibVoDJq0AHu_J1MYN0sPheLPBbX3lkDxf1BGpWFAPbKD1owTjHejNY6qr5J7VbhGXIwQiAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-ctx" elementType="Header">
                    <stringProp name="Header.name">x-ms-ctx</stringProp>
                    <stringProp name="Header.value">rQQIARAAnZHNb9NmAMbtuIQk0DUUCcEBKcoqNgF2bMex44iKNQlNnbZOUzXUCaqq1_br2u7rD_xRt0G97MSRw4QQu3GsNAn1MgSHbadJPRVpExPaAYFAiANCnDggsXT7D3Z59DzH3-_JpVmqLFL0RYKl6NqUppUFQWM4EnBVgeQqAktW1WqVrDAso-t8haONcjCZy7M_SbNrT3-r375beHb11ZMze7hgRpEf1kollAByA3kqQCQEYRSHpKkaJLAYMrYoMIwDmEA1tCIYUi6MSo9w_BDH3-L4XmrKUFWdFhiV1FgISI4bNZHjVBJoHEczBieqovg8NdGZiSOTPQovsIbwYypjBGDDgW50n_DhTtsfNCResuXNTku2B81ZtLAys91ZXYzkppTIDZrr272dhZU2km2Jltlu0h92OdmSQslhkN66ZnXc0AKrFXqgtM1-edlX2UoPKnUk2Z6lOdc3gdJG_XLXMhR6ep-YMnRVFADUSZYbqeIEXiBVegQAeFqAAkvTvMEcEOc9H7qWXvADz7AQLHiGgSwXrgNNg2H4F4G_JM6BQDOBCygHIOu7kbYYIRhQmuccjuHvxs5kUvlvzmIF7NsLNFHLZHJ57Gh9GsMfHBt9cuPCD-MLDx41f_y98_Xn7Ans4Fgpac20zFW01U0U01BCmQ7QnL3RLVVXlCUZxVvykgKStu3PuovTfI25k8bvpE_vp7MZIo8VicYSc5CecEKAKDuk1MBLQhh8SKduH8cfZ_n_9_e9HL6XuzRw1U13VWzy_eEynyBdkeVKZxnEfs9ZlHsDc74-dMsLPlP1uIc5_PAE_v3J8Qw2mc1eObW_Vvny99zzk9VcWkPAcsJJ6lbxP4frkbcJ3WLtVnHbCdc17ahtARTDsFi7URzRFNd2d3d_Hcc-ffXx9c9__Pnml_dzBxOn56g6VZj9V3Wh4Tk-cHfeTVzu-nLQ32q0m3F3CAXRtJ2e0RLm69vKTV3zmb6kwuVyXdyY79HTD_PYizz24RT-Dw2</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">4a095bd4-a780-41bf-897a-09784386da00</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1114</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-flowToken" elementType="Header">
                    <stringProp name="Header.name">x-ms-flowToken</stringProp>
                    <stringProp name="Header.value">AQABIQEAAADW6jl31mB3T7ugrWTT8pFeU9-9i4ONE-MhQ8BQyJWyjUSTJsbrvx97iiP8tW1IYknWfR8WNyzNyukldEJ9kKYpL6-c7FpdJ-PcvtKdQ-uEg-B4ceT9K7mp3EDCupvUsygRfB4cUXHsSLsBBJG_OxXgn3IzmEbaZ5CQh4J93p-N7AxJ3jQPfkhlECgjiftZf3x7vIo_y6rPhtFLeCCalbXd7GFxkqUlcCzXxDN1LSICAkBAw04fXMe3TUCoR6IRX2Ek6HOU2M8xs2PXjpcVwCYUmQ4fRIr_F6YJgLaTigR0dCAScmyE4lkakrJtTExFNT4K3rdP_R5-uGa2LZopZbXXNO0DGmz2zlvpi2K6GF-0yQVAsvGsh6a753iZWD2XTZUrt6he1F_16goGT9MP5CIuaa_ne_JBQQ0svRiUTW2sk-CN-ehBTPoOw3VmVqK3oG58EfdMX-gxNEwYVDW06VfhCPkFfUQ-AIK9gbHm5mntn0acRiPTUvEGEaqbT-SHGmlZoTzxenCDTQqJhODcU89Yo-KqyVpdR6Kt1SuXCv4Pjjp8E5ImxDjKYoUcekJ6PzHe9xRNEF-pmEAE-2RrXxx_f9PY3HBXN3QXqooC9XDnojqPIUnCpqGZFl8MxxLN9vKT2tSn3npGy73sSghqk608-JJ9Ytp0PjawoDTHSGzLNNgu4fP2SExnQ2aDMICIkRK3bQMrHWIAQBV4KzQBhSh97t4nuhS1omTNyecaVSmx7XcAi93WBXy7MAMYziJHLxkI7Q7sdANKhBJJpuBqs7HT7X89Xy2e58aG-CFzx04u3ezG0rdoGuPo5m7wF_E30wYqLrsdeS7kIC2TY-MNZqA99kQbKKcnGoM35f6-zUj29Ld2aPwHioqoMDcF3nSc1KyoPO2XcYhcITaNjT58-124Pe856imGdOhS139-YAoaMmTyQ6yu5S-Z0WxQFqMhwY5-a_ZxvEv9c_veXEA4kkLF0VhcELtO5w9nljti6PBWFoRuLTgsXQZxIQjiSxRNzMxpcgSQN2a7woY2_mxtc8vZOmMGfiOVk47NoK8IK9qqr-MxEqyQvHwipYjukAdbkb96KXzJD67t6dMvcSueuhAtIAA</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-sessionId" elementType="Header">
                    <stringProp name="Header.name">x-ms-sessionId</stringProp>
                    <stringProp name="Header.value">220831f1-e716-4b0e-8063-e80a91abdb63</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-267" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/SAS/EndAuth</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="authMethodId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">authMethodId</stringProp>
                    <stringProp name="Argument.value">PhoneAppNotification</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="pollCount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pollCount</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lastPollStart" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollStart</stringProp>
                    <stringProp name="Argument.value">1730988392626</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lastPollEnd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollEnd</stringProp>
                    <stringProp name="Argument.value">1730988392876</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">2000</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/login</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">PAQABDgEAAADW6jl31mB3T7ugrWTT8pFexPdP_hxe5JaswRuM2HAspp28_k3A9C9XENonjhceu7MarYwKNCUw5DoBcyyPRTkhSYlagfEESfoYezyhwRvka3d1Sbr9ri8mk7_NJZTRNaYLzaDJP2iX2BE0hK31jZQxliligu9u1JMioKO3zibVoDJq0AHu_J1MYN0sPheLPBbX3lkDxf1BGpWFAPbKD1owTjHejNY6qr5J7VbhGXIwQiAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-ctx" elementType="Header">
                    <stringProp name="Header.name">x-ms-ctx</stringProp>
                    <stringProp name="Header.value">rQQIARAAnZHNb9NmAMbtuIQk0DUUCcEBKcoqNgF2bMex44iKNQlNnbZOUzXUCaqq1_br2u7rD_xRt0G97MSRw4QQu3GsNAn1MgSHbadJPRVpExPaAYFAiANCnDggsXT7D3Z59DzH3-_JpVmqLFL0RYKl6NqUppUFQWM4EnBVgeQqAktW1WqVrDAso-t8haONcjCZy7M_SbNrT3-r375beHb11ZMze7hgRpEf1kollAByA3kqQCQEYRSHpKkaJLAYMrYoMIwDmEA1tCIYUi6MSo9w_BDH3-L4XmrKUFWdFhiV1FgISI4bNZHjVBJoHEczBieqovg8NdGZiSOTPQovsIbwYypjBGDDgW50n_DhTtsfNCResuXNTku2B81ZtLAys91ZXYzkppTIDZrr272dhZU2km2Jltlu0h92OdmSQslhkN66ZnXc0AKrFXqgtM1-edlX2UoPKnUk2Z6lOdc3gdJG_XLXMhR6ep-YMnRVFADUSZYbqeIEXiBVegQAeFqAAkvTvMEcEOc9H7qWXvADz7AQLHiGgSwXrgNNg2H4F4G_JM6BQDOBCygHIOu7kbYYIRhQmuccjuHvxs5kUvlvzmIF7NsLNFHLZHJ57Gh9GsMfHBt9cuPCD-MLDx41f_y98_Xn7Ans4Fgpac20zFW01U0U01BCmQ7QnL3RLVVXlCUZxVvykgKStu3PuovTfI25k8bvpE_vp7MZIo8VicYSc5CecEKAKDuk1MBLQhh8SKduH8cfZ_n_9_e9HL6XuzRw1U13VWzy_eEynyBdkeVKZxnEfs9ZlHsDc74-dMsLPlP1uIc5_PAE_v3J8Qw2mc1eObW_Vvny99zzk9VcWkPAcsJJ6lbxP4frkbcJ3WLtVnHbCdc17ahtARTDsFi7URzRFNd2d3d_Hcc-ffXx9c9__Pnml_dzBxOn56g6VZj9V3Wh4Tk-cHfeTVzu-nLQ32q0m3F3CAXRtJ2e0RLm69vKTV3zmb6kwuVyXdyY79HTD_PYizz24RT-Dw2</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">4a095bd4-a780-41bf-897a-09784386da00</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1114</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-flowToken" elementType="Header">
                    <stringProp name="Header.name">x-ms-flowToken</stringProp>
                    <stringProp name="Header.value">AQABIQEAAADW6jl31mB3T7ugrWTT8pFeTnMS9lkvSK_SMrSe2dcDF8Ihmkbt83WfYu7is4sTEDcZrydKHjLUnkYSHIzVrDISAr_InHt3VZbU4zD1vjxY6bcrl5jA-tzSsV357aW3Y4BXWrRq_YdHMmjJiWNg4j14gYoBc4uxHQP1RCHWRH3JD9yiyfWsn9W7JYW2buzY2krX1SHQpAYhUfXzAzRP6fE0neKiXau3fiAGmUqnGuFsq_8KHn9ABvOD7dxGdhxxqB14SwevNaxIX5aegtpkeclWVXSroe8sx7XI2JO8mssVxjO6Y6rhnz_L4ZFVVsx51Qbdb6J57AOpYhIMS4vNQ8NR6gaZYWXI6CTq3_rfYrNU24XM1pXKtZGhANm-IP0N1gdOeC-fipJq7FZdFnv6aLr-_pkwPx9ZT9gPbfAvIui2usXQJKtU4yuoT-5ADcG5tGqgTTnOlXmO0owFkbilr8iSsIBoARk0IYEuuoGFhFn8GcCjUBD53UARYRYuARTIINKw2HI2cXW6EL9l0woAubGEMMp40OO34WPXXABcv3LJrprdlyCN7yToTq1RjGZMBroTMgIc3Mj5aqi0bfiGd2g_yAaSqVH8kERZfu2EGaYvHtrLFDZusPF3s5uYTIDNWhhkC_pFbSE6YU0c6FGjQQYKuKYCHFgDPzo18Q30wZuLU5RvsiwiRzr3hrmkEgMAwOlUU8Ynv4IMhyT3ylMFBANMQXCpsw4nwshGVkb57AYEXhPqbepjzMCvA_9lCmE5PkLxci-JhNOGVeaQcNJvhFE9I8m7YDMhu4F2HLEDz5Pivz5bSumNFck6JO0V6Kfw0F-cNq0h4VSc4iyKmcuCiozkmYwbgyR9j-VW6kuIjo_vF0oCYHbJhEAOtsBbBgswjzx6Q1EIOiSKnW62K6q6oRTZbcrbQops6EjjIN5pCStjaaz0E4JkBbqGeo7UfSY8al-sm9b-_RogVnOButDbOaIEKZQnWpdyv76lSS3YHTMzDV2dbaKsXAqYk0LZVi1KYsBbzZBS5uMzd_2XElJiQuQ_RsoxUPfVFXPuEE0bAOXMpI130BB0osRmZ7L5erNayJMCNd_VwpYsfMTCZCG1v1-VIAA</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-sessionId" elementType="Header">
                    <stringProp name="Header.name">x-ms-sessionId</stringProp>
                    <stringProp name="Header.value">220831f1-e716-4b0e-8063-e80a91abdb63</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-268" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/SAS/EndAuth</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="authMethodId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">authMethodId</stringProp>
                    <stringProp name="Argument.value">PhoneAppNotification</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="pollCount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pollCount</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lastPollStart" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollStart</stringProp>
                    <stringProp name="Argument.value">1730988393828</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lastPollEnd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollEnd</stringProp>
                    <stringProp name="Argument.value">1730988393968</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">2000</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/login</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">PAQABDgEAAADW6jl31mB3T7ugrWTT8pFexPdP_hxe5JaswRuM2HAspp28_k3A9C9XENonjhceu7MarYwKNCUw5DoBcyyPRTkhSYlagfEESfoYezyhwRvka3d1Sbr9ri8mk7_NJZTRNaYLzaDJP2iX2BE0hK31jZQxliligu9u1JMioKO3zibVoDJq0AHu_J1MYN0sPheLPBbX3lkDxf1BGpWFAPbKD1owTjHejNY6qr5J7VbhGXIwQiAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-ctx" elementType="Header">
                    <stringProp name="Header.name">x-ms-ctx</stringProp>
                    <stringProp name="Header.value">rQQIARAAnZHNb9NmAMbtuIQk0DUUCcEBKcoqNgF2bMex44iKNQlNnbZOUzXUCaqq1_br2u7rD_xRt0G97MSRw4QQu3GsNAn1MgSHbadJPRVpExPaAYFAiANCnDggsXT7D3Z59DzH3-_JpVmqLFL0RYKl6NqUppUFQWM4EnBVgeQqAktW1WqVrDAso-t8haONcjCZy7M_SbNrT3-r375beHb11ZMze7hgRpEf1kollAByA3kqQCQEYRSHpKkaJLAYMrYoMIwDmEA1tCIYUi6MSo9w_BDH3-L4XmrKUFWdFhiV1FgISI4bNZHjVBJoHEczBieqovg8NdGZiSOTPQovsIbwYypjBGDDgW50n_DhTtsfNCResuXNTku2B81ZtLAys91ZXYzkppTIDZrr272dhZU2km2Jltlu0h92OdmSQslhkN66ZnXc0AKrFXqgtM1-edlX2UoPKnUk2Z6lOdc3gdJG_XLXMhR6ep-YMnRVFADUSZYbqeIEXiBVegQAeFqAAkvTvMEcEOc9H7qWXvADz7AQLHiGgSwXrgNNg2H4F4G_JM6BQDOBCygHIOu7kbYYIRhQmuccjuHvxs5kUvlvzmIF7NsLNFHLZHJ57Gh9GsMfHBt9cuPCD-MLDx41f_y98_Xn7Ans4Fgpac20zFW01U0U01BCmQ7QnL3RLVVXlCUZxVvykgKStu3PuovTfI25k8bvpE_vp7MZIo8VicYSc5CecEKAKDuk1MBLQhh8SKduH8cfZ_n_9_e9HL6XuzRw1U13VWzy_eEynyBdkeVKZxnEfs9ZlHsDc74-dMsLPlP1uIc5_PAE_v3J8Qw2mc1eObW_Vvny99zzk9VcWkPAcsJJ6lbxP4frkbcJ3WLtVnHbCdc17ahtARTDsFi7URzRFNd2d3d_Hcc-ffXx9c9__Pnml_dzBxOn56g6VZj9V3Wh4Tk-cHfeTVzu-nLQ32q0m3F3CAXRtJ2e0RLm69vKTV3zmb6kwuVyXdyY79HTD_PYizz24RT-Dw2</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">4a095bd4-a780-41bf-897a-09784386da00</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1114</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-flowToken" elementType="Header">
                    <stringProp name="Header.name">x-ms-flowToken</stringProp>
                    <stringProp name="Header.value">AQABIQEAAADW6jl31mB3T7ugrWTT8pFedMkttFlpPq50I9cSA3vPyjykHPv4tMbO11gb07UXa03pl2VveAkqrpoqTOq45BLjbJPU35cGtjAAQtZecSO3s-BXGWrdbuBjjoov_X-RUA03W-JrKunQQBAR1-qs_17kUZ06zw772rxkmmdZpyOh-em0TCqIq7pvgH70_V6e35MpdAiT_T08GhjbMQMk6PhBUjse0ZkG58t2by0DtOhnRyPYC6aJEEQqgutTVEuie6mu__YAyoWLIZV5TZqtLfJAVPncg_k5ly8W8k1mAg83mf7TMpG__q_Kvdb5ZFazdYwT0F8uZGAz7iVCYM-OZFM9kKrsowDGmNGAwk_uSmlZGYxhLlKNi41iNV_-Jwmusz9cVZnz5Xaf19kTutWdLmf8U4_StqyYqab2j7BH_TXsEoHvnyVVzst2rBCnM-gKe6q0-T5gvSn4OTYPfDqNlNjjgWFf2EoaUOSfRYRXXL1IrMfvbwZKayvoHnvyyDD4_Er_Ip4JK072tMCQvqqXOw4Y23YiWEE5jT2-uIwlM8PStZEHnQisEtTORa4XQflFl8yZCSV96krlzs0DqK_g9V7uF71McfiqZgFf3OgNmb3eoV_RxIHagTTXEsQyq6ZARCYW3NdrIoanyOiM0ZEkHj5nl8r1eH2yWkZRHzVqMjHUT0JlGBPIhV_o7duAeet7yac9EpfRuOIKAaGI3lvuk_QsvQX6xWljcXh08L59o2omfGXxhIhtnCZDA3Q5ToexJpzkchLYvCNSZDpoJ5T9ujaEFAu8awI3ZbALQcoYP0Rs4oag3xshEYciHY43QTvd6MSnljKqNUe6wV3Rfc5qdrwSK7Oyt1at1bN_ualuQqDfSe2X40Bz51CpXJDVj-3B9e3RQDsq5TYQEaY7bdO7MZ15jf6Ka8aAxMCsuJX4n_cLEkbm_4uaEIpolYvBUHgr6c-MBhDsbSHjn4vOXB_xpEWBMEnpR0qFlqHUPNbezSWip4xKm00xPJkoDHxVB2mrOTDiqRndWhTN3H3fZGFBEAUghnm_03Hftycavlkiv8wp7qwBPJ6mfPSQmJgLY1WVFOxjfjKx11kR9A3kJlsi2fwvIAA</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-sessionId" elementType="Header">
                    <stringProp name="Header.name">x-ms-sessionId</stringProp>
                    <stringProp name="Header.value">220831f1-e716-4b0e-8063-e80a91abdb63</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-269" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/SAS/EndAuth</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="authMethodId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">authMethodId</stringProp>
                    <stringProp name="Argument.value">PhoneAppNotification</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="pollCount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pollCount</stringProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lastPollStart" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollStart</stringProp>
                    <stringProp name="Argument.value">1730988395135</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lastPollEnd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollEnd</stringProp>
                    <stringProp name="Argument.value">1730988395389</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">2000</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/login</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">PAQABDgEAAADW6jl31mB3T7ugrWTT8pFexPdP_hxe5JaswRuM2HAspp28_k3A9C9XENonjhceu7MarYwKNCUw5DoBcyyPRTkhSYlagfEESfoYezyhwRvka3d1Sbr9ri8mk7_NJZTRNaYLzaDJP2iX2BE0hK31jZQxliligu9u1JMioKO3zibVoDJq0AHu_J1MYN0sPheLPBbX3lkDxf1BGpWFAPbKD1owTjHejNY6qr5J7VbhGXIwQiAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-ctx" elementType="Header">
                    <stringProp name="Header.name">x-ms-ctx</stringProp>
                    <stringProp name="Header.value">rQQIARAAnZHNb9NmAMbtuIQk0DUUCcEBKcoqNgF2bMex44iKNQlNnbZOUzXUCaqq1_br2u7rD_xRt0G97MSRw4QQu3GsNAn1MgSHbadJPRVpExPaAYFAiANCnDggsXT7D3Z59DzH3-_JpVmqLFL0RYKl6NqUppUFQWM4EnBVgeQqAktW1WqVrDAso-t8haONcjCZy7M_SbNrT3-r375beHb11ZMze7hgRpEf1kollAByA3kqQCQEYRSHpKkaJLAYMrYoMIwDmEA1tCIYUi6MSo9w_BDH3-L4XmrKUFWdFhiV1FgISI4bNZHjVBJoHEczBieqovg8NdGZiSOTPQovsIbwYypjBGDDgW50n_DhTtsfNCResuXNTku2B81ZtLAys91ZXYzkppTIDZrr272dhZU2km2Jltlu0h92OdmSQslhkN66ZnXc0AKrFXqgtM1-edlX2UoPKnUk2Z6lOdc3gdJG_XLXMhR6ep-YMnRVFADUSZYbqeIEXiBVegQAeFqAAkvTvMEcEOc9H7qWXvADz7AQLHiGgSwXrgNNg2H4F4G_JM6BQDOBCygHIOu7kbYYIRhQmuccjuHvxs5kUvlvzmIF7NsLNFHLZHJ57Gh9GsMfHBt9cuPCD-MLDx41f_y98_Xn7Ans4Fgpac20zFW01U0U01BCmQ7QnL3RLVVXlCUZxVvykgKStu3PuovTfI25k8bvpE_vp7MZIo8VicYSc5CecEKAKDuk1MBLQhh8SKduH8cfZ_n_9_e9HL6XuzRw1U13VWzy_eEynyBdkeVKZxnEfs9ZlHsDc74-dMsLPlP1uIc5_PAE_v3J8Qw2mc1eObW_Vvny99zzk9VcWkPAcsJJ6lbxP4frkbcJ3WLtVnHbCdc17ahtARTDsFi7URzRFNd2d3d_Hcc-ffXx9c9__Pnml_dzBxOn56g6VZj9V3Wh4Tk-cHfeTVzu-nLQ32q0m3F3CAXRtJ2e0RLm69vKTV3zmb6kwuVyXdyY79HTD_PYizz24RT-Dw2</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">4a095bd4-a780-41bf-897a-09784386da00</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1114</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-flowToken" elementType="Header">
                    <stringProp name="Header.name">x-ms-flowToken</stringProp>
                    <stringProp name="Header.value">AQABIQEAAADW6jl31mB3T7ugrWTT8pFem0nFFGQ5mYEYFTVDk3kQO0OGRPr8LFvly7JxAoaCJDVGa4A1ef-AR5dL_opNcQm-MZTOfmkbp_Br_UH5LEZK7TSxkflsNGubKh3nvHjnyB9l1xPHxSgWNiJiANoFLBwufao0VF0CLl9CkfMS5MT9Lkuljufpc0gY5UdXqu5OeN2_Sl5z6gn330CGccd7KOYb3p1HXvdRgm6vaWO2j9wcYgNzN7g1lT25MvEAsQpgeOH3GNQNS7ByCb9bxvSufIUh7MGgz_YwQmRkKKcYkTuu7MdAaEoeJOtaAOs6XjeZOuIjbnATFEo1FPhuvhtoAR2Jv288zVaOsE7NLF7lBMASyat5WNudI8962PMKw_bH6cDq_fyX8EgnnGWcEQcHKwAuSrfwlFgN6fd52AJXXR3mQ2ks-fi7fd35--Wt19IQqVCW2KsbKdh0lYSdMSsKqlfxaJBk_hYd_9ct5a15uKhE8rblQ3-d926W5v4Gkkry2Diu6AMFzjG6CnPrYMcHqrL-XPJ-MJOrJdo6GoJ_wj3XGFrLAeyw5zCqBl7TvWNz-x3IUNCb8pnxbFmxtWs4AnGV8Ne527Cpc8vOR6t_azx02LySlHB3o8Y42-YzW9EFQfLibSJupken1l2O4bfwb2ufmDZWWgm00QjJKJKA1ZZ4GfXcOUM0UgGWcIfpRUNmGH-ntY-Cvyw_B0z9-qkvzyeKe9O6SymmQrINhbAXvFSf0BuWQJMJfGhwfuvyMX6CmugK5lp6oyE3-hsP7w2Lb6vCI9n2QcVk7HHch8QglIYRAo_9vbNampgFmD9zA3YdpTajywPq5pkQxwILBJ8wOa-y6QFUtbjVHzkYXxY9ug8FPbmnj_S89XbBFqj-O0-brSoFzKiYpFJwW6w2rjV65h5MI3kzmoultVMhM6-jllEoLME5hWRCO0UjWb8RETP-WGFjuVuO-kIwbtHupWeGIRiIwH-z_vUogdy4ouKnGsoYDiCRPgiD18SXhnx22bUAwjQaNyRpZKpvWLvjQh3nkICc8VeV9V4eXzTRaC5sMK_RpQyVrhm-PGAbA8k17uk36ma8ixunx8SUoj5OWXx1QU0qIAA</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-sessionId" elementType="Header">
                    <stringProp name="Header.name">x-ms-sessionId</stringProp>
                    <stringProp name="Header.value">220831f1-e716-4b0e-8063-e80a91abdb63</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-270" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/SAS/EndAuth</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="authMethodId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">authMethodId</stringProp>
                    <stringProp name="Argument.value">PhoneAppNotification</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="pollCount" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pollCount</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lastPollStart" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollStart</stringProp>
                    <stringProp name="Argument.value">1730988396436</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lastPollEnd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lastPollEnd</stringProp>
                    <stringProp name="Argument.value">1730988396729</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">2000</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/login</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">PAQABDgEAAADW6jl31mB3T7ugrWTT8pFexPdP_hxe5JaswRuM2HAspp28_k3A9C9XENonjhceu7MarYwKNCUw5DoBcyyPRTkhSYlagfEESfoYezyhwRvka3d1Sbr9ri8mk7_NJZTRNaYLzaDJP2iX2BE0hK31jZQxliligu9u1JMioKO3zibVoDJq0AHu_J1MYN0sPheLPBbX3lkDxf1BGpWFAPbKD1owTjHejNY6qr5J7VbhGXIwQiAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-ctx" elementType="Header">
                    <stringProp name="Header.name">x-ms-ctx</stringProp>
                    <stringProp name="Header.value">rQQIARAAnZHNb9NmAMbtuIQk0DUUCcEBKcoqNgF2bMex44iKNQlNnbZOUzXUCaqq1_br2u7rD_xRt0G97MSRw4QQu3GsNAn1MgSHbadJPRVpExPaAYFAiANCnDggsXT7D3Z59DzH3-_JpVmqLFL0RYKl6NqUppUFQWM4EnBVgeQqAktW1WqVrDAso-t8haONcjCZy7M_SbNrT3-r375beHb11ZMze7hgRpEf1kollAByA3kqQCQEYRSHpKkaJLAYMrYoMIwDmEA1tCIYUi6MSo9w_BDH3-L4XmrKUFWdFhiV1FgISI4bNZHjVBJoHEczBieqovg8NdGZiSOTPQovsIbwYypjBGDDgW50n_DhTtsfNCResuXNTku2B81ZtLAys91ZXYzkppTIDZrr272dhZU2km2Jltlu0h92OdmSQslhkN66ZnXc0AKrFXqgtM1-edlX2UoPKnUk2Z6lOdc3gdJG_XLXMhR6ep-YMnRVFADUSZYbqeIEXiBVegQAeFqAAkvTvMEcEOc9H7qWXvADz7AQLHiGgSwXrgNNg2H4F4G_JM6BQDOBCygHIOu7kbYYIRhQmuccjuHvxs5kUvlvzmIF7NsLNFHLZHJ57Gh9GsMfHBt9cuPCD-MLDx41f_y98_Xn7Ans4Fgpac20zFW01U0U01BCmQ7QnL3RLVVXlCUZxVvykgKStu3PuovTfI25k8bvpE_vp7MZIo8VicYSc5CecEKAKDuk1MBLQhh8SKduH8cfZ_n_9_e9HL6XuzRw1U13VWzy_eEynyBdkeVKZxnEfs9ZlHsDc74-dMsLPlP1uIc5_PAE_v3J8Qw2mc1eObW_Vvny99zzk9VcWkPAcsJJ6lbxP4frkbcJ3WLtVnHbCdc17ahtARTDsFi7URzRFNd2d3d_Hcc-ffXx9c9__Pnml_dzBxOn56g6VZj9V3Wh4Tk-cHfeTVzu-nLQ32q0m3F3CAXRtJ2e0RLm69vKTV3zmb6kwuVyXdyY79HTD_PYizz24RT-Dw2</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">4a095bd4-a780-41bf-897a-09784386da00</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1114</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-flowToken" elementType="Header">
                    <stringProp name="Header.name">x-ms-flowToken</stringProp>
                    <stringProp name="Header.value">AQABIQEAAADW6jl31mB3T7ugrWTT8pFe1DNolL136he-fjBzHmNjcAI2iJWtP0b0IEvpbElKEIu0mEUEaUTBeOwqa7cyMOSS4qgQrds_nUlfPtlYkpXCZ1oCcTzPUFbPowfvvO65B6hXqzUQt5mis5PX0mfJ1Uk48t-rFWMSO1Qd9OLaTnBagkl8rj53j7TwHnL4CSkcVnlLczl7p01sF1zzrIxUFB8aQQFlWRlxJepH1k1Yk579hJBCo59AuxVioMsWuvdblp4uM3lySQm6Gl-5O0CguuqF8zbDypcvcfJl9sTcFRT0qSeqlLAmExRB_yV5BD7ZT51ESQpjZjxw9bwm_QmyPiZ0rOCg5WQ9fK1PSvlaPl83pEI1ZJIoB5CZhKbB2TUP3nL0ehIkdmf6x2TmMqc3cOU9M4uOMjsBa37EhC_4I2omV6VcJ6NwzLv1ntxnd-fM2BIXlgJhxfS27GUqG3PonYbhHycQGYyjoEUkxvJh5CLREf99vk3iXo2lwHYYJMJ_4PdKLUvmOUyXi3xqLdR0N7fBHa0f1246reW7csXNY0q__uDFci-cPJCSLpLkw8EutFZv1RN35YqlWxM_8BCsGbgxape_qb7VK2vHUZp539OZ7HtlUQHQnY5AIZ5JfKxrgRtMq9doGRuMOgxZF5MLbS7jtdG4mfvmvjrH5PhbUHWccS3pDZ_r3CSxTYIfL5szI2s99bNdyErZFvxAdIQzzDMzJNwhTEhskUBzXlUXflbA6nEk58iQhuB_sRKoG_xKn0rQzCTL9L2bJAiL_5XMyaz7WOdFw-pGRElHSqPeObYl52AqY9YeEPL5su-Fc_ST-Bgfz_hJgUEhoyAMi5s1a9x-hoVYItfAqM7G3ShEH0RZgSZMGoMg1VCAi9cf_XJL22lZIQ1AiL4aTE6gUDePd0bj2cXcaPAwF6u4uVCODKBfJp0eufG1XGLIKx0kU2vCv33j8qOT7xL3uNayND8y_iarpCCKKfk0Rn2rE9XrpLVnehDubRDvmPZcxOgdVVckJZLrcdBKUeRHn-E6xMdnyhSoXXhbFwiEiK5Yw5b49XPDpNSbuVmvJeS_XxVTwcW_hItWpx7kZ0E4QzzkhVRHtSL-IAA</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-sessionId" elementType="Header">
                    <stringProp name="Header.name">x-ms-sessionId</stringProp>
                    <stringProp name="Header.value">220831f1-e716-4b0e-8063-e80a91abdb63</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-271" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/SAS/ProcessAuth</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">22</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="request" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">request</stringProp>
                    <stringProp name="Argument.value">rQQIARAAnZHNb9NmAMbtuIQk0DUUCcEBKcoqNgF2bMex44iKNQlNnbZOUzXUCaqq1_br2u7rD_xRt0G97MSRw4QQu3GsNAn1MgSHbadJPRVpExPaAYFAiANCnDggsXT7D3Z59DzH3-_JpVmqLFL0RYKl6NqUppUFQWM4EnBVgeQqAktW1WqVrDAso-t8haONcjCZy7M_SbNrT3-r375beHb11ZMze7hgRpEf1kollAByA3kqQCQEYRSHpKkaJLAYMrYoMIwDmEA1tCIYUi6MSo9w_BDH3-L4XmrKUFWdFhiV1FgISI4bNZHjVBJoHEczBieqovg8NdGZiSOTPQovsIbwYypjBGDDgW50n_DhTtsfNCResuXNTku2B81ZtLAys91ZXYzkppTIDZrr272dhZU2km2Jltlu0h92OdmSQslhkN66ZnXc0AKrFXqgtM1-edlX2UoPKnUk2Z6lOdc3gdJG_XLXMhR6ep-YMnRVFADUSZYbqeIEXiBVegQAeFqAAkvTvMEcEOc9H7qWXvADz7AQLHiGgSwXrgNNg2H4F4G_JM6BQDOBCygHIOu7kbYYIRhQmuccjuHvxs5kUvlvzmIF7NsLNFHLZHJ57Gh9GsMfHBt9cuPCD-MLDx41f_y98_Xn7Ans4Fgpac20zFW01U0U01BCmQ7QnL3RLVVXlCUZxVvykgKStu3PuovTfI25k8bvpE_vp7MZIo8VicYSc5CecEKAKDuk1MBLQhh8SKduH8cfZ_n_9_e9HL6XuzRw1U13VWzy_eEynyBdkeVKZxnEfs9ZlHsDc74-dMsLPlP1uIc5_PAE_v3J8Qw2mc1eObW_Vvny99zzk9VcWkPAcsJJ6lbxP4frkbcJ3WLtVnHbCdc17ahtARTDsFi7URzRFNd2d3d_Hcc-ffXx9c9__Pnml_dzBxOn56g6VZj9V3Wh4Tk-cHfeTVzu-nLQ32q0m3F3CAXRtJ2e0RLm69vKTV3zmb6kwuVyXdyY79HTD_PYizz24RT-Dw2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="mfaLastPollStart" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">mfaLastPollStart</stringProp>
                    <stringProp name="Argument.value">1730988385287</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="mfaLastPollEnd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">mfaLastPollEnd</stringProp>
                    <stringProp name="Argument.value">1730988386662</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="mfaAuthMethod" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">mfaAuthMethod</stringProp>
                    <stringProp name="Argument.value">PhoneAppNotification</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                    <stringProp name="Argument.value">archana.mali@hbfuller.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">AQABIQEAAADW6jl31mB3T7ugrWTT8pFeDx68brZFz5IgajVTtonbFQiiAnIRRP6ssCK76PQdEMDCe8MIn_ClM60Tu8u36YZE_HHQPf9f6STduMfOm3V1ooXkVZghS4zuZjrD0gYpr938soqvkfv6V6MppLuWe_245EHhQEdhtxydheoisoVv52nV0QDacCei5wG1C0ahZOTHOnFei-wgUMmIVr4E99YX0iDtHO35WJViep8oFk8ZTBGGJDe5PvRxBfAaoU1xX2h9mo1JTCjq_4tDfHD45MKZIfJq6l-Hv6ws-uBeSIjXH2viCp4Zo6QH2FQjWqqm5jHG5dbSlYtPklWxVpH6-BTUkvI6oORxZ00-YZt3VtwUksUDXzL64o05YQKUqkcpkmvqVpkzyrwAbZq_uFrT0E9H66NZK9nTuXndKUe1K2HLfs5K-C1HRVpkYec7oKuO52xa8b4rEJ3QUZ2AKyt7aLEBE5Yps9Qgo_1NbsHxvRATRnvNGC2xRVBea4WdqYWyIqwttuoLyf0_hpXKDKPhvEq_loy9nj437Kko4iZ8CtAMOCn1vO6eaGBc9CBygTDQx46fAckkIuV2S20IlqJyiBfT2dwy9NSt3cmXOmOxEF_MEk9JbSj2HYPGeUX13RrlSMcVa_lPKG1DtHSpRavvsBqfChUeOBRkFg5ksX8PndC33IWihsVaUzXPBZke7ikZYOHySOONHo2YoZfrS5-GT9qoFbrk6XQ6lBcbwNpv62wXV3fW5Eq07d8HAuvaMJzgwZZlGPr67FQhAECJwKQliMz880yjRc2dFQpHoYnDrPgHP0pMaHDTo6QTrGEnPo2DWMcsP94WB0XjK4gWn9xfe148oPJekfeurbV39fETbc0RitKXO3IUrlhBx8HI0gf8UyhM0Babz288Wcxi-ivWdsawvzQuatpNxgx21MfH9kh1bZy4fGLGRYVp1sOhmqS3HnknDgKWIHek1k93mOw_dz5vnNbU7YuHYSa8IuytFOFDTTDq6SkDpKam2Mgtbqel_fq-OIYyETLAXG7nQAXGG_5mKWGSAPCCYMsirKo3O1j6y0OBH4kxUM8NQcM8CFske7P76bn4oI8_n0i2iEflwTDcIAA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">4a095bd4-a780-41bf-897a-09784386da00</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sacxt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sacxt</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hideSmsInMfaProofs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hideSmsInMfaProofs</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">wGAGhWlvQwXhfXsN0rlHjgQ/8TXPNluvNPXawJjpFnM=5:1:CANARY:QpNrYvCJDuQze79hjmUfG7KBxXqdcp1YIbeR3B9gKU0=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">13018</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/fdb97aed-2488-4767-b0ea-a607e72006f1/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-272" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">hbfuller-com.access.mcas.ms</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/aad_login</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="id_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">id_token</stringProp>
                    <stringProp name="Argument.value">eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkExMjhDQkMtSFMyNTYiLCJraWQiOiI1NDJmYWU1MS1hMDRkLTQwM2YtODgyOS1mZWY2YTdkMGQ5YWQiLCJ4NXQiOiJpMFhqbUNsVlRHZTU4QzJHME5qMWhzSkJjQTgifQ.yomteqNLVDNLQOy3YUKEwibHLLMwBDyp_pN6ePZMXQiaEuneyR7NUr_cQzO-3lVw6WeN5hXazeP5oOKIdD89pQinsQSbzJbIAl9oodop8EFOAN_A403UFjm0T5_6AJb51xGccHH2iuF1qbCiw8jvXverZfJygVjNuOVNLyfReVWD1mk03QbxkxIx-ZxYaql0lTkF-xum4kKuI3YNlAOaIRULGYN1aa81f2tqIpyYn1YDoqk1UBJKePEM8KtSbfUWD_ppATWoUQ3KgCW7H4dh9aQDYUo-JkUsDgp2F8HvMfTMYaRXt5Pw6UqNjeCcqQoBxm9BQthHS4GNiwdXhD8_PQ.YqNMCu7Kejx66kJPzFHrMg.Tcsj9a9uvNcgqCqGVVUK1yS49EuDzhIQk1UoXOPiHhcVcXArU8NJIpH8V3q9N485IqufbHja5mS6ZvZAih7ocWjQOR1SN4o7X4sLsBm-KFrJYjUENc-IdavLUiQXRBj1VGVECWTktxOCA45sVjI6szvRaisLcdQg1Ms-RI_5hFIP0Vbq_RYieV0-GlSIOw4CQHoO-X2CwAsRGjUUgCe6iYTV01siOPkSzeO-kIPqQLcRk78dnUtPkEL8ag541TVklx4hYJ3XfzobyTArHuGF1mCLNGxpUY1JU8bjT8FaDzL9pLbhtIG0OteNJ_TD3iUbTnkpfR4Zb4byWk1SaZqJzEaqu1SbeZlly6a_Jd25xGMw0zhbBDBJvk4O-YlCay3TA096AOUl1gf4G8pUxp5ggXQIwjsIeTiMdLwUtfH4IqFloxfN5t4YdCf-uBbnp5XfLa6wKzU9wyfiDOkf5U7yrCAKYyd_HWUfzRtKVLncluQaK9JoqCZRHlACP-VC2Pm3uHPPMUlciqc4lk0lVLJcSqpBtbeo2FnNBRBTqAB_bXRJyX8Z7sZU4XKrriFlS32wnYPZoDeSB-NpRdVATKIJFmVQlWi_TeRA4-WWpoViPu16fBiLyAW4rmc6_Bl-y-UYKZVE8lpa2LOhKvY6MoHrUKCKnuNYZtRpEZl69mrR7sv7pXgfjiGX4qgDCakd_kzUBNdr-i6Sk__rn-XY9cIHPqYfAmEMwmbSSgyLUkoUGJ2jIpvKCXjARllfdoLy_0V9Kzo7mHm3rtkqxW79AtjwDIcHX1pUoRULAWE7uPxqiaz0_KZK9YBS-OmfhUwGIb3JktWLL8Esb3O9Zgu0LisRGORmQO9B1_D5L7aYUQOy9yjbam4MtAxN_Bg6GnHHQa81XMnciZmzTqDv43WZZEZMzZZyzA9UaKUXoskckINa3ZEjknK6OGtw4VZtEIJo8uB_WdcKN2LmlGC_WcvC2kO8ZKNUjdz1XDLMBb9S7MAdtZNXwLXtKR0ZPrK3mkfrehptJl5bxt6ENF3t37nVAFAhO-mQ4ngxKv8NGa14pwMz1w9RFv7T1OYdgeOB13eUUtyh8W9m3e9kB6CEQezxfidR-DoddkKFU5U_mrKB5uJFzW680TQcWrNu-LaLO4NO3Xw-iUu5NltdLac3C1QNwCAuOTt6XCwZRiYClaOCYNCiU2rwcUWSOycKpyYWo3MfEOYDpCu5unenB-ML0AjCM2YVqT3NP_oKcx7LlrkJBJYWgBc91yRxBr_zHb6XYGcg8ZwhKmvUifJIa1cWkyC2Y6d1VzfvOrqBwadcN3Lg1518IrRH38NXIuQglu-fu3Dz1BdGYUxjfLgAiqt5Z3zQ_KLC8RNFJIVL3M012t7dDzv_mn7sdOd7Jimh4t9XvU73A6Z3uyvGuYkWNdHB3OIa-O6gbVELX8NvJOTSm5vKJvnvkhi83jTMdF7GsYU8VQQM7s0EcsnUUByhjvIDZk-OH1qMDF0zyL0lET9ugmodc6YOqWNWZnPG9If8EXoTxkAjX6_qxsLzYcCnJ8tJO6TY2SCfH2_i8tQBZa5955G08SJiYyLJ4ZurLzsSo9ogWQ8ZyZJLx7aqn7AO90gpY88wzjgQqW-XKpnSjPId0Y9kIlqUhFWM42N10jz1JSP-jBB4FFmFFvu_rM8hnIR-1IhwKlVQKBmDedcfTbcECXSNi-ldBwSYnaqEUbg5j-UUp7cLlwmeV-n63I0WMdVEZBA-z8zsBzmT1btSnDpoLcD7yTKXfD5zgyvQAQQQIeI0c5imAzqt7RTUj1lI9bbvq1IQUyHDv0tQg4vg-ME-wb2eSlYaC3TM3eJHiqx2d0n1JnVRH4TRYe_NI9qkyDFtDHQ77JNE8nhM1iINSNREnmBtOvW815QDBz7IcVx24KhSX8wzt3D0zUD5mWWadR8RdOUp8WLe0-WNHKnOIZHNNp4DPOyLCSzd8VCsY_vXFsRANV6ZCw_qAdQfzJMC1Z_tObRblYPTQmmFyPBrO3Xxfk5vFy1F-2ZvIDnWcsgo6gAz8VgZfv8eDpT39F3x_9GGx2SGawgGJbjkoju7mGvKkzMofzYqKrnD8XOsWAU8AAwh0HwwCP6EVu--WfN2ijMPU8PWsR7m1EAOzluQXZN3wQT2kWBuxI2c8N5Yfbgar2aKhFRTn6HYJv0ki9hU3-AYAFVS_1INqMnx54_FpU30Eu6qATm7utDKO-G_ANiqrKk4STusqKUj5bhrRYNvP6OdAxIOZ6Mr3f8W9Kmo9XHborFTc1mRvW1IZhuPUWBOOaIgN0Vd7txcjUbAK15is2IxDQOQNLU5Rt_t2c22Q5WNLEqHkwbQbafyHN6Z12e7nmp4opWC3fKDwYSfm2AFD--RZ-HDwTquY0Pf7uxEKD_ll0_tHsrchVhNBqp601C_10xxgTvTUK3E3T_atBO6KbcDOju7z0_oT8dEJeO9g_69PLgJT5JN3RDrOwt394J3wqINBu3n05Lvx7u8Uk6pmadDFdzTDqF8oLUvtVTx08RxQr6TvE1TaCAYxnqMDmCZ_0QjVVFyjHhz4z2GDMB-q820t0bciLcCzAsgbqdR-33tb6U6CNo0iNdEy7rTHxA37KC1raYqR1EfH9WvQRiOyn2uJciGBwyIRc2bPu2L4fnqOzfgfP4NYSQwa2HZFf49WvTIR5EuL1DHnL0I1ik7GpfA3fBsM8tgR_N9x733ViK0qWxUzAKDw9SrqwkGWA1Gtgfb26MzoeZHj2Wrv60YbnMj4HrxKbnFVq4VAK6PsgKxFF7Rp5IhVl0DqIpv9e6FSaZjVAgF-iCxWWpO7LqWMM1tyXZu4tUn0tKImgoYYDohdmbrfBuOUe07TxIv8GmxgWYOE-IGVb1PJA25Lf35xvxmCwzW8WJn8Ahmmo3soViVShO0atOxoRMYK-eEc3J5bN_lgwg40Hszae5HKDJSrfkSTG_gxAHAB4a6w8lGKOhXLb4T5DyAVl_QrhEVOVi82NzSVxziRIjEejwvJ46JWv7PMpkoVD1moJqaUdSdZQiXPnM9FEp01EHvKCTuMdTVjZiIJaUrmgBfb9oxo8G63nM-nLrlTvHlkJsDZjzeciO0G5HKK1SHMLo1DC9havKQJIp4yt5ugWUbSabRw5vzPRob2lgvGS94TvKmmNaY5lFKOlI6sh1b3kdIP4Eo_LEjTdQyBSYBvjDw12miYSEvafCjLpAFsbccLBXMl4sLbbmbKK6BNxS6JeiBvLzdGo3F3Gz125EmwUP4LBc0_6fPtQIJss9KF2F4FPy00dTrRKUSZuJp3LVJzA3eIxelQH-5zjjywvv3ovXNXqKxEotIi6LGovKdARm182sQXrM1Flu0hzFHtL72H9VNHOxT-5Z1a5k-k6q7yB_XjXNcvtcrZDj5jjOvdnv12xuLrMb5wUmva3D3K8ft_GZf2nKKBJOyn6v03cJjF9TzCLA5N-OzQdQDTcdqExHdt4OF51DaO8qKTYhbKxNKKh8HPmXbqzimTbkmjjVThaT-AHh0VrsC_ppKEUyf0D3TIENu4v6nRGwiC-Kt91H0D3YrXl8h9u0CjiR20vAV8I8bYEtOI1qhehkkYrxHNeGE7VxQ1s17S3HcXXtNL7wvAs2uIhZYDsKDvuHLQma1MOT7aRGCWdqSR4eRByeYOErQXQdDwTPtITzbZ5Tixg8w_KKCfWe3Z1G91xNexbL78pcLatQxivMvJJoFu-ZaytcQWUoJHDPV3uu0TdPvZiVcFvRxcGO83SwaN_fUI5Aw4kDUg1cAEDkmmVR9TYUKxo5I5pC77txb460baNhYibtke-9I_iaGSsBhPWOevnokp0r_qFa4RnfJ5DDFL8YTrdX0tcl_KxgySB7Nw66oA8TGDHJt2LsDSelXg0o1OTUPoTL61dZySLfoDKCBV76OuMmQZLrJeH_eVVNC3vHQCbhcf-ie66m-f6dVb02tyTqeYIv2kcRxYbvfwiODpSunXFZv6CKXpwZGQ1WTc4TWo0kaD4j2nKvkSl0j2PUMKkFOAwKwcAukz_fsvpLnjiVMlcslMKtrEHXUlG20wGMB3glSRghnvZ1vr2pbSoyH94UCuAe-_LTeAKS9252p3f9hr3GgSbigGRSx65PdN1LkovHajzK-Fj52kOx4Vj0VSPsZExrURr7TKHjwNzoH0mum1ua5ANtMgr7dBnH_FViGNHVLbliOLxuSYsZCRcs1jSU9OHN7uaRvpJsgLfGv0K8Mv8hi4Wit2oBURsfMASoB9mXLhYYFZpyqDNIcW_2nV8JStFb88irgg-Ton7O1kBi9RWt4cjz68IKzdeTRpd-ZXdVn6dYNmsvDk4GTQkeBOpujo6WLJ2jlJ5gB0mGLKufF6MEgZ0lO-HCjokXix2RnEl4it4duIYMMSnlWKcUmM9O_FlB44ZicQc2uCDRvKGvhqEBR8MFK3tBpqcPoDkf-AgWnnIz26XWBR2u5AUQIf4zzuZGZ9p75hZA_Dvvaof_ZZ8faxTX_Ua4Skq7QKEGZMFbWs6LNv2ESy8Gc03S8MFtRIc2TEkZTW7Nx7JHO-L4MqPu-Pnh5tkOzJo8oZ8nKijEPMpedGJWXcpZuI3QJjcheSjnywdYUmEpY0DyOnDvmxbyJawm5MesKSBmXZNEC9G90efokxV2LaT4DUENnTyOu2lQVqZIPPHH8Pwf0FBWRzPUd3Q79zKg_ESHyz4Si0gM-w4oc8eTdUx5DWM8P36W2F6NB33eV2YT4I-E4hz-nu0QyiYvLrnU4DP2WVmEQ3SYWoCYdM3_X_Z071jevkjdHURNtkUWwZITxDmJrS3CNmmbpegmfW7KsrEr_9vPJUmMbGd4iDhJLAzHFUGfBQqhjd_9YRO3VA8NdDBabSwfrzcgar1dfiu_wHIDcPIhabeVRTy7TWgO6soc4gqdVfOa2MTAozMPZxb_TwAFe2JLdviwYdA.dWvDOV6wWl_z016UwoHDzw</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-273" enabled="true">
              <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-276" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-277" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/token</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">cc377c14-a487-4572-8b88-5121dd6540f3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile offline_access</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="code" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">code</stringProp>
                    <stringProp name="Argument.value">1.AVsA7Xq5_YgkZ0ew6qYH5yAG8RR8N8yHpHJFi4hRId1lQPNbAKRbAA.AgABBAIAAADW6jl31mB3T7ugrWTT8pFeAwDs_wUA9P80nWQyiaVbRiCzb0OES1gHMhckKRzmlV1ubfSeYs6cVkxDf5_shiuj0ThdiUDz6nM7E65dMS7lxfzIeUxbKut8-DWjOeyNPWv0STQBPRyBVvsQZa8--PAQulH2aJEuB1ry3q2tMwKhgjHnnXG0euxLxbiaIT8teYyWdVvb1D2ekglV9WhDe5CYwnwD7LRtBbUGx2vg5hMuVrefsid_-bJQaxv4yUjKWEbgQMTTh2KaJHcbOkyvRXIgjwKkowSGAwKNHIiTY-JubcTmImNZhzvL2AeJz926mjVfwIO_8MU_7HQyUza0Dhkezfl_IrpsXCd3Q0IulAC8RwPBsgtRI2AjvvgpwbRr8FG9k868Y_mNHdk6BzSCMSsGgTAH5WI9aPtKSwI1DH6a9JYHWgjRVmUmEZDmQrfW65kPj66dybIOCM0fFLHbRjXjyvFdL3Qaw4sbW964VEhufWil2zONlZyu_XEnh9BNCwlW_mto622e4g3veuP1sxkCZJsD_KgoBg1jigL0OhCOiaH4YwfUCgBvWoXONea-vlb4jC6qOJUWqffYsgBh7pttfyWKrIN0DrEw9J8So8jyVEw77B9qLV20PgYb4J4mrmitaXnWCH88kXMGe5djNEgxjVKrGR7CupcIAwyNEa11HBl8WYx1_J_ZbjxAvDq3R_yIqslmPtABTyXKQweFmeLNbmNrmEK6jgTroxiPhJbcY6AEIFv5Enfo8xIKuTVSawKi50TE0q2ZQN1o6rhqb5wWADvIvOhlsSVz9vbtEN6ZDR5BitAM_Rd7Lb8WjJnWPKMLCy2LNG1I4qR_QselJnyy6tOrA6ufYnMm7AYHlTLlbnfxKaRYM3qCDzQD0SZ6UPK_NFq-bxlJaU55HeiF5gr2qiDf4w</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">msal.js.browser</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-VER" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-VER</stringProp>
                    <stringProp name="Argument.value">2.39.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-lib-capability" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-ms-lib-capability</stringProp>
                    <stringProp name="Argument.value">retry-after, h429</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-current-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-current-telemetry</stringProp>
                    <stringProp name="Argument.value">5|865,0,,,|@azure/msal-react,1.5.13</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-last-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-last-telemetry</stringProp>
                    <stringProp name="Argument.value">5|0|||0,0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="code_verifier" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">code_verifier</stringProp>
                    <stringProp name="Argument.value">4k_ThlwHGcez-o6RpiaUrocq0NT7i77JnjPmKflgC_U</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                    <stringProp name="Argument.value">authorization_code</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">4649ad32-d15d-42c1-8896-20d73fe3bb16</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="claims" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">claims</stringProp>
                    <stringProp name="Argument.value">{&quot;access_token&quot;:{&quot;xms_cc&quot;:{&quot;values&quot;:[&quot;CP1&quot;]}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Argument.value">Oid:fa363d87-e3a8-4c79-a3a2-609d481daa1c@fdb97aed-2488-4767-b0ea-a607e72006f1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-278" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">login.windows.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/authorize</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">code id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/.auth/login/aad/callback</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">cc377c14-a487-4572-8b88-5121dd6540f3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile email</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">form_post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">db2cac0cd1c5412f8d63832ade134bad_20241107141141</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">redir=%2Fmanifest.json</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-279" enabled="true">
              <stringProp name="HTTPSampler.domain">graph.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1.0/me/photo/$value</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6InI0QXdncGFlSU83bXRyZkVndDlvcGJMZS1fMVVkTkwwZ2Z5VllrcHFDZDQiLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9mZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEvIiwiaWF0IjoxNzMwOTg4MTAxLCJuYmYiOjE3MzA5ODgxMDEsImV4cCI6MTczMDk5MjgxMCwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFWUUFxLzhZQUFBQUZMd3pGb3QyanlCSkZFWVFnMmRudG5iRkZaek1QTEVGei9IdkxqeXNUNE80OGlyN0FGaWxIbUxJb3VoQ2VGeTdLem5MeXNTZVJ4aTJDU3N0RGpRU1JoTi94UDJ2d2lROEMwZWtTR093bkNvPSIsImFtciI6WyJwd2QiLCJ3aWEiLCJtZmEiXSwiYXBwX2Rpc3BsYXluYW1lIjoibHdhLWdsb2JhbC1lYXN0dXMtaGJmLWFpMS11aSIsImFwcGlkIjoiY2MzNzdjMTQtYTQ4Ny00NTcyLThiODgtNTEyMWRkNjU0MGYzIiwiYXBwaWRhY3IiOiIwIiwiZmFtaWx5X25hbWUiOiJNYWxpIiwiZ2l2ZW5fbmFtZSI6IkFyY2hhbmEiLCJpZHR5cCI6InVzZXIiLCJpcGFkZHIiOiIyMC4yNDIuMTg1LjM5IiwibmFtZSI6Ik1hbGksIEFyY2hhbmEiLCJvaWQiOiJmYTM2M2Q4Ny1lM2E4LTRjNzktYTNhMi02MDlkNDgxZGFhMWMiLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtNzQzMTExMzU5LTI3NDE1OTc4NjUtMjYyMzU4OTA5NS0xMjg3MzYiLCJwbGF0ZiI6IjMiLCJwdWlkIjoiMTAwMzIwMDNEOTJENjk5QSIsInJoIjoiMS5BVnNBN1hxNV9ZZ2taMGV3NnFZSDV5QUc4UU1BQUFBQUFBQUF3QUFBQUFBQUFBQmJBS1JiQUEuIiwic2NwIjoiZW1haWwgb3BlbmlkIHByb2ZpbGUgUHJvZmlsZVBob3RvLlJlYWQuQWxsIFVzZXIuUmVhZCIsInN1YiI6IkpCUU4yZ2kwcXhKa1plNW1nMVRoZHF3SW5fZExuSzEtWF9OYWJXcS1zdjgiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiTkEiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoiM1dmaFMzN2lOME9sSUlKYjBmblBBQSIsInZlciI6IjEuMCIsIndpZHMiOlsiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il0sInhtc19jYyI6WyJDUDEiXSwieG1zX2lkcmVsIjoiMSAyMCIsInhtc19zc20iOiIxIiwieG1zX3N0Ijp7InN1YiI6InhVSlQxVzNlRW1nX0syNWh4N2huRFNEMDA1MS1yUFEtU0owdmRJb1F1QVEifSwieG1zX3RjZHQiOjEzMTc2ODMyMjh9.Q_oU9hIYPK1awV7_IXc3C10bBGJd4T9HVm8hJdmHkEAxeMnP3kH4rENtLqGvN4qjgi7cjC_ugqlCFY9QkNWuqKv-17M2UP1W0SEyvv6APnaCyhl3Wzq9Buy8yOkCiYkOoJMOeUtsetmQBl5vE8BF2YHpNZTMyUFC64SZaWdPHrUSgpAC8uh0vGnRsSz68dUJcZEVHtRFWtKbypBBMtppwXJhluvJgbBuF2H40pXtO-_bk6x_c4v_POInFrhCRiTYqWfmPIfwb_CgMHyXz-EQuqMuIEBZ6eq-f11agyjGJwd1PNYlwVHnLz9hNeNPuHSDrwd7KHcM6r9bjVQlkpxl2w</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectAccount-280" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/fdb97aed-2488-4767-b0ea-a607e72006f1/oauth2/v2.0/token</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">cc377c14-a487-4572-8b88-5121dd6540f3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile email api://1b3bdc5c-2f4a-4276-9ec8-98af36115621/user_impersonation offline_access</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                    <stringProp name="Argument.value">refresh_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">msal.js.browser</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-VER" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-VER</stringProp>
                    <stringProp name="Argument.value">2.39.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-lib-capability" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-ms-lib-capability</stringProp>
                    <stringProp name="Argument.value">retry-after, h429</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-current-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-current-telemetry</stringProp>
                    <stringProp name="Argument.value">5|61,0,,,|@azure/msal-react,1.5.13</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-last-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-last-telemetry</stringProp>
                    <stringProp name="Argument.value">5|1|||0,0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">7db920e2-111e-48ea-80e4-0260bd5be251</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="refresh_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">refresh_token</stringProp>
                    <stringProp name="Argument.value">1.AVsA7Xq5_YgkZ0ew6qYH5yAG8RR8N8yHpHJFi4hRId1lQPNbAKRbAA.AgABAwEAAADW6jl31mB3T7ugrWTT8pFeAwDs_wUA9P8iuDJTMJy7oitE74-2_aCkUQiwKTCL3gByADCbpOCkK3MlaxwQ6egq_4LkyAnLlc65W1DUEQ-ggKjSiGjWuUL-doBVBZnNIpsInqKe9WuKklEE8Bk4kPcjcumyAOriIIIGT-IgGR6TpdpIKJzxi4Bv90F2omgMq2YVXUJCCTI2NNX4WZACTDzk1pzSEVAceQlieUgORzxBsGRH-yggeqVNoPGz5WdryQElOjSMHPsQKlBHVBJCY06F5aTseNXJEQ2MK2ndm0fTz-OH53qkvJ7lDuPmEwIacJgsfJbh2KyVrff_pPrgAln_3EQZEOajNaJ3hsR0AnqDN6OF-eCO8Q-h5naxg3L_F8Y1P6_ffRxqpNdQN59xudHJC53NECbaMYAmcV4AtXPsq7CgF--PVgLyBTW1mZlhZjID5dK5Z7Po7TP7aQtAzSLNo-1yB0LNMn3kg21iMBqajK2lg3bJN5HbDWSW0W5JWbC29hKbibyr4Y8AN6yQYyVWoF1_AxABBdIN8zgHupaUMQFjmnZZzGi27OSTnN5_Xcv06XqI1nItdS3R1ldT7-Szu0p-79QtIDa1mxV9lZex4HffhBnSanRbWyvbyzDWeY7wQ2FDbcHs5P_NqRNe71FFcm1QGptUlMy06yGxEbzPaDsPIwnH3JkqItY1GmnIicZ2WcwI-XyCw01611SZvCYXlN8f0D5FMvP-Q2PgTx9llmXVhYnz1uDI3eGOWPiGGEmcvJPwMd-G0A-W-wM8UsLfYJvlpgHKcM6bvMlN0Gz4eGkHTz_QrRkhI2XYykNU8SA1QHoB7Xj96ctDmfdEce1EXA1QN8eHdQ-byZnHS3SzWoXTPziHJxHL82eK2g</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="claims" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">claims</stringProp>
                    <stringProp name="Argument.value">{&quot;access_token&quot;:{&quot;xms_cc&quot;:{&quot;values&quot;:[&quot;CP1&quot;]}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Argument.value">Oid:fa363d87-e3a8-4c79-a3a2-609d481daa1c@fdb97aed-2488-4767-b0ea-a607e72006f1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://lwa-global-eastus-hbf-ai1-ui.azurewebsites.net</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Google Chrome&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">9090</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">NewChat</stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\malia01\OneDrive - H.B. Fuller Company\Desktop\apache-jmeter-5.6.3\apache-jmeter-5.6.3\TestDemo\logs\Nov07recording2.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-204" enabled="true">
            <stringProp name="HTTPSampler.domain">self.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�MO�@&#x18;�g&#x5;Y�&#x11;	&amp;�&#x16;��Q&#x13;�Sg:�N�xa��H&quot;F#�q��Na\h���\�&#x18;n&#x1e;&lt;{����&#x1f;��k�&#x8;|&#x1;/^M��,�۲x &#x1;&#x81;C&apos;}�O;}��&#x7f;��.����X�KQ����&#x5ff;?}��wc�~;&#x18;��2�X&#x1e;s&#x1d;ϥ�&#x1b;��83*�����F2����t� &#xd;
�8�&#xf;�Z&#x10;:�&#xc;���&#x19;&#x19;�K�|v�q�/@rYK�䊖��玚�&#x11;ԥ&#x16;DNن��&#x16;,{��&#x1c;��m9��&#x11;����~%X��q&#x11;U�&#x6;��Zj}[�n���&#x18;�H7&#xc;��:֝��E�P�,�b^8�P9d&quot;&#xb;b�D ����ZQ&#x38b;|0�&#x14;�5z.&#x18;T���&#x19;�:i��Ɂ�*73�/�X��&quot;��~�&#xf;V|�d���Paf&#xd;
nU&#x3;�##�I&#x0;�Nu�Y:��S���+R&#xe;	�-H&#xb;(&#xf;�r&#x6;�6G��&#x2;�3�\̮�)b6�	1 gy&#xc;i�P�&#xd;R��P ����1b��ju�&#x8;2G�Z�]�����mK�Z&#xd;
f�����XD�&#x7;3�1&#xd;
6&#x1f;hI]�&#x12;з&#x13;�&#x16;�W���[Z����LaЭz�(���&#x10;讪��t��&#x6;ҟ&#x5;����՚�&#x17;�?{,c�`\x��|&#xc;ҵ�l�q��&#xb;[�&#x15;�ԛ�Q(�VԿ&#x15;��GSSOK��f&quot;&#x11;E�X.&#x8;ه&#x19;A��6��*!&#x13;�Nmoƶl5`SeT&apos;�2&amp;R&#x3;b&#x0;�����56�}N�0?)�o&#x1c;&#xf;���S�9k��jÜ&#x1d;�9;&#x14;��0wbN�f&#x6;&#x1d;����&#x1f;��7�0?)̯&#x1f;%�v0&apos;�I�S�9�`�&#x19;U �B�&quot;Ҝ8�Rk;�-# ��&#x8;�&#x7;&#x18;A��P�ܜ�&#x1c;F�r&#x5;��3nu�B��u��o_�|�~抓r���&#x1c;�&amp;UP����NW��6]�����QE&#x1d;�?��&#x11;�y�o&#x1b;&#x0;�&#x7f;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upload-Time" elementType="Header">
                  <stringProp name="Header.name">Upload-Time</stringProp>
                  <stringProp name="Header.value">1730988310468</stringProp>
                </elementProp>
                <elementProp name="APIKey" elementType="Header">
                  <stringProp name="Header.name">APIKey</stringProp>
                  <stringProp name="Header.value">4bb4d6f7cafc4e9292f972dca2dcde42-bd019ee8-e59c-4b0f-a02c-84e72157a3ef-7485</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Expect" elementType="Header">
                  <stringProp name="Header.name">Expect</stringProp>
                  <stringProp name="Header.value">100-continue</stringProp>
                </elementProp>
                <elementProp name="SDK-Version" elementType="Header">
                  <stringProp name="Header.name">SDK-Version</stringProp>
                  <stringProp name="Header.value">EVT-Windows-C++-No-3.4.276.7</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-203" enabled="true">
            <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:106841,&quot;request_elapsed_ms&quot;:1003,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;${scheme}://www.google.com/&quot;,&quot;was_proxied&quot;:false},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:76921,&quot;request_elapsed_ms&quot;:1512,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;${scheme}://www.google.com/&quot;,&quot;was_proxied&quot;:false}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-205" enabled="true">
            <stringProp name="HTTPSampler.domain">self.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">��&#xf;�$W}&apos;�� M����#	&#x4;&#x17;���&#x14;��7���&#x10;�q�?�o�ӣ�&#x1e;&#xd;G�F�e�˞d��j�&#xf;L&#xb;�� #�&#x18;�k����&#x13;&#x1c;�&#x1;s,k�&#x18;0��2&apos;#	X��l��9��&#x8;��&#x2;&amp;&#xc;F�������U��O3����_���̬�z�^�{����{��&lt;�6������P���ꪬ����o���&#x1f;�ҳO&#x1d;��?+�Զ\&apos;�BK�Ҵ\_�C+�nj�&#x17;Y�����&#x7f;��&apos;�&#x1c;�-�s!	��Z9��x�\������Ӈ�?�T�&#xd;Yz�&#xc;�$��=q��m�*/�5�4�o�7�&#x1d;��?|�JũBi���K&#x1d;�0-ϙ&#x15;�S�.,ә&#x11;���&#x17;�7i��I�7��&#xf;�?��Q���cӪv�^��x��m&#xf;�&#x5fe;�����vL;f&#x18;��&#x1f;ӏ��ȱ�:�&amp;Ū*)YS�M�5G膭�x��m&#x1f;~��;��&gt;`X�t�8���~L��&gt;6�L�c����&#x13;��&#x12;;r*]UuUUQ2t*=��_��x��m����&#x7;�E+-b�&#x7f;Y�(&#xb;�u�p�c��/Lٶ���3��Oy&#x9a;�]���|a:ƌ�x�7=���&#xb;&#x1f;�&#x5;ט��k�+f]cZX��Q.���aj�z~�����T&#x8;�&#x7f;Y�_j�!�����&#x1e;{��Q��W��&#x1d;�M����ɇa��֗�**&#x19;�l&#x528;&lt;j�܁|&#x14;��&#x10;�+�6�ۓ�4ZY�̧q��}2]i�&#x15;���g�6&lt;��5*�dC��ik�\��_L�t5y��&#x1d;�l$�(_�򯫰ި�w�&#x17;�&#x1d;+7&lt;%�j�\]K����0��&#x2;�����Jc9YU&#xb;5-w�����?��9E�VmY�2�g	�sl*;DU�&#xe;j�L�&#x13;�S��*�r���k�Pe��X�R���O&#x5;S�ݓ�o�&#xc;&#x1d;���B���Y&#x15;e_M?�+�g&amp;}MR-S��o�����F�&apos;un��khU3{�kT�&gt;}{no��&gt;��$R��&#x17;&#x2;儁�l��!,Cy��&#x2;C��&#x15;��T�kZ��l�v~ަ�o��a}�NJZ&gt;r��:	J�4ΜOj�����&#xd;
�@��7�3���&#x1d;խ��sT����Q�8j�G-�e&#x1d;����&#x7f;Ա�:�Q�9�G=���&#x1c;�ݣ�w��i_�Y��Ϡ?����&#x1b;t����/�?�n��[�&#x3a2;߰h?�&gt;c�2��N?����kS&#x12;�__?j�w&#x19;�G&#x7f;� �&#xe;��3lZg[G&#xd;��;&#x6;����&#x1c;�&#xd;��M�e���9n���θ��&#x7b8;a�&#x1b;���&#x1b;�Ꮫڸi��θ鎛����[�yk�r�m��&#x1e;��7���9�8�6���9��7�i�1��5���3��7�&#x1b;�5�{TKh�gҟM&#x7f;�&#x2;����nПE&#x7f;����&#x1b;�9C�?ZOi�Z��h&#x1b;�Q7i&#x7f;J�N��M�,�R�4R&#x6;��6��i;%U�y���i&#x1f;��&#x1d;z���]�NJ2e(��zJ���z�&#x1c;%�2��h�O�|�&#xe;��S�&#xd;M�?�/J��Q�Q�&#xd;J��k�G�(�&#x6;g��&#x1b;�v��s֠u��i�&#x1f;����&#x2;�?Zg�:����Q�&#xd;��)�T�T(�&#x19;��)�&#x6;�A�z���w&lt;Z��&#x1a;&#x1e;����|����&#x2;�t���&amp;�դtRC2n�T�:����G&#x7f;�Y�c���4賔N����&#x13;�O&#x12;J�Ii5�l�Ӂ�&#x7;�k��nR&gt;��N�N&#x4;��H�)��g�d0)_M�����l0)�&amp;�Ӥs¤�¤�¤�¤�¤��tf��v��٤&lt;�4���|�&lt;��|�(�&#x16;�E�(�&#x16;��&#x1a;*���R&#x1e;Z��I����.�r鏷��k�v:&#xf;,:&#xf;,J�EyhQ�,*sjg�-J�E�&amp;pܢ&lt;���-J�E�nS&#x1e;ڔ&#x16;��B�&#x16;���6��M�hS�l�G��Ѧ|�&amp;��h&#x1b;��ZT���T�6�M�M�hS&gt;ڔn��Ѧ&lt;�)�6�ݦ�۔v;��h&#x1b;�ݦ�۔vj�菖���銳&#x1d;��h١e�k��c��Ǧ��xl:&#x1e;��ڦ�����sܡ���cp(?&#x1d;:&#xe;��ԡtS3M&#x7f;&#x6;��zJ�Ce�&#x18;�ާ+���4;�V���P:&#x1d;J�Cit�&#x1c;u��t(_&#x1d;�&#x8;��&#x1d;J�Cy�Pz&#x1c;J�Ciq(-&#xe;�á2v��&#x1d;�W���P�R�J&#x7f;Tk�9�R�\�+&#x11;ZO��R�\�S��ԥ����.�ϥ���&gt;���R����.]?.�K�r)�\J�K�r)M.]�.���&#xd;
�k����ߢ�r)}.��.��.�ѥ���W&#x1e;�ˣty�&amp;��ʣ:�ө.�&lt;�=J�gp&#xd;G���y�6��q��Уkƣ����=�7��O���Q�yt�{&#x16;&#x5c9;���أ&lt;�l� i��e�&#x1c;��&#x1e;U�&#x1e;]G��5&apos;m�c�(�&#x1e;�ۣt{.W���t�xt���^����y�S�}����&gt;�O�Oy�S���n��ԧt��n���S�}�K��ҧt�t~�����55}��&#x7f;����S�|J�O�O�����)?}���&amp;��h����*��ק�ҧ���z���&gt;��u��)A�&#x12;�&#x6;��5��5���V�_�w�9����u��&#x17;�&gt;�?��G�&#x1a;�&#x1c;^��Wq��q���Y�¿�����V��5��z���&#x1f;�v��qM�q&#x15;O?�/6�8������&#x1b;��u�C�)���Q�&#xd;�&#x1c;].z�&#xe;�&#x16;o�4�6�㶈Zq~�=�I��`��(k���F�T�^��?���&#x6;�&gt;o�Df�Q�&#x1e;e�&#x11;�F:7G���#&apos;�[ z1���JnH��%���f��SN����YS�	熉^x&#x3;��yop�ʭ&#x14;&#x1d;$/�&#x11;q&#x3;�s�s�s�D/��[X����+z��ア�?~��9�}.o��2��&#xc;7kг&#xd;�&#x5;\Pܨ�ܪ�&#xb;�$&#x1f;��Gnp+l�s�F/&#x6;�X�·&#x0;|X�h��j��&lt;ы��&#x8;�&#x11;;{Ƿ&#xd;�&gt;���-&#x16;�d�&#x10;��SerZ��ҹ�ҹ��M.&#xd;
n�tn�tn��nM�&#x17;���dpCE/&#xe;�d[}�&#x1f;�pyX\&#x1e;�n�&#xb;o�&#x17;n�腷rr-�{���⼷�73���&#xd;
��2�&#x1b;3:�x&#x1d;�Ňō&#x1a;��V&gt;6n�腿�3����c����8ǹ飓���i�-&#x1e;��o�aq#G&apos;,�9�����&#xd;��-��M���&#x1b;�X|�ŋfv����&#x10;��ӹyӹ}ӹ�ӹe��춌&#xf;�&#x1b;7�[7��5��5�&#x1b;6z�o��|�p�F/���fn�腿�O&#xb;�S�m�&#x38d;&#x1b;���·x�pn����&#x17;���lw�|v8c�)ӹ&#x1d;��즐�����d8�M&quot;g��?��=�ç��g��&#x19;���&#xd;��-&#x19;��}4�pܐ�&#xb;�Ir�\�.��r��ss�s{�s�F7����nCy7�&#x17;�&#x13;�r��|Eq#����*&#x17;#�c:7\t�����t9&#x5;.� �\:7]�b���/�&#x11;����&#x17;�Ї=.7n�tn��7��&#x6;�0���Y��i�M&#x14;��VN��9�M��m�&#x38d;�έ��M&#x12;�^�&#x1b;��ի���&lt;�&#x8;_=&#x1e;�ǹ�q�=n&#x1c;��ҹ�ҹ�&#x17;���b��K���^��q�_x&#x3;�&#x1f;7\:�Z�»�	�s��|��\�&gt;&#x5fb;&gt;_.&gt;&#x1f;&#x7;7c:�a:7b���8�&#x70e;Qu�[9c}.dn�t�K���������?{&#x0;��Q����/� @��&#x17;~&#x14;0x+��s&#xb;F/�he�&#xc;�a��&#x18;l�&#x16;��9���	�����^sy�˻y����5�?z��&#x17;�I��-��1�)�^���&#x7f;H�&#x7;	~&#xd;
2��1t&apos;{�8��&#x1f;&#x1d;�9���&#x1c;j&#x16;���&#x1f;!�&#x1;2��1�u�&#x17;~t�_�&#x1e;p�����&amp;{�i&gt;��&#x13;&#xc;7&#x13;&#x6;7&#x13;F�0c�&#x1;f�1&#x6;&#x1f;���&#xb;�d���=�d&#xf;(\��&#xb;?&#xe;�3&#x14;?�P��OFz����3&#x12;?$�#)?�&#x18;f�I���/�a���S�i�m�0&#x1f;��&#x7;m:�9��q��S���&#x1b;�Z�5N���k���,A~�Pf�Ïf��&#x19;?�q!�c&#x8;��G8}&#x16;&#x17;�������ڛ^xk�X�=�qQ�&#x13;	5����bqҸ~�&#x17;ޗ���&#x1;��&apos;&#x10;��b��bæK��&#xf;zq�%{6�w&#x6;o��g	z�&#xf;[��s�Ξ&#x1d;97l�&#xd;�Y酟%�&lt;�ɀ^�q��E�&#x8;�O.�J����L#{�=��4�v����Ok&lt;74��/�&#x0;�&gt;��A�|ntVI&#xe;5&#x15;T=�&apos;�_�*�ϼ~q~z���O�,-���}sӯ?}����&#xf;L�&gt;�o6)��Z��V�/����3����&lt;��� �zlhh&gt;}E�P~MrG,K5��?���T��&#x1c;f��d����c�{�k˪Vo-�w����&#x16;&#xb;&#x17;��Ok&#x17;g�ʫ����T�&#x1b;��d5�]w��@9�5�P�T2lkg&#x5;����&#x1d;&lt;&#x381;�Ű���I���Bavy&gt;��*&#x1f;�mZnO�^�H��&#x17;�%&#x9a;۽ �g)&#xf;w�*�&#xe;,��&#xb;j�\]+T����$��O�5��=&#xb;����]�&#x19;Cν�D#,�Fm�|V����J�22�Ƶ�s�b�R!���B�s�w��K�?^yR��3Y�-���O��&#x1d;����Fr��&#x1b;],���j�&#xe;�&#x17;㘾��&#x13;�z5IW�&#x3;�sL;��q&#x1d;�jDwr&#x7;�1�V��2��#���ma��.�0p�&#x17;�RD���@��&#x16;ٔ��~���W,�ʎ&lt;W(Sz�&#xd;
]_HS&#x1a;������HJ=�&#x1d;8yf��P����&#x16;�T�&#x4;J�e� 6B&#x11;J�&#x15;t�&#x11;��&#x15;H&apos;�s�O�d�ΔK&#x11;&#x1d;�L*������Նʍ��(�e�.�t�(WWe)wpI�V��i��4�A���܁��ł��FU��Ʊ,;�ct�RV&#x1c;��;]��=�&amp;�ڜL#���L߷��j��i=8|�&#x19;��Nj��\�2��ܱ�c/�m�J��b&gt;{e��&#x1b;i~��;ʢ(�]�&quot;A&#x15;&#xd;
e&#x11;=&#x3;�@SRHGs&#x15;݂hN��F��t�rd�������zou����;]����S����&#x15;�r�By~��&#x8;[ˍ6�.�1:��H���i9�Eڼ&gt;�����&lt;�ݧ]aMN[&quot;������O�zy�^t���O&#x1;�&#x4;�O�a&gt;/})]f&#xf;L�w��&#x1d;&#x12;8�@�\^m�_ﵰ�4�&#x1c;a�&#x1c;�턽&#x7f;������餒�p���ˤ�&#x1b;�&#x12;*�e�&lt;oqz2����	�]�~�&lt;�&#x18;&#x8;g &#x8;���p�y�_��+A8 &#x1c;&#x10;&#xe;&#x8;&#x7;�&#x3;�&#x1;�p@8 &#x1c;&#x10;&#xe;&#x8;&#x7;�&#x3;�&#x1;�p@8 �&#x1d;C8�@&#x11;�&#xf;�8&#x2;¹�	�v&#x10;Ζ&#x10;�;��O�\;�D�\I˵z&#x12;�Xs�}�&#x7ff;��=�^8�A8_�_/��&#xf;&#x1c;�l��l�����&#xb;X&#x5;�&#x2;V&#x1;��U�*`&#x15;�&#xd;
X&#x5;�&#x2;V&#x1;��U�*`&#x15;�&#xd;
X�&#xf;��ulbo&#x19;�4yD��R&#x1c;��&#x14;���#R�9Y;�&#x7;PRu&#x5;@�n�&#x2;&amp;�t&amp;�&#x1a;�&#xc;G���r����&#x4;��:H2V&#xb;)��I9&#x13;��?�����&#xc;��&lt;�?!��!B2&lt;�9�/���tU&#x1;�&#x0;L&#x0;&amp;&#x0;&#x13;�	�&#x4;`&#x2;0&#x1;�&#x0;L&#x0;&amp;&#x0;&#x13;�	�&#x4;`&#x2;0&#x1;�&#x0;Ln&#x0;L^z&#x19;0�D���I&#x1a;�:�&#x14;Z��%U)W�ГAӓ�%Uk��S�H%&#x7;�o�&#x6;��i�Ѯ���&#x1f;*4�0&#xb;�^E\�ۅ�&#x1c;�ę���~7&#x1f;-W�&#x8;��D`ƎC�(�q��R�)�F�B]z������	z:�&#x1c;7�&lt;�BMXFl	/6&#x1d;zg[*��`��&#x13;�&#x11;�q�b&#x11;��&#x17;&#x16;�\�M&#x1;&#x15;[&#x14;��T&#x4;��&amp;r{�Ih&amp;�W&apos;&#x16;T]F�.OUX-&amp;.��&#x13;�zB&apos;O�s�QƦ�Zg&#x1b;�i��Ҝ��&#x1f;~��&#x1f;Ři��IO�o̴��I�ܚ���I�$p&#x12;8	�&#x4;N&#x2;&apos;���I�$p&#x12;8	�&#x4;N&#x2;&apos;���Iۚ��n�2p&#x12;8i&#x13;8���R��&#x3;G&#xd;
?�\�&apos;�rW�	I�/�,?�&amp;&lt;I�&#x2;����(?,�P���X���tw�&#x7;�s6H�&#xe;&#x1a;�eh�w��s�~�㠡������n���&#x4;&#xd;��@C�!�&#x10;h&#x8;4&#x4;&#x1a;&#x2;&#xd;��@C�!�&#x10;h&#x8;4&#x4;&#x1a;&#x2;&#xd;��@C���NCtl2r}%��q9�i&#xb;&#x19;�&quot;�8؎ҕ&#xc;�p&quot;�t7�5*&#x2;z�&#x15;�TT&#x4;ad��&#xb;=�&#xf;bM�$h薢��s��&#xc;=&#x7f;�{ϼ�70��`�З�7�ܫ��&#xd;
&#xd;�+Iv�&#x1d;�:��&#x5f8;S��&#x14;0:0%�j�3������H��F��/�L-�s�r&#x7;�L�&#x12;�δ&#x7;h�r574Ui�LU|&#xc;�G��&amp;:�]�f�{������z��uȼ��C�&#x1d;3�*&#x1d;�5y�&#x11;�����غ!���&#x15;�c&#x7;&quot;V�&#x1b;hQdڑ{�g9�,x&#x16;&lt;&#xb;�&#x5;ςg���Y�,x&#x16;&lt;&#xb;�&#x5;ςg���Y���Y[7r�H{��,��Y2�]���h�l�z���[�Ŭvp�c[&#x1c;���Vw`�؎V�_��&#x3;�&#x0;��&#x3;b#&apos;)&#x15;��N&#x17;�]��&#x1b;��^��&#x1d;ZR�&#x1a;t�&#x17;�&#x7;�|:�VW5�&#x7f;��֗�&#x1b;���ύ�ķ�yM�R�n*P�]�ʴ&amp;�P/&#x17;&#x4;7@a�&#x7;&quot;&#xc;&#x3;WXZL&#x5;�&#x1a;����1�t&#x2;+�7E��N�A&quot;��hG�&#x7;���?@uQ��&quot;�Hx&#x7fb;D=��Ǿ�6��7&#x18;��Vt��&#x11;Iz���%&#xd;
�&#x4;B&#x2;!��@H $&#x10;&#x12;&#x8;	�&#x4;B&#x2;!��@H $&#x10;&#x12;&#x8;	��\	IG�(&#x8;�-�%�����&#xd;�+�&#x1d;*G]&#x4;�&#x10;)&lt;&apos;�&#x2;)-=&#x8;�	/&#x8;M�����KWX�k&#xd;
)iэ��&apos;�� �-t����D�&#x12;���k�$lv�z�ݟ�&#x3;̥4 :������w�&#xe;m&#x1a;&#x7;Ip&#x10;8&#x8;&#x1c;&#x4;&#xe;&#x2;&#x7;���A� p&#x10;8&#x8;&#x1c;&#x4;&#xe;&#x2;&#x7;���A� p�-�A[=B��&#xc;&#x7;u&quot;R�9Y;�&#x11;&#x5;&#x8;Ѐ	��4&#x7;&#x1c;��&#x1c;2&#x1c;u�&#x14;�v��&#x13;X&#x1b;�8n�������ل&#x6;&#x4;G��&#x7f;8�q�Ÿq&#x1f;8�q�&lt;P&#x1e;(&#xf;�&#x7;�&#x3;��@y�&lt;P&#x1e;(&#xf;�&#x7;�&#x3;��@y�&lt;�Ny�0n��q�n%3�&#x1a;7�v��t0r�u�&#x1c;�S�&#x19;�&#xc;E��JX26E`���� tL-Pʸ&#x19;#��&#x3;�_�1r܆�A_��&#x7f;�&#x10;fN&#x1a;&#xc;&#x1;�D�fN�D��k��X�z^y��T,,�{�&#x1e;;�&#x11;�&#x2;���0Х��A�#�&#x11;�&#x8;p&#x4;8&#x2;&#x1c;&#x1;�&#x0;G�#�&#x11;�&#x8;p&#x4;8&#x2;&#x1c;&#x1;�&#x0;G���v&#xf;��Q)&#xe;JqL�CR�&#x11;��T�܈8�j�J�T&#x1;��v�%�aP�{&apos;�h&#x3;C�&quot;�#[X��fB)��&#x1e;/�\�K�����^��cL�&#x1;�4$+	WgZ��Kr�ӅW�w&#x7;r��T��?}�/�ݿ�2�1�P���ꪬ��������߃�&#xc;��|�&#x7f;.33p.3&lt;E&#x17;�J����9YU!]M�򥹑V�&#x5;&gt;i���#�|�&#x0;�,}��&amp;_�RE笊����f+�&#x3;�3s^��%:)i��I:ꄮ�V&#x1a;g�&apos;�:&#xc;&#x8;&#x6;&#x4;&#x3;�&#x1;��`@0 &#x18;&#x10;&#xc;&#x8;&#x6;&#x4;&#x3;�&#x1;��`@0 &#x18;&#x10;&#xc;�&#x1f;&#x6;t�l°򠊺�D뱡�3&quot;{ˌ���&lt;��V�յB%9��ORN���;Ҳ�=&#x1c;�+4c� ��FBG���&#x10;N�I�6&apos;ӈ~��w74g�5g�i�9�R9&lt;�	{���&gt;&#x7f;�5w��&#xc;*���~租&#x8c;;�A7&#x1f;��r;lP��&#x1f;��rp!�&#x10;\&#x8;.&#x4;&#x17;�&#xb;���Bp!�&#x10;\&#x8;.&#x4;&#x17;�&#xb;���B�܅��}�A&#x1c;TNǠr��&apos;u&#xf;*G�c`P��&#x1e;T.�&apos;d�n&#x15;&#x4;ݭ[&#x8a;}O�q�	K���}\/41�܍&#xe;*ב���7�{�7!_�!_��|-��˨P�5Ϙ�-&#x6;[j�Q�LRI��������C2�{�����}D���*5XU�D&quot;m�®+w�*�Z=�v�ƦJ	3Q4�pr�=~Ʃ���%��n��OO��&amp;��T8�&gt;-&lt;oҦ&lt;�&amp;��C&#x5;�a�:Su9��&#x11;l7&#x15;�\�&#x1b;�sN�궉�d�4[�&#xb;O��v��B�Q&#xd;U�� \&#x13;�ѥn��2�kD��&quot;��&#x1;�ca[QdŮ&#x13;x�&#x7f;1�y@3�&#x19;�&#xc;h&#x6;4&#x3;�&#x1;̀f@3�&#x19;�&#xc;h&#x6;4&#x3;�&#x1;̀f@�~���\3��prtz�řb���Q\&lt;1�o�&#xb;��}�&#x13;��&#x13;3˧&#x17;����&#x11;����X&#x1c;�� &#x16;ǰ�CX�V�2���&#x0;c��ѪǸ.&lt;�����Y���&#x1c;�*]{�&#x1b;����r�&#xd;
�J:�����{_n��&#x8;8M&#xd;�1��&quot;�]v�]�Q��:zΣ�@��&#x1a;`��03����&#xf;&gt;�&#x8;0k00�c��,̌�Y��&#xc;@&#xe; &#x7;�&#x3;�&#x1;�&#x0;r&#x0;9�&#x1c;@&#xe; &#x7;�&#x3;�&#x1;�&#x0;r&#x0;9�&#x1c;@&#xe;z?݈�8��miNɈ2!�Ւt&#x5;&gt;3h&gt;s&#x1d;s#ѓ�f&#x5;&#x6;&#x1d;�i�¢�GxʒBwb��&#x3;_&#x1a;z�an�&#x3;&#x13;��o�*&#x1c;�ǴH&#x3;0-ґj�[Zv���+yQ�^��&#x15;5����h&#x16;Wg:���ZO���-��Xg3ב�N.^�u&gt;�o��71��`�η�7�ү�u6m&gt;$�&#xe;X&#x7;�&#x3;�&#x1;�u�:`&#x1d;�&#xe;X&#x7;�&#x3;�&#x1;�u�:`&#x1d;�ζf���̨�:��&#x14;&#x7;�8&amp;�!��T�9&#x12;��r)	�(&#x7f;�I�R[R+	�_�T��&#x1a;3&#x8;̳͘gga�H�L�r�)3�E��|��?z&#x8;h2&#x18;h���	��\&#xb;��&#x1a;W��&#x13;��ba)�&#x13;t�M��&#x17;x����.m�	�&#x4;h&#x2;4&#x1;�&#x0;M�&amp;@&#x13;�	�&#x4;h&#x2;4&#x1;�&#x0;M�&amp;@&#x13;��-�&amp;[=F�ՎJqP�cR&#x1c;��H&#x15;�J�F�YV[�V&#x1;D�͈�&#x12;=a�h&#x3;C�&quot;�#[X���A)��&#x1e;/�\�K����0wNL���ۛ�&#x1d;f&#x0;�eHV�Μ#�Ӆ���ݓ�u���6N�������Q�J6&#x18;&#x12;��&#x1b;��U�7oΆ��n&#xd;
�&#x1c;�yrT�gZ���q���6N��&#x1b;��4�&#x13;biW���&amp;��]�f�{������z��qR�&#xb;�&#x1a;��%�&amp;�ٴ��&#x1c;�&#x12;H	�&#x4;R&#x2;)��@J %�&#x12;H	�&#x4;R&#x2;)��@J %�&#x12;H��Hi�=�R&#x16;t�,&#x19;�.�\_4{6Z=KY��%S�&lt;J���Z;�	��925r�R!��t!��&#x1a;�ў&#x18;ա��&#x18;^��A5�N��U���v�w&#x9d;B#&#xc;�x�U�k�}n\&amp;�=�k���uS�j�rU�5��z� \�	=&apos;��pe(,&#x15;*!&#x3;�&#x10;�&#x19;R�8�I7��B^c�� �T&#x7f;4#���&#x18;�M��糟���&#xf;�&apos;�`��S艄���F`#�&#x11;�&#x8;l&#x4;6&#x2;&#x1b;���F`#�&#x11;�&#x8;l&#x4;6&#x2;&#x1b;���F���mSW&#x1f;��LW�L�XU��kkb�un&#x0;�l��I�&apos;,KR%�B&#x11;Ƕ+�8�f,�QQ�v�Gʵ&amp;&#x2;&#x19;FQh{�3&#x2;MX2&#xd;
�ȕ&apos;LC�&#x1d;�E��Xn轤O�&amp;i�&lt;��{/�(�&#x13;*�,���&#x11;��&#x1a;z6&#xd;PϦ�&#x1a;��[}�v�F�&gt;�7jM&#x1d;����sCt����j&#x16;꾬�|�&#x7f;�	{&#x6;E|��?�y9�&#x7;�&#x3;��@| &gt;&#x10;&#x1f;�&#xf;�&#x7;�&#x3;��@| &gt;&#x10;&#x1f;�&#xf;�&#x7;�&#x3;�&#x19;D�����O�L�Q��Q�n�&#x0;�lK�&#x1;�l9�&#xc;��^�&#x605;]��th5&#x1e;���l��7���?�&quot;�d ��&#x3;`����Xֹl������&#x10;�	��5d(L�Tt&#x16;&#x1a;�&#x8;LW���&#xb;U�&#x6;�nF@&#x14; &#xd;
&#x10;&#x5;�&#x2;D&#x1;�&#x0;Q�(@&#x14; &#xd;
&#x10;&#x5;�&#x2;D&#x1;�&#x0;Q�(@�[&#xc;Q�z&#x2;��vT��R&#x1c;��TwD���*�*&#x1d;m*WT��7��&#xd;
����T��s0�J��&#x8;���&lt;e���&#x15;&#x2;�����a��&#x7f;���}��O�O&#x6;�O~�&#x7f;|��&apos;/�B��&#x1c;��p�R�Z����$�d���UY]�]ߔ&lt;T[QU}f}ε&gt;&quot;��d���*]&#x11;M&#x7;�&lt;�&#xc;s�ЙVjl��0�Ds	&apos;7�3[&#xf;��&#x12;��$������~��穼fQ��-1I	&#x14;St���g&apos;��=�&#xd;��?]��\ނvS1.�&#x15;j��9��3��d����=�&#x12;ڝ�&#xb;�F5l�D�&amp;4�K�֩a&#x16;�&#x11;�&#x8a;��&amp;#��mE�&#x15;�N�y��h�&#x1;��F@#�&#x11;�&#x8;h&#x4;4&#x2;&#x1a;&#x1;��F@#�&#x11;�&#x8;h&#x4;4&#x2;&#x1a;&#x1;���F�s��&#x1a;S���W&#x16;g��S�sFq��&#xc;�).&#x14;��&#x15;O,&#x16;O�,�^\:����X;��Q,&#xe;bq&#xc;�;�Ul�+�&#x18;Y&#xd;�4h��3�΅g�~����3�&#x1;R9\՜�67R9�w��&#x15;��t&gt;m&#xf;�F&#x7fd;/7Rh&#x4;M��ŏ&#x14;i��k풌�T��s&#x1e;�&#x6;¬�Ӥ9O=��&#x1f;=�!�&#x6;&#x3;�&gt;�Isn�&#x10;j��u���XXJ�&#x4;=&#x6;P��&#x5;���a�K&#x1b;�&#x7f;&#x0;9�&#x1c;@&#xe; &#x7;�&#x3;�&#x1;�&#x0;r&#x0;9�&#x1c;@&#xe; &#x7;�&#x3;�&#x1;�&#x0;r����.c��R&#x1c;��&#x14;���#RũR�&#x11;q����Sr�̀��s�%��	&gt;�������&#x16;�m�vP&#xd;
��&#xb;&quot;��&#x12;e�a&#x2;�;&apos;��c���f�z&#xe;&#xd;�J��g1���.�Z&#x16;��u�z���&gt;�ď~�� 2&#x3;!2�&#x7;&quot;sSE�&#x8;����N8�n&#x8;��r��؁���&#x6;Z&#x14;�v�^,2&#x6;D&#x6;&quot;&#x3;���@d 2&#x10;&#x19;�&#xc;D&#x6;&quot;&#x3;���@d 2&#x10;&#x19;�&#xc;Df{����&quot;㴣R&#x1c;��&#x14;���#R�v�}NɈ2!�Ւt&#x5;&amp;s&#xb;�&#xc;U&#xd;
҈-)��+aE�)�a2&#x12;��W��I��h2&#x7;&amp;&#x16;T]F�.OU�&#x3;�1&#x3;�1G��\����i�W�B�\�+j&gt;-Q5�,�&#xe;����z�u_o���:����urq�hq������#��������s^u}C�&#x15;蜠f2�a7Ez&#xe;�o�J�SEU�k��&#x19;�St�q�rCS��rB?B�py-&#x1a;jj�����zov�����]�n&#x1f;Ǉ��˃TkL�Ms)&#x7;.&#x5;��K���Rp)�&#x14;\&#xd;
.&#x5;��K���Rp)�&#x14;\&#xd;
.��]j�z&#xd;
��&#x3;�YЭ�d$�ls}���h�,eѷV��k��˵v&#x0;&#x13;�uspk�$�B���B�&#x11;=!�k��CKM�($&#xf;��tr��j�&#x7f;�&#x0;r�C�&#x15;&#x1a;a����&quot;fc�S�2��a^ӼR���`{��2��,����(����&#xb;:�C���XxtG#�8v�P���rt3�l�T&#x1a;$���v }P(�/��O=���&#x6;��&gt;���Л	j&#x4;5�&#x1a;A��FP#�&#x11;�&#x8;j&#x4;5�&#x1a;A��FP#�&#x11;�&#x8;jt˪&#x11;z3m&#x3;����L��#��X(&#x19;���ǔ�n&#x8;ۦ&#xd;
�&#xc;�]�Л	��.�ʹ�u�����`��`��u�:`&#x1d;�&#xe;X&#x7;�&#x3;�&#x1;�u�:`&#x1d;�&#xe;X&#x7;�&#x3;�&#x1;�u�:`�Mf&#x1d;&#x1b;�&#x3;��&quot;��&quot;z~�GY�&#x0;�&#x10;tkg&#xb;ߍ|����&#x1d;{Z&#x18;a�:��e&#x7;���~�֟&#x7f;&#x11;�3&#x10;����q��u&#xd;R�K�k���R�̒����&#x1b;��|�g�Q����&#x5;2&lt;�O&#x3;&#x1a;�ש��Գ&#x4;e�ry&#x15;�&#x1a;������r{�Ʋ���Vc���/��.5���xSאt�&#x19;��	��5d(L�Tt�&#x18;�&#x8;LW�V�&#xb;U�&#x6;�nF&#x17;&#x13;�&#xe;�&#x2;A��@P (&#x10;&#x14;&#x8;&#xd;
&#x4;&#x5;�&#x2;A��@P (&#x10;&#x14;&#x8;&#xd;
&#x4;&#x5;��&#x7;A&#xd;���֘Z;���|;B�&#x1;*�Oqx�;:Ul��&#x16;d*WT�r&#x1;ƹ�&#xe;�&#x1a;4��&#x19;7�&#x9b;?���{F�;x*U�+T&#x16;*��I�J䪨&#x5;z&#x1a;�A�؈j�Lk��UY];��&#xf;��&#x7;�&#x9c;F��E��ߜF3&#x3;��gx�.��ru-�s��B�v�AKs#�y�&#x16;jT����8�IlsO���3t���&#xd;
�*:gU�&#xe;T7&#x58d;(PN&#x18;H�&#x16;�&#x1e;&#x1a;�2�&apos;&lt;/0�&#x1b;Y��L��S�F��3s^��%:)i��I:�.�V&#x1a;g�&apos;�:�&#x7;�&#x3;�&#x1;�y�&lt;`&#x1e;0&#xf;�&#x7;�&#x3;�&#x1;�y�&lt;`&#x1e;0&#xf;��&#x1f;�s�l�^򠊺�D뱡��&#x1f;c�����&lt;��V�յB%9��ORN|��&#x1a;n��&#x1e;��&#x15;�1d�Π��Մ�&#x8;�&#x1e;&#x3;��4���d&#x1a;ѯdg:�fӻ&#xd;�?M5GX*�g;a�&#x7f;�&#xf;�\3��c¡�Eٷ��}��ƴ&lt;�&quot;8&#x1f;�_���&#xf;��&#xc;��m�&#x7;/P&#x15;�&#xd;
T&#x5;�&#x2;U��@U�*P&#x15;�&#xd;
T&#x5;�&#x2;U��@U�*P�m=~�Vw�&#x19;[Ra�ڊ��G�&#x1b;�\bT6&gt;�������&#x16;�m�eP&#xd;
�~�&#xb;&quot;�����Q�^�k��	C�&#xd;��l��&#xc;��&#x7f;���}�q`�@`����&#x1d;fz�`J��d&#x17;�v&#x7;l&#x5;�&#x2;[���V`+�&#x15;�&#xd;
l&#x5;�&#x2;[���V`+�&#x15;�&#xd;
l&#x5;���le�&#x1d;��&#x14;Ǥ8$�&#x1d;�*Τ+�#�iRO�N=�B#hGߛ#[�d&#x6;�dz�!��t�N4VU5	ie��dC�F&#x18;f�۫P�pgޕ#�t~�&#x0;L�&#x12;�r�KI�vI�&quot;:&lt;;&#x12;�&#x19;Jai*&#x12;A��B�݀2݊-+�@=wM\��a=&#x3;d=�&#x19;r&gt;�&#x17;�����!�&#x6;�x��?�Yړ�Q�^k&#xe;�w�&#x5;&gt;K�9ajg�J2D�i�e�&amp;���8ߨ���V;�G)&#x1a;��RcT�+&quot;��.��@j�&#x12;&apos;\���ƚ&#x15;�|4�pr�����Ω���8ɽ�s�&#x19;��Q&#x1d;.&#x17;:�����}S��쌩�X3���o��&#x19;tvS1.�&#x15;��8焯nO�3���&#x1a;����\(7�!��}m�E���+�&#x14;�&#x11;�&#x8a;���-��mE�&#x15;�N�y�Ű�&#x1;�&#x0;[�-�&#x16;`&#xb;�&#x5;�&#x2;l&#x1;�&#x0;[�-�&#x16;`&#xb;�&#x5;�&#x2;l&#x1;��&#x1;[�s��&#x1a;����W&#x16;g��S�sFq��&#xc;�).&#x14;��&#x15;O,&#x16;O�,�^\:��%�X;��Q,&#xe;bq&#xc;�;�Ul�+�&#x18;Y&#xd;�5��uᙧ��hk�qgos#�3&#x7f;Wn_!YI�ӶP�w�ˍ0�R�&#x1a;&lt;��G��KvٵvIFM���9�n&#x3;aV�i��&#x1f;��{?�&#x8;0k00�;}�����3��&#x7;��&#x0;��F@#�&#x11;�&#x8;h&#x4;4&#x2;&#x1a;&#x1;��F@#�&#x11;�&#x8;h&#x4;4&#x2;&#x1a;��{́���}?��=�&#x1;�0&#x7f;�V��s���&#x1b;����{6�9��/��&#x1f;&gt;�	|&#x6;�p�ֿ	|&amp;&#x7;�p&#x6;q&#x2;&#x1f;#t&#x3;7�\�غ!�&#x1e;�&#x15;�c&#x7;&quot;V�&#x1b;hQdڑ{��&#x18;`&#x15;�&#xd;
X&#x5;�&#x2;V&#x1;��U�*`&#x15;�&#xd;
X&#x5;�&#x2;V&#x1;��U�*`��=Ȝ��]k�vT��R&#x1c;��TwD���\1�dD���jI�&#x2;I�n�r�����q�&#x5;��&#x14;�2L!5z&#x17;�ҋ]-T��n&#x18;���Ă��H��&#xd;
��1��&#x0;��v���5�Nʮ��@��]�^��&#x15;�,�v��7���z&#xd;
v_o���:����ur��󖧞��G�5g0\���ú�`� �&#xe;\&#x7;�&#x3;ׁ��u�:p&#x1d;�&#xe;\&#x7;�&#x3;ׁ��u�:p&#x1d;��@&#xe;�v�Ƀ�}�fR�v&amp;ˌ&#x16;�&#x3;�g�#��	�b&#x19;&#x7;�&#x14;&gt;���V�QV�:&#x11;K���{#?�&amp;&lt;I-xl+�,J��&#x18;JP�&#x15;&#xb;W�����@z�&#x6;	�&apos;f�4juAko�8Q�&apos;TjY��#Jõ�6P��S�H���IUv�Fk�Py����y{n�.��&#x15;U�B�&#x1b;f&#x14;z����&#xf;&#x7f;�qH�@Hϯ��&#x7;��uM&#x13;$��䜒���%E&#x5;[�7(S�|�j�t�g��ש%��u&#xe;��&#xb;Qפ@�7&amp;�v�9��r��d?��LN&#x10;��!Ca����ވE`�:�V^�&quot;7&#x8;u3�3���Lp&amp;8&#x13;�	�&#x4;g�3���Lp&amp;8&#x13;�	�&#x4;g�3m�3&#xd;���f&#xc;u&#x7;���ЎPq���S&#x1c;��N&#x15;�A�&#x5;��&#x15;U5�&#x14;+&#x4;=&#xd;&#x18;=�L��;yO�&#x11;�Y��*:&#x5;�&#x19;��v.���&#xb;��Gѧg@��+�Ӄ��`-�&#x16;X&#xb;�&#x5;�&#x2;k���Z`-�&#x16;X&#xb;�&#x5;�&#x2;k���Zv���\_�Xm���\�Xm*�=�&#x1c;%\OW�Rz,�m��N�H&#x19;&#x11;��J�Xmۡ&#x3;�&#x16;�������W�&#x6;�&#x19;&#xc;�y&#x13;\&#x7;�&#x3;ׁ��u�:p&#x1d;�&#xe;\&#x7;�&#x3;ׁ��u�:p&#x1d;�&#xe;\&#x7;�&#x3;��d���:p�-r&#x1d;��R&#x1;��BF�%���p&lt;a�nLO�&#x1;=ņp���:/j��|Z�j�Y\�M`��&#x1e;z�&#x1e;�&#x12;Xg X�3�&#x1b;�&#xd;�s-�&#x13;k\�+O8��Y�=A&#xf;&#x5;T�{�gzz&#x18;����h`&#x1d;�&#xe;X&#x7;�&#x3;�&#x1;�u�:`&#x1d;�&#xe;X&#x7;�&#x3;�&#x1;�u�:�&#x18;�luw&#x1d;�&#x1d;��&#x14;Ǥ8$�&#x1d;�*N�ʍ�����$�&#x11;��:�&#x0;���&#x6;��E&#x14;G��l�&#x5;�RH�=^&#x10;�t�(�&#xd;�s���zL&#x1f;S�&#xc;��&#xc;�JҚ0g4w;]x5z��v��Ir���&#x7f;����&#x13;�|�+��_}&#x10;�l&#x6;�c�ٿn6����r&#xe;&#x14;蜠v.���M��&#x3;&lt;�����PQ���|���ǹ�St�	q��*��~�����3��&#x1e;������zou����;]��&gt;N�s�&#x7;�3����&#x17;r&#x0;K�%�&#x12;`	�&#x4;X&#x2;,&#x1;�&#x0;K�%�&#x12;`	�&#x4;X&#x2;,&#x1;�&#x0;K�&#x1b;��-���v&#x7;�,��Y2�]���h�l�z���[˧������Z;�	��9&gt;5r�R!��t!��*D-7�&#x13;Žv�:���RH&#x1e;T���Z]���﹑�|��g�e&quot;�ü�y�Z7U��.WeZ�Y������X��&#x8;c�	�zK&#x4;��&#xd;
;&#xe;&#x3;�&#xb;�8��M���Si�H�A��t}`,l3&amp;&#x10;��U���&#x1f;���1{Ѐ��W��_��C�#u[��w�`�@9a 5[�zh&#x8;�P���&#x10;nd&#x5;�2�G�q&#x17;#�	D&#x2;&quot;&#x1;��H@$ &#x12;&#x10;	�&#x4;D&#x2;&quot;&#x1;��H@$ &#x12;&#x10;	�&#x4;D�ވ�u��&#xe;��q*�*�/��f�L��&#xe;��^�u���,�o&#x7f;�`s[3P���@�ʞ�7}�e�&#x17;��8��A��W�D���I3��/Hõ&#xe;&#x1f;��&#x6;�&#x1f;T&#x17;&#x19;%C�&#x16;&#x12;&#x1d;\_y����Ix��4�&#x19;2�W:-6���\��Hts)C&#x19;&#x4;�&#x1b;2aYa,&lt;3�B��1�I���p�n&#x0;��W�&#x8;��&#x13;V�j&quot;&#x8;��t�ЋC���o�W/&#x1e;�o6I��32]Q�ݸ�pH��5&#x0;]�&#xe;�2M�u.ѳ��m&#x7f;&#x5fa;���ΰ�ЁS�.5Ҕ���Ǒ�7�����U�v�&#xc;�]�&#x7f;��=�&#x1f;����S�*�Т�ζ�7nk&#x7f;���fcQ()U�T��+{~�p�ꯥ���L�J��8����宴+���&#xd;
��ם&#x1b;���xw��I&#x15;��&#x7f;ﮍ�zv&#x1d;��K�����Z�m�j�&#x11;��,ѝC�^���}�d%U�b�����Κ�&#x1f;o4O�Ώ��{&gt;��G�#?��w��8Ht H�7�7B��u�&#x8;��f�=�d�~fIQ���&#xd;�T�Բ֑�m�&#xf;&#xd;��駣���t�Yi��&#x17;v]AV�z&#xd;
&#x1e;ޘ�ZnoW�A���j&#xd;K���/��.տp�Ͷ?��� &#x8;]C��tM��0�X&#x4;���-�&#x17;��&#xd;B&#x74c;0�$�&#x16;n&#xb;����m�p[�-�&#x16;n&#xb;����m�p[����\�^i�^ډ��&#x14;��v��&#x3;T&#x1c;���Twt�،�-�T����&#x2;�s	��&#x1c;dn�r&#x17;���G���&#x3;�&#x7;O��|��BE-��*��&#x19;&#x7;��\�������w�&#x1b;&#x13;y&#xd;&#x6;&#x13;��&#x7f;L��#�����|&#x1e;&#x6;��&#x1d;��`G�#�&#x11;�&#x8;v&#x4;;�&#x1d;��`G�#�&#x11;�&#x8;v&#x4;;��v�u^�&#xc;������#o%a�&#x1a;8�6�&#x1a;y��F&#x6;�Z� &#xc;�i�JXZ&#x1c;��e�&quot;�&amp;S35/�&#x2;�f�&#x1a;����?Z��.����&apos;~�&#x10;�k0������&#x1d;2p䍍&#x14;y=jd@��FP#�&#x11;�&#x8;j&#x4;5�&#x1a;A��FP#�&#x11;�&#x8;j&#x4;5�&#x1a;A���&#x1a;mu/#皹gNɈ2�9&#xe;&#x10;�gк&#x14;]�f6��x�GWYl;�&#x8;�8&#x10;&#x16;�ߔ&#x15;�&#x14;��]�*��RƆ&#x11;&#x11;&#xf;\&lt;&quot;&quot;z&#x1e;m�&#x8;�G�M�ˮ��X�/*��U����&#x12;U&#x13;���Z��[�)�}�Ś�L��Ց�N.^�u���w�&#x8;�3 ��I���e�X�\y��T�#�z�&#x1e;&#xd;
���&#x2;���0Х����:`&#x1d;�&#xe;X&#x7;�&#x3;�&#x1;�u�:`&#x1d;�&#xe;X&#x7;�&#x3;�&#x1;�u�:}e&#x1d;�&#x1d;��&#x14;Ǥ8$�&#x1d;�*N�ʍ�����$��&#x1e;@�[&#x0;u�h&#x3;C�&quot;�#[X�͂B)��&#x1e;/�\�K��&#x6;Թsbz=����&#x6;Hv�d%��L�]xI�v��j��ܮ3U-wy���c&#x7f;�&gt;�&#x18;Df D���@d��&#x6;&quot;&#x3;���@d 2&#x10;&#x19;�&#xc;D&#x6;&quot;&#x3;���@d 2&#x10;&#x19;�&#xc;D&#x6;&quot;��&quot;c��&#xd;Lf�L&amp;��&#x8;&#xc;-&#x12;t�+�E�-�a�&quot;T~��H�����f;p���hÖS&#xb;eZk����ڹ&#xf;����&gt;&#xd;
�&#x19;&#xc;��r�Xgf�Xgx�.ɕru-�s��B�&#x1e;��Ls#�)�&#x16;X!?��&#x7;_�I�sO���3t���&#xd;
�*:gU�}5��&#x1b;��@9a 5[�zh&#x8;�P���&#x10;nd&#x5;�2�GOh&#x1b;{��9/��&#x12;���|�$&#x1d;uB�G+�3�Z&#x1d;�&#x4;B&#x2;!��@H $&#x10;&#x12;&#x8;	�&#x4;B&#x2;!��@H $&#x10;&#x12;&#x8;	��&#xf;B�g6a�yPE�A����N��s`A�_P���Z���U�&apos;)&apos;��/FZ���cw�f&#xc;&#x19;���&lt;�&#x8;�&#x1e;+ĩ4���d&#x1a;ѯdqMxЦ{���Ts��rx�&#x13;���&#x1f;�ّk�&#x2;��;Y��&apos;���&#x7f;�n9&#x3;�7�����������t�ޢ��;�@aL&#x10;&#xb;�&#x5;�&#x2;b&#x1;��X@, &#x16;&#x10;&#xb;�&#x5;�&#x2;b&#x1;��X@, &#x16;&#x10;��u�r�;��&#x7f;cL�\&#xb;U˓r�zW/�:&#xf;��,�o&#x7f;�`s[3^���@�ʞ�71�e�&#x17;��8��A��W�D���I3��/HõN_&#x2;�̀��hs輩r���Z#&#xc;9�{p}�ƪ�&amp;!�&#x18;�Of��P��ɫ��p���&#xb;�tZl�st|���fM�X�&#x11;�5}�+��łn��ȉ�&#x6;�P&#x13;2VԆ��P�c	K&#xb;L�I&apos;&#x14;�&amp;c�&#x1f;�&#xc;�&#xb;7tL�&apos;f�4j�kg��+$&#xf;=�&#x6;��ҁP�i��Ex�]W��Z�SU�&#x19;�&#x12;:p*ӥF�ҷ��8r��^&#x10;������/��g�Cq��z*]�&#x1d;Zl��v��m�/&gt;�ڬ�&#xb;%�*�j�{eϯ&#x1c;NU���5��ITAv*���=�ܕv%9&#x1f;SA���sÖ�&#x1d;���&lt;�����ݵqSϮc�r�ԕ�{Z˽-P�3�2�����C�^���}�d%U�b�����Κ�&#x1f;o4O�Ώ��{&gt;�6Ρs�樃���&#x17;���&apos;��&#x3;�����&lt;PK{�2*�k3�j��;ܲ�%U�J�v&amp;�$CT�e�y�s�С|%�*~�_�7�g�G��#��NV�f�Jul��]�u�No�Rk��]��������&#x12;Nn&gt;7�MR9ey��S�;H�k��&#xb;&#xf;�W��ɽ�s�|&amp;O-�KO&#x2;T8�ӂιia�S3�l���)�&#xd;�ﳗ���T��r���9�sw4Ku$���X���z	��˅r�&#x1a;���f�t�ۺ�L�&#x1a;Q,�H)���ca[QdŮ&#x13;x�&#x7f;��z0]�.L&#x17;�&#xb;Ӆ��ta�0]�.L&#x17;�&#xb;Ӆ��ta�0�~���\3��hwtz�řb���Q\&lt;1�o�&#xb;��}�&#x13;��&#x13;3˧&#x17;���H&#x4;n&#x12;�v&#x18;��X&#x1c;��&#x18;Vw&#x8;�؊Wf1�&#x1a;Pv�QV�]x��&apos;���˯-�*��mn�r����+$+�|�vM��}��B#�45�o�G��KvٵvIFM���9�n&#x3;��}R��&#xf;��&#x1e;e��&#xc;^�&#x0;�n@����?��}&#x11;�5&#x10;��&gt; ֖ ֬3C�1Z^���GXy{Zxz��&#x10;g���&lt;*B�&#x2;b&#x1;��X@, &#x16;&#x10;&#xb;�&#x5;�&#x2;b&#x1;��X@, &#x16;&#x10;&#xb;�&#x5;�&#x2;b&#x1;��X@, &#x16;&#x10;&#xb;�uS&#x10;kÄa?~��&#x7f;|;&#x6;�&#x1c;&#xc;����&gt;a�w~��Nońa�.&#xc;d&#x4;2&#x2;&#x19;��@F #�&#x11;�&#x8;d&#x4;2&#x2;&#x19;��@F #�&#x11;��&#x16;&amp;�+N&#x17;��&gt;�&#xf;�dao��0&amp;&#xb;�&#x6;(t�����l�da&#x7f;�&#x7bf;=|���}��&#x7f;��Ga7�a7_��L&#xd;��l�da_ߵ%&#x6;&#x3;`&#x1;�&#x0;X&#x0;,&#x0;&#x16;&#x0;&#xb;�&#x5;�&#x2;`&#x1;�&#x0;X&#x0;,&#x0;&#x16;&#x0;&#xb;�&#x5;�&#x2;`�da7���W��kv�DIK�R��!+�&amp;+�&#x13;y&#x1d;���&#x1a;�9��j����Fg�:|�3a�]�	&#x15;��T�&#x12;��+a)=&#x16;ҶLAgh����&#x11;�M�]�&#xc;e&#x10;&#x8;nQ�e����X&#xd;
�*z����	j���W�&#x8;��&#x11;V�j&quot;&#x8;���t�ЋC��0�&#x5ef;N,���d]���O`��&#x1;d�k�&#xd;&#x14;%r%-��I�&#x1c;��o��&lt;�%��@�ң�&#x1b;�nr��ҍ&#x11;�&#x11;��&#x1b;D.ե:՚�(*&lt;�&#xe;D�L7Тȴ#�bB2@H $&#x10;&#x12;&#x8;	�&#x4;B&#x2;!��@H $&#x10;&#x12;&#x8;	�&#x4;B&#x2;!��@H �&#x1b;!$�&#x1d;��&#x14;Ǥ8$�&#x1d;�*�C�sJF�	I���+�A㣫Q�&#x6;�w&#x94;q$5&#x19;&#xb;%�P���&#x12;��&#xd;a�T��&#x1;���&#x6;�9p��@\�^\�Tչ&#x6;�I���1�&#x17;&#x15;��\Q�i���fq����ZO���-�\�/PVG�:��q��&#xf;�����#� 4&#x18;���u&#x10;z��M?�\M�d�9�n��&#x1c;��T�.������#-�3�&#x10;��&#x12;s&#xc;�Z&#x3;��1\^���Z�w�7�ޛ]ﭮ�v�{����&gt;M�|��A�5&#x1f;Ѧ��&#x3;��K���Rp)�&#x14;\&#xd;
.&#x5;��K���Rp)�&#x14;\&#xd;
.&#x5;��K]�K��&#x3;�YЭ�d$�ls}���h�,eѷ&amp;oY��[��k�&#x0;&amp;p�����IJ���Ӆd���F{b��._����QH&#x1e;T���Z]�x��ً����X�ܸL|{��4/U�*���Lk2&#xb;�f�nӳ�&#x19;&#x19;�դ/�n�&#x10;�T�0ce����8Rn&#xd;
���J�DR�ь��&#x3;ci�2���ݙ��/��7�x&#x1c;�5&#x10;�����&#x17;�3�;&#x13;�&#x8;l&#x4;6&#x2;&#x1b;���F`#�&#x11;�&#x8;l&#x4;6&#x2;&#x1b;���F`#�&#x11;�h��&#x8;ݙ���ljw��n��&#x6;Y�b�&#x3;�I!}?&#x16;&#x11;�}P�����ѝ	ݙ.ם�&apos;&#x7f;����&#x6;�3&#xd;&#x6;�|�&#x7f;���&apos;/�B�ք��-�Yju&#x7;��I*�&#x10;]&#xc;�|s����|�~�����O&#x14;&#x1a;��R�T��.��.�&#x2;&#x12;&#xd;sO(Nx6���T)aĉ�&#x12;Nn��S&#x14;��&#x12;���{_�;�y۞�&#x11;��7�eO�·ݼ�[w͙5��&#x1b;6&#x7f;¦���n*�e�B�&#x1b;����N#�?M���Khw^.�&#x1b;Ր��6ҢK�֕e&#xd;
&#x5c8;bjA��6.��mE�&#x15;�N�y�Ť側@Z -�&#x16;H&#xb;�&#x5;�&#x2;i��@Z -�&#x16;H&#xb;�&#x5;�&#x2;i���AZ�s��&#x1a;����W&#x16;g��S�sFq��&#xc;�).&#x14;��&#x15;O,&#x16;O�,�^\:��&#xd;�X;��Q,&#xe;bq&#xc;�;�Ul�+�&#x18;Y&#xd;�5h���u��3O?����&#xe;L�2)Q9\&#x15;��67R9�w��&#x15;��t&gt;m�	}���H�&#x11;p�&#x1a;5Z�H�v�.��.ɨIu&#x1d;=��m `l��&amp;ux+��w�ٻ�� Y�!Y&#x1f;�d��&#xe;��=��g�0��5�N{�D��$&#xd;
�%Q�4��{�ċQ�&#x4;�&#x0;u�:@&#x1d;�&#xe;P&#x7;�&#x3;�&#x1;�&#x0;u�:@&#x1d;�&#xe;P&#x7;�&#x3;�&#x1;�l�~J�&#x19;�a�r���2�r-l�˴\�P��%Y����������m�@u{�&#x3;�+{&gt;�T����^&#x1c;��&#x17;&#x7;��c^�&#x13;�z&#x12;&apos;͜��� &#xd;�:�)`B�kB�P�5�����&apos;&#x1a;�����;��p���&#xb;�tZl�uu|&quot;�=��V,|#�a�4%�N#�&#x1c;1���ɩ^Q&#x13;�&#x1d;Q&#x5;㛂n&#x1;(&#x7f;M+&#x12;�&#x15;QvK�R��B-p7t��&apos;f�4�:#�&#x15;���3q����&#x0;��:&#x10;�4-&#x5f9;&#x8;϶��]�z��;ì�&#xd;
��R#M�[�{&#x1c;�xC�n/&#x8;[�d��������س���Z^=���&#xe;-6�l�{��&#x17;&#x1f;\mV���R�N5ܽ��W&#xe;���Zʚ&#x16;�v*���=�ܕv%9&#x1f;SA���sÖ�&#x1d;���&lt;�����ݵqSϮc�r�ԕ�{Z˽-P�3�2�G��&#x1c;z�ʞ��%+��&#x16;&#x1b;��g�v���x�y�u~����&#xd;&#x1d;���w��?~�E��@��{^�7ޜ���w�ܬ��,��,)*X�GL努&#x1a;�յ�4�&apos;t��`V�7&#x7;E�z�&#x1d;ޘ�ڥf#��&#xe;u�e�0&apos;&#x8;Bא�0]S�9o�&quot;0]�n��PEn&#x10;�ft���TX*,&#x15;�&#xd;
K���Ra��TX*,&#x15;�&#xd;
K���Ra���~X��\�^i�v�s��M�#T&#x1c;���&#x14;����S��&#x8;aox0_��W���&#x1;���&#x15;N����^��·���&gt;�� ;&#x3;!;_�����U�0��M�&#x3;&lt;�����F�=xb6E�%&#xc;gh��h&#x383;�]�s����w�7�ޛ]ﭮ�v�{���Ͼv_��&#x1f;&amp;����&#x1c;0&#x11;�&#x8;L&#x4;&amp;&#x2;&#x13;���D`&quot;0&#x11;�&#x8;L&#x4;&amp;&#x2;&#x13;���D`&quot;0���rgo&#x19;&#xd;���&#x2;ʂn�%#�e;�f�F�g)��5�ɺ�&#x19;��/��&#x1;L���&#x11;����&#xd;
YW�&#xb;�.�r�&apos;�{��th�9�T!yPͧ�kuU[g�&#x1b;A����q���0�i^��M&#x15;���U��d&#x16;��P�m�T�&#xd;
Eu���3&#x16;�������V&#x1;�T&#x6;rS�k�T&#x1a;$��f$]�&#x19;��������&#x18;�q0��&#x1d;�&#x1b;�&#x11;�-�볷���^p/�&#x17;�&#xb;�&#x5;��{���^p/�&#x17;�&#xb;�&#x5;��{���^��^�&#x0;�����nQ��&#x2;&#x3;{]/{&#x5;ndx��E�&#x1a;���n&#x13;���&#x91;��i��&#x1b;��f��vK��~6�ZH9�X]�յso|�/&#x7f;&#x10;�5&#x18;����㯙���lx�.��ru-�s��B�v�]Ns#-�Z�Y&#x10;��̟�ޤ&#x1;�����&#x1a;��&#x15;*Ut�����&#x17;vm�Lg:��y�&#x0;�褤�#&apos;�&#x13;��[i�9���&#x10;*&#x8;&#x15;�&#xd;
B&#x5;��PA� T&#x10;*&#x8;&#x15;�&#xd;
B&#x5;��PA� T&#x10;�~&#x8;�=�	�σ*�&#xe;&#x12;�ǆv�`&#x1d;X��&#x17;�j��V�$g��Iʉ�|l�ER{8vWhƐ!M�6f��P�&#x8;�&#x1e;&#x3;��4���d&#x1a;ѯdg:����Y�����#,�ó���&#x7;��mG�{ϥw��&#x7f;�u�̀�����&#xe;��S�\�&#xb;���Bp!�&#x10;\&#x8;.&#x4;&#x17;�&#xb;���Bp!�&#x10;\&#x8;.&#x4;&#x17;��.�u�c&#xc;b�%&#x1f;=�n%O�&#x1e;��Bץ&#x1b;麤I�Z&#x17;&#x11;*7&#x16;�F/�@�BER�5&#x15;��u��K7�u)J�JZ�Փ��__}Ͽ��C��j0����X59p]�6�Gҍ�8�&#x1e;62�F`#�&#x11;�&#x8;l&#x4;6&#x2;&#x1b;���F`#�&#x11;�&#x8;l&#x4;6&#x2;&#x1b;���Fۛ��-c���8��=sJF�	I���+&#x10;��փh&#x7f;�&#x1c;��*�\r�GWYl;�&#x8;�8&#x10;&#x16;�ߔ&#x15;�&#x14;��]�*��R�Dno{��n&#x7;&amp;�jx��!�	�@��&#x1e;HW&#x13;�#զ�e�O���&#x17;&#x15;��\Q�i���fq�:&#x18;���S��z�57���u䮓�&#x1d;��l�L��O��&#xf;&#x1f;A���0����Oӯ�&#x10;��� �&#x18;T�&#x4;�x@&lt; &#x1e;&#x10;&#xf;�&#x7;�&#x3;�&#x1;�x@&lt; &#x1e;&#x10;&#xf;�&#x7;�&#x3;�&#x1;�x��x&#xe;���	�˵P����&#x1d;�]�$�J�]x���?w���&#x19;�n�p�{e�Ǜ���v܋�^&#x1c;��Ww̫x�\O⤙���&#x17;��Z&apos;&#x10;&#xd;J&#x1a;0J��	�&#xc;�Z}&#x7f;&#xe;��&lt;�XU�$��^B�&#x1d;�x�N�&#xd;`U�0bM�M�&#x11;�&#x1f;���#�:�&#x1d;&#x14;�&#x1f;R��E*R΄&#x16;鞔�O�4,���@�8T&quot;t�QCѳ�&#x16;O&#x4;t��*&#x10;*�&#x2;a�&#x6;&#x17;���k��n���&#xd;6�&#x5ef;^L_�I&#x1a;���l&#x7f;r�&#xd;
�&#x4;*&#x1b;&#x0;*;&#x10;�4-&#x5f9;D϶��]�z��;�RB&#x7;Ne��HS���&#x1e;G.�г�&#xb;�V��}2�w}��6��~(��WO���C�Z:��&#x7b8;���&#x7;W��E��T�Suw����é����f�2�*�N�л�g��Ү$�c*��^wn�ҳ��ݛ&apos;U\^���6n��u�R.��r~Ok��ժqFP�r&#x7;�Ρw�����Z���h�Qo&#x7f;vogM�7�&apos;\��[�=&#x1f;���~�鷿����6&#x18;.�&#xf;���6�&#x3;]����d�-�(\&#x14;.&#xd;
&#x17;���E�pQ�(\&#x14;.&#xd;
&#x17;���E�pQ��vQg������jy	�YR�r�&#xe;�&#x1c;d�&lt;x&#x7f;C5T�&#x2;V+%UW7&#xd;
��/q&amp;l&#x4;��&#x13;&#x1;�&#x11;a��&amp;h(a&#x5;�%��l&#x11;i2�U$#�&#x13;��&#x1f;z�&#x16;�0�L�&#x14;壔�%t)&#xd;�{��̵&#xd;��&#x3;&#x1b;�!6^����g����B�����&#xf;����N���&lt;&#xf;4&#x4;&#x1a;&#x2;&#xd;��@C�!�&#x10;h&#x8;4&#x4;&#x1a;&#x2;&#xd;��@C�!�&#x10;h&#x8;4&#x4;&#x1a;z�4d��@C�&#x16;&#xd;��&apos;5݊�o&#x4;&lt;���&#x4;5�&#x1;&#x1d;��&#x4;tsL&#x17;��0툮t�&#x14;�&#x16;Sf�V$&lt;+�����&#x1c;M�Z���n)&#x1a;�0I֛~��/&#x7f;&#x10;:4&#x18;:�;��!L��I��A� p&#x10;8&#x8;&#x1c;&#x4;&#xe;&#x2;&#x7;���A� p&#x10;8&#x8;&#x1c;&#x4;&#xe;&#x2;&#x7;���A�� &#x1d;�d���h��(��8�&#xc;�ƶE��&#x19;&#x8;z&#x0;4�i��������I������I�6��#?��w��8Xg X��&#x1b;&#xf;��;�u�f��ru�����ڐ�	��5d(L�Tt&#x16;&#x1a;�&#x8;LW�v�&#xb;U�&#x6;�nF��&#x3;�&#x1;�&#x0;y�&lt;@&#x1e; &#xf;�&#x7;�&#x3;�&#x1;�&#x0;y�&lt;@&#x1e; &#xf;�&#x7;�s�!��M��D��vT��R&#x1c;��TwD���� S���F�Q/W8��ŧҕ)�%�4�&#xe;&#xd;���g���Q�.BZ&#xe;V��V�a&#x14;��Z(�ZcuUV��=�����;�(��(��_�c��)�ZV�յd�ɪ&#xd;
�R��)͍LU&#x1a;�ɪZ�i�&#xb;��ě��M�{���z��B���Y��1���®-&#x19;um��y&#x19;֗褤�#&apos;�&#x13;��[i�9���@&#x1a; &#xd;�&#x6;H&#x3;�&#x1;�&#x0;i�4@&#x1a; &#xd;�&#x6;H&#x3;�&#x1;�&#x0;i�4@�~ �=�	�ǃ*�&#xe;&#x12;�ǆv&quot;�&#x1c;X��&#x17;�j��V�$g��Iʉ�}m��;{8vWhƐ�3ۍg�p�1&#x10;�J�zmN�&#x11;�Jv��j6�j����#,�ó�����͟�y�s�|�?�ɷ��/�o&#x6;�o&gt;Կn0�&#x3;�7�?�͓����~�s5C�P�&#x1e;	��M��MSЭ���@ڊ�f�&#x1;�&#x0;Y�,@&#x16; &#xb;�&#x5;�&#x2;d&#x1;�&#x0;Y�,@&#x16; &#xb;�&#x5;�&#x2;dAO�~����Q)&#xe;JqL�CR�&#x11;�������0E&#x38d;Ғ��&#x1b;�PAV&#x6;MV��&#x19;��&amp;���&#x19;o����%�L���X��-&lt;�R�P��@E����ӥe�(�6���&#x7f;��{o�iwdg�N%�랫�w��o|74g04���i&#xe;��\5�&#x1b;�&#xd;�&#x6;x&#x3;�&#x1;�&#x0;o�7�&#x1b;�&#xd;�&#x6;x&#x3;�&#x1;�&#x0;o�7��K⍍�j@7[4W&#xd;]~J�#OD���&#x15;&#x1b;��C�&#x10;*����\�&#xe;&quot;�U�&#x1d;���U��C�/��;���`:&#x3;a:���&#x8;kS;�t�{��-&#x19;&apos;&#xd;�&#x3;�&#x1;�x@&lt; &#x1e;&#x10;&#xf;�&#x7;�&#x3;�&#x1;�x@&lt; &#x1e;&#x10;&#xf;�&#x7;ĳ��g��缴&#x1d;��&#x14;Ǥ8$�&#x1d;�*�&amp;i�&#x1a;&#x15;�&#x1d;&#x1e;n��&#x1;�&#xc;&#x1a;�t��9x&#x7f;C5�4OC&gt;�J��n����K�	&#x1b;������]�R�0#�X�&#xe;WH&#x5cb;&#x5;ݻh�&#x13;ӝ��&amp;d��1cO�&#x1c;KXZ`&#xd;
O:��4&#x19;ӍId�^����K$a�D��Љ���}�Ii���&#x6;&#x7f;�z&#x7f;�l��w|����Q̿3&#x18;:�����y�&#xe;�!p&#x10;8&#x8;&#x1c;&#x4;&#xe;&#x2;&#x7;���A� p&#x10;8&#x8;&#x1c;&#x4;&#xe;&#x2;&#x7;���A� p&#x10;8h�qЯ\��&#xd;
gʍR�&#xc;&#x4;w�E�&#x13; �A#���&#xe;|d�}dH5���.���f3�k�&#xe;�&#xc;�+�&#x6;H{�g&#x7f;�&apos;�%&#x3;�%��&#x1f;�,��˨P��T��j�p�N�T)+�ڙ��&#xc;��M7�\de(_I�����|�~���&#x2;�Ot&#x19;��R]_�&#xb;�y&#x2;_&#x1e;a���	�g�m�M�&#x12;F�h.���s#\��S���9���t�V[��&#x0;}U������&#x19;&#x7f;������ovrRL&#x1a;����g&#x1c;s��o9�o���@����T��r���sN���&#x1d;�R&#x1d;��a���&#x7f;�%�;/&#x17;��)i��k##��m]Y�p�(&#x16;V�&#x14;�&#x1d;q,l+���u&#x2;��/&amp;#&#xf;d&#x4;2&#x2;&#x19;��@F #�&#x11;�&#x8;d&#x4;2&#x2;&#x19;��@F #�&#x11;�&#x8;d�&#xf;2&#x1a;�k���&#x1c;�N/��8S̟Z�3��&apos;f�Mq����xb�xbf�����&#x1d;lL��a,�bq&#x10;�cX�!�b+^���j0�A3��nFZ��3O?���&#x7be;E�2)Q9\&#x15;��67R9�w��&#x15;��t&gt;mwޡ�ޗ&#x1b;)4&#x2;NS�F�&#x1f;)�.�e��%&#x19;5����&lt;�&#xd;&#x4;e����?@&#x17;{��v3x݇�?���}��?��Ø�g0$�/�&apos;Y��C:�t&#xf;&#xb;���-�&#x7;d&#x2;u�:@&#x1d;�&#xe;P&#x7;�&#x3;�&#x1;�&#x0;u�:@&#x1d;�&#xe;P&#x7;�&#x3;�&#x1;�&#x0;u�w?�����0O⣢�2�r-l�˴\�P��%Y����������m�@u{�&#x3;�+{&gt;�T��]���&#x15;���	&#xd;�	%C���r&#x7;�W�h��j&#x12;҉q��н�J�ņ��*&#x13;�&#x19;;&#xe;e��6I&#xd;
K&#x19;��&#x1a;�&#xb;u�Ů&#x16;*�w&apos;&#x1c;&#x5ca;&#x1c;7�b�BMXFl	/6&#x1d;zg[*��o��&#x13;�&#x11;�q�b&#x11;��&#x17;&#x16;U��M&#x1;�d&#x14;��B&#x5;��6&#xc;Y��&#x17;ψ�&#x11;�_&#xf;�&#x3;�L�r�K�l�~�ߵ��z�3�:�P�.5Ҕ���Ǒ�7�����U�v�&#xc;�]�&#x7f;��=�&#x1f;����S�*�Т�ζ�7nk&#x7f;���fcQ()U�T��+{~�p�ꯥ�i&#x1;o�q�]ݳ�]iW��1&#x15;t{�;7l�����͓*.���]&#x1b;7��:V)�J]9�����j�8#(C�cd�&#xe;�{e���Ւ�TE��z��{;kz&#x7f;��&lt;�:?�Z��Х]���&gt;���a���pѷ�o�����z&#x1e;\&#x14;.&#xd;
&#x17;���E�pQ�(\&#x14;.&#xd;
&#x17;���E�pQ�(\&#x14;.�\]T���E�7��&apos;��S��&#x1b;�W�aT��&#x8;��UxN&#x1c;&#x5;RZz&#x10;�&#x13;^&#x10;�t[o&#xb;×��&quot;�&#x14;RҢ&#x1b;�#Wd�A�[��&#xb;�	�q^�8;&#x3;�~�&#x1f;��S��&#x1;�͇�Ǜ���QI����ĸ�J�&#x14;�&lt;����*՝&#x15;U���Gt�v&#xf;=�)��У���Jc9�&#x1f;�c���&#xe;5�T�zot�7��[]���N�{��&quot;��ݗ&#x17;��0��&#x4;�F�&#x6;n&#x10;�±u�s�m�n&#x1a;�@��t&#x3;-�L;r/�Y&#x7;0&#xb;�&#x5;�&#x2;f&#x1;��Y�,`&#x16;0&#xb;�&#x5;�&#x2;f&#x1;��Y�,`&#x16;0&#xb;��&gt;�&#x1d;iw�˂n�%#�ey�f�F�g)��5��j&#x7;�8�š-�lu&#x7;���h���Z;�	u�9�:r�R!��t!��QN��p��d&#xf;-�s&#xd;:�&#xb;Ƀj&gt;�\���:�6&#x7;5�&gt;�&#x1d;k�&#x1b;��o&#xf;��j�T�ܻ\�iMf�^.&#x8;W�*2�@hN(&#x5;տ��T`�H&#x1a;�Tl(3&#xd;
�MqұSi�H�?��tc`�t��&lt;���o&#x7f;��1��`��&#xf;1��H�;�з&#xf;�&#x4;B&#x2;!��@H $&#x10;&#x12;&#x8;	�&#x4;B&#x2;!��@H $&#x10;&#x12;&#x8;	��\	�A�&gt;���ze�&#x5;��&#x5;�4��&#x1b;&#xb;�7��&#x2;�&#x12;RE��4&#x19;�*��t�	ǰC/�b&#x11;&#x6;�O&#x16;�&#x2;�Ҳ�.��|O�����}�ۇ�}��w��}&#x1f;������&#x7;}�&#x6;�7��_&#x7fe;�=y&#x19;&#x15;굦�&#x1f;nY�R�o\�LRI���[�յ��u&#x3;lM�K��F��H::Y���*ձ�6va�&#x15;�t��&#x5;r��&#x14;ߕ&#x1b;�ʪ��h.���{z&#x8;rj/�C0��uڤ9K�1����ݎ5cy&#x9b;1g�1C&#xf;#��c��&#x1b;6�g/����&#x18;��&#xd;
�o�s�W�{��d����}�%�;/&#x17;ʍj�kv_��gu&#x16;&lt;���y�&#x5;O�,�gv��t=�.L&#x17;�&#xb;Ӆ��ta�0]�.L&#x17;�&#xb;Ӆ��ta�0]�n?Lwt�&#x19;Zc�;:����L1&#x7f;jy�(.���7ŅB����≙�ӋKǷ&#x10;��-C�&amp;�&#x1e;k��8��A,�au����xe&#x16;#�&#x1;e&#x7;&#x18;e�܅g�~������B������F*g��ܾB��Χmפ�ޗ&#x1b;)4&#x2;NS�F�&#x1f;)�.�e��%&#x19;5����&lt;�&#xd;��n��z������琬�����&apos;YS;��އvmAG=&#x1d;�&#x3;�&#x1;�&#x0;u�:@&#x1d;�&#xe;P&#x7;�&#x3;�&#x1;�&#x0;u�:@&#x1d;�&#xe;P&#x7;���;�m�Ѽ����.�IiIU��:�f��&amp;9x&#x7f;C5T�?�j����F{�&#x1d;�ęp�&#x1e;svd:^�J!��Z�}�!�r�&#x3;��Za&#x1c;�N�M�M^&#x14;&#x5;6�&#x15;��n&#x3;}�锭Z�ٱ��&#x1d;[.z�&#xd;�&#x15;����G�\I˵z&#x12;6�9=�O&#x7f;���C�&#x6;B��ҿa&#x1c;gv�&#xe;�&#x18;&#x7;y:�&#x2;���%c_XZ`�@�X�v�F��)/6.� &#x3;&#x1c;&#x4;&#xe;&#x2;&#x7;���A� p&#x10;8&#x8;&#x1c;&#x4;&#xe;&#x2;&#x7;���A� p&#x10;8&#x8;&#x1c;&#x4;&#xe;�&#x11;&#xe;2�Q)&#xe;JqL�CR�&#x11;��i&#x15;��|�&#x2;&#x1c;h�&#x1c;�j�&#x3;&#x14;�r&#x14;�&#x1b;�)�i�&gt;����h���\&gt;�p?����&#x19;%�xR5��3�zeI�*t٫�I��\�|#ڱvZF�S�&#xe;T���ּl큧&#xe;�vW3���o���&lt;J`�#w&#x1c;L�&#x13;U�&#x1d;7&#xc;F������&#x7f;�	 �@ �o�&#xf;i0&#x18;�s&#x18;�Ο���f�i͜��ozJ�MW��ٟ�����)m&#x12;��a0:@&#x15;�&#xd;
P&#x5;�&#x2;T&#x1;�&#x0;U�*@&#x15;�&#xd;
P&#x5;�&#x2;T&#x1;�&#x0;U�*&#xc;F���Z&#x18;�&#xe;��&#x5;��}�}&#x1f;����&#x12;$k $�����8&#x18;�g�1&#x18;&#x1d;P&#x7;�&#x3;�&#x1;�&#x0;u�:@&#x1d;�&#xe;P&#x7;�&#x3;�&#x1;�&#x0;u�:@&#x1d;��vE��3&#x1a;&#x1b;���kn����~�n��H8�&#x1b;&#xb;+���V-&#x12;R��&#xf;�X�R��V[�:}(&#xe;,SXn� �&#x3;A�:=��q@����&#x6;Ǌ6c0���o�|&#x7;&#x6;�&#x1b;&#xc;&#x1d;�A��*��!:tc&#x1c;d�n�&#x6;T�9�n&#x8;��s��&#x3;&#x11;+�&#xd;�(2���`t� p&#x10;8&#x8;&#x1c;&#x4;&#xe;&#x2;&#x7;���A� p&#x10;8&#x8;&#x1c;&#x4;&#xe;&#x2;&#x7;���A�&#x18;&#x7;mu�&#x1d;�&#x1d;��&#x14;Ǥ8$�&#x1d;�*�C�s�xY&#xb;I���+��A�����&#x6;��w&quot;�&#x1b;9�A&#x16;�&#x18;&#x8;+�N��c&#x11;��&#x7;�+�/m&#x7f;&#x3;�&#x1c;�XPu&#x19;ɺ&lt;U�?�e&#x0;��Hk(�����&#x74b;&#xd;
�rU����D�D���!oo��\��&#x16;k�ӯ&apos;�#w�\\g&#x1d;��Z(�Zc��.;����������:&#x3;�:��?�&#x19;�9����\)Wג=&apos;�*��&#x1a;�472Ui,&apos;�j��&#x12;��&#x7fd;��&amp;��=Y�Z&#x1c;�&#xd;
�*:gU�}u6��Vt&#x17;�3s^��%:)i��I:��V&#x1a;g�&apos;�:&#x8;	�&#x4;B&#x2;!��@H $&#x10;&#x12;&#x8;	�&#x4;B&#x2;!��@H $&#x10;&#x12;&#x8;�&#x1f;�t�l�.󠊺�D뱡�#&amp;}ˈ���&lt;��V�յB%9��ORN|���-z�ñ�B3�&#xc;O�n�t�K�&#x15;�T��ks2��W�3&#x1d;&#x1e;��&#x1e;��4�&#x1c;a�&#x1c;�턽���o&#x1f;���9_��?���_&#x4;�&#xc;&#x4;Ἷ&#x7f;�&#xd;&#x1e;�&#xc;bϜ��|�g�&#x13;&lt;%��9�D��|�&#x3;V&#x1;��U�*`&#x15;�&#xd;
X&#x5;�&#x2;V&#x1;��U�*`&#x15;�&#xd;
X&#x5;���9}�c��R&#x1c;��&#x14;���#R��*Xj�w��&#x11;��(یQ�%[�yfoX�&#x14;���T�R?��r��r�l��Y�F�d��&#xd;
Ƀ��{��z���j&#x15;����5�U6�ވv���Q�T{j���VߜΔ��r��ٸ|��͟&#x7f;����C�N�,&#xe;&amp;ǉ�Ҏm�&#x19;:Wn&quot;�&apos;��&apos;���&apos;�4&#x3;�4��&#x1f;�,��˨P�5�d:�&#x12;�%U�J�v&amp;�$Ct�dN�\&lt;g(_I���@k�5Zn�&#x8;�O�&#x19;��RcS�+5��.�r�R�&#x13;�1��T)a���&#x12;Nn&gt;7�&#x15;[9�+�vNm� ���V.&lt;@_U�&amp;��Μ����i1�;t�Mj�&quot;?��·f����&lt;ݰ;o��ف./N��&#x18;��&#xd;
�D�s�W��h��H����&#x7f;�%�;/w���&#x6;U���&#x4;O�&apos;x�=�S��9�.�*&#xf;P&#x5;�&#x2;T&#x1;�&#x0;U�*@&#x15;�&#xd;
P&#x5;�&#x2;T&#x1;�&#x0;U�*@&#x15;�&#xd;
P�&#xf;�&#x1a;�k��&#x18;=�N/��8S̟Z�3��&apos;f�Mq����xb�xbf�����&#x1d;,[��a,�bq&#x10;�cX�!�b+^���j@�AC��i��܅g�~����s&#xd;�ʤD�pU����H��ߕ�WHV���=DY&#x6;0#�Fж�&#xb;&#x1f;)�.�e��%&#x19;5����&lt;�&#xd;������?@&#x17;{��v3x�&#x19;s&#x1;��o&#x7f;�o~�K�����o�&#xf;��wH��.&#xb;����&#x19;�&#xd;�&#x3;ׁ��u�:p&#x1d;�&#xe;\&#x7;�&#x3;ׁ��u�:p&#x1d;�&#xe;\&#x7;���; �[�4S�&#x14;&#x7;�8&amp;�!��Tq&amp;]�&#x1f;�O�z�&#xd;}W�X}+x��&#xf;�a7�l7���҉ƪ�&amp;!�졜B#&#xc;���U(g�3�̑i:?Y&#x0;�����r)	�.5��&#x16;����P���)�(�}_ق�&#x1e;�VT&#x13;F��a���&amp;.����h&#x0;:Rm���?�ML&#xc;4&#x18;����&#x18;&#x8;&#x1d;��C�%ט�&#x13;��o�\�$9�&#x3;ݬV�~j�z�&quot;&#x1c;�&#x11;�3�TU�S�;{�1�&quot;�j�Y!&#x7;g�8�2s��3ݳ��4�p`�,&#x3;�q�&#x3;�:�&#x10;��&#x15;B���u&gt;LpB&#x7;&gt;!	L&#x10;�PȘ&#x13;B�9�,&#xb;�	&#x5;���Ϫ��ڝ����&#x7f;&#x15;������*+_������&#xf;&#x12;&#x7;&#x14;&#x16;b&#x1e;&#x1a;��iLx�1a��C&#x13;��!&#x1d;&#x3;�0`	�&#x16;�-&#x4;[&#x8;�&#x10;l!�B��`&#xb;�&#x16;�-&#x4;[&#x8;�&#x10;l!�B��`&#xb;&#x3;�0`	�&#x17;&#x6;,!�Z���&#xe;�z鉧&gt;�e�X�&#x1;��&#x1d;&#x1e;�z�&#x5;��_�6n�x��O���aYb�R�)��&#xd;
&#x0;�&#x5;��}��|c�^���5�m&#x17;�&#x8;��OX��&#x1b;�C�6e*&#x5;�LӇ&#x11;3&#x8;&#x8;����aZ&quot;&#x1e;�Ӊ�;����p�z!&#x12;E��&#x10;	!&#x12;B$�H&#x8;�&#x10;&quot;!DB��&#x10;	!&#x12;B$�H&#x8;�&#x10;&quot;!DB��&#x12;�Q�X���zMa���P��T�L��Ti#�T�xx�Uٴ��&#xf;`��*�G?z�&#x17;��&#x10;��&#x1e;���qqk�!�o&#x1;&#x19;u&#x19;mGe���f&#xf;�Ƞ��&#xc;&#x1b;&#x13;a�ь&#x1f;&#x16;&#xd;
r��sw��`J�� E/&#xf;/��;/,�i&#x12;�&#x4;�~2�C�C����%Q�&gt;3&apos;����\�d&#x2;��&#x1d;&#x15;q��&#x7;�Z�B�&#x11;x���hš��g#���&gt;���V곝��&#xc;3&#xb;��.&#x19;&#xe;n2&#x2;�w|�&#x10;��&#xd;&#x2;kG����&#x13;)��k�S�;���F܄�	q&#x13;�&amp;�M��&#x10;7!nB܄�	q&#x13;�&amp;�M��&#x10;7!nBܴ����+Ɩ�&#x1e;&#x13;M�Y�EF��7#�`�ݯ4s��|��o1�2&#x13;㖲m)Ӗ�l�&#xd;[S����Fb�D �&lt;@j�	�&#xb;�&#x14;7M�&#x17;�8Xٖ1��U��&#x14;g[��&apos;�������ht���&#x13;�]P��&#x1d;I��c�ޢJ�j.+��y�Ϊ&#xd;&#x16;�z��&#x1e;8��:%��LbB&#x1b;!̰%���A{Wk�`I&#x0;َ&#x1b;�~�`&#x0;�M�ƚ$f}�t��&#xb;&#x1f;��&#x1d;&#x8;�F&#x3;�=4&lt;&#x0;v`��鴸M����y�&#x12;�&#x15;��Bw	h&#x1d;0&#x7;��K]=�uf�&amp;Nȍ�&#x1b;!7Bn��&#x8;�&#x11;r#�Fȍ�&#x1b;!7Bn��&#x8;�&#x11;r#�Fk�&#x1b;�tL��X��QJ٤�I*m��:8SkqUe��n&#x1b;&#x8;|F,&#x2;i!2S���zZ�`:�[Ĵ,�L�&#xe;a���܁U&quot;�s�+�&#x1f;;Ե�&apos;�ps�&#x11;�\i3�&#xb;�[Ѹ����T&gt;�=�&#xd;����&#x17;^��k��&#x1;I�&lt;��g�&#x13;��&#x1b;&#xd;&#x1e;�&#x196e;À�U&#x11;���&#x18;��\	�&#x12;r%�Jȕ�+!WB��\	�&#x12;r%�Jȕ�+!WB��\�&#x2;��&gt;��H&amp;�#�)&lt;��G�&#x17;��H&#x17;&#x1a;�dRI�&amp;&#x1d;&#x2;+h��R�	�&#x18;���R_��:7�rD#i#���&quot;&#x1a;iG���#���W&#x1e;}�CO&quot;�&#x1a;	������o��P�4Gzz�&quot;#�|a&#x7;&gt;�,��&#x1;&#xc;@�p���&#x6;q��SA�&#xb;:&#x1c;n��&#x4;		&#x12;&#x12;$$HH�� !AB��&#x4;		&#x12;&#x12;$$HH�� !AB���&#x8;��E&amp;�;&#x16;�;:X�_n&#x4;��L�T.�&#x16;�T��Tν&#x6;&#x7f;vW���bCur&#x9e;taF&lt;�K��ؽ��KY���+m�:^k�2�k�z�@5���&#x3;�L#&#x16;&#x3;�BF��F&#x1b;&#x12;��&#x16;&#x1e;o͊z&#x18;\(Nڒ����A�&quot;&#x17;iu�&#x18;&lt;.�&apos;�+m&#x5;y�E�&#xf;_a�b�B&#x17;,��1��&#x1d;ni�V@�&amp;&amp;&#x13;�V&#x2;N��&#x6;���R�L�&#xb;���&amp;�*?x�U�E7&#x1c;k��a��&#x8;�j�	X�Zk�Wx&amp;&#x19;�v��2C��`&amp;�&#x7;�wz�U��U�3.�=�9�ʠ=L�&#x1b;Cr�&#x15;E&#x7;3�_�v���:�Nhc�α��ǒ&#xb;&#x7;��&#x19;!�:�p�0�+���y+TM{{��@�-ΜrY5u��&#x12;^tr��ܑ̉��&#xf;&#x1f;&#x10;������2��̤j~{�{v&#x6;j���&#xd;
UT����&#x8c;��F8]&#x15;��V3���)��x+np�&#x1f;o&#x7f;�&#x8;�&#x378;��;&gt;�&#x19;&#x17;G&#x5;s&gt;�&#x19;&#x17;1�&quot;rM��5�k&quot;�D��\&#x13;�&amp;rM��5�k&quot;�D��\&#x13;�&amp;r�5�51��&#x1a;���qq�c�T�ō���F�q�O�٫w��#?¨���1&#x1f;&#x1c;&#x1e;�9�NpL:��/~��E�&#x19;]�5�މ�uN`��0�SJ`U�&#xb;�g��Q&#x1e;�&#xc;�&#x19;�3�g�� �A&gt;�|&#x6;�&#xc;�&#x19;�3�g�� �A&gt;�|&#x6;�&#xc;�a�&#x19;7�J)���I)�T�&quot;5u�&#x13;&apos;�\�ޜR�1sR4j�z �ь&#x1a;�)�&#x8;[d����;/�&lt;�v��ۜ8����&lt;&#x17;���	�e�&#x3;[�:&amp;s�g�X��&#xb;x.�Z,r��I ���=�&#x7;&#x7f;��5��r�&#x1c;&#x1e;�Y�	&#x4;?�&#x5;&#x13;&#x8;&quot;�A�� &#x7;A&#xe;�&#x1c;&#x4;9&#x8;r&#x10;� �A�� &#x7;A&#xe;�&#x1c;&#x4;9&#x8;r&#x10;� �9_�ca&#x2;AL ��q�($&#x10;�e2��$&apos;��HbJO&#x10;�L9a�b^�K�3m&#xc;&#x16;&#xb;B�AH�&amp;%��&#x1d;���O`5&#x1;��%}x/�@pM&#x10;)L �	&#x4;�&amp;�`O��W��&#xf;��&#x4;2Α`�_&#x1c;�&amp;i&#x7;�!�|x%6I�`5d��8�q&quot;�DƉ�&#x13;&#x19;&apos;2Nd��8�q&quot;�DƉ�&#x13;&#x19;&apos;2�U�8W:X��&#x5;	d&#x1;߉�א?�2&#x7f;����h�&#x18;&#x5;��͈�X,t�W�&#x12;�qn̐�&amp;)���&#x5;��:�z�u&#x19;�&#x0;�G�&#xb;.�1��.cP)��2b&#xd;
�&apos;L&#x6;�&#x4;�Z�&#xb;P�59�Ô�8�&apos;�s���P�YġB�j&#x17;�~N&gt;�ᯍ&#x1d;&#x13;M�Y��8��&#x17;&#x2;�U&#x8;(�q��?~����8i4p����I�1d�I&#x18;2�8	q&#x12;�$�I��&#x10;&apos;!NB��8	q&#x12;�$�I��&#x10;&apos;!NB��8	C�&#x10;Ya�ܘũ�r�&#x11;&#x6;�z&#x2;�S�0aK&#x2;��c&#x6;RR[jc���ܷ�5�&lt; ���CMkܵ�`Ғ��!sk�Ha�&#x1c;��-M��泵F�7_z�O~&#x19;��h��g��7�v&gt;xs��\&#x18;���!x&#x1e;5��z��&#x4;,I��&#x1d;��´	m�&#x11;O�o���x&lt;9��X&#x1e;&lt;�U�.�j�-��xe/4@x�Q&#x3;|&#x7;�Q�/&#x11;Hݖ�&#x8;L&amp;W&#xf;��&#xc;q�&#x7f;c&#x7f;�z��z&#x1d;�&#x14;x�&#x2;Aaf�D&#x19;Ј)8L��o&#x11;�&#x1c;�&#xf;Ժ��^�j xE���&#x15;�+�W&#x4;�&#x8;^&#x11;�&quot;xE���&#x15;�+�W&#x4;�&#x8;^&#x11;�&quot;x]v��h㸸�m��v�&#x15;&#x10;&#x1b;c�&#x7f;�X��bC٨��*m��ʛ&#x17;U}�vD�#�I�ʹ&#x1f;����vg���&#x1b;��9x&#x17;��	̂l&#x14;��p���w@��ћ��ȋ���[&#xd;q��Imǹ&#xd;�m�&#x5;&#x6;�#�N���i+|�pV}&gt;:�У�&#xd;
&#x1d;5&#x2;Vm�fgY}�샟��+w�r�A�&#x1e;&#x1c;&#x7be;r�G.Hn�A�hӵ�|��D]&#x4;��`��V�&#x1e;�k�&#xd;
gű&#x6;�T_�Χ&#x7f;c� �U����(�*�&#x2;ڬ�4���&#x1;�g	�5n?|&#x1b;&#xb;�&apos;�Q��KO�S�0&#x8;����ma�� &#x8;A&#x10;� &#x4;A&#x8;�&#x10;&#x4;!&#x8;B&#x10;� &#x8;A&#x10;� &#x4;A&#x8;�&#x10;&#x4;!&#x8;B&#x10;� h&#x18; 誉Pє�&#x5;O&#x1b;�����&#x18;���&#x18;�혘���&apos;��3�&#x3;P&#x13;?���m`�]��&amp;c&#x1b;2�Q�?&#xb;��K��S(��j�l&#x1c;aU&#xe;�&#x12;�t�&lt;K&#x1e;:��&amp;&#x18;9��Zp�c���&apos;&gt;vU�$��&#x0;�&#xf;&#x7f;���}&#x15;��H�����n&amp;.(&#x0;����`3��q���&#x16;T�j��&#x10;P�&gt;&#x8;&#xd;o�	��\s�&#x3;&#x7f;��o��|&#x11;@����D�ؾ&#x1f;8&#x6;&#xb;&#x8;u��VoH�SG�)�&#xd;&#x4;w�@�&#x1c;w�B��0&#x7;a&#xe;�&#x1c;�9&#x8;s&#x10;� �A��0&#x7;a&#xe;�&#x1c;�9&#x8;s&#x10;� �Y&#x12;���H�9&#x17;G&gt;�Kp&#x13;&#x3;��%&#x16;*e�R�)e�J[��b#�1VeӢn&#xc;�&#x15;&quot;�&#x19;1��	ﹰT�&#x8;zF/�&apos;Gx�{�=��YL�6&#x1a;����x{�&#x5;&#x11;�=*� �W���tY �&#x1e;5&#x15;�:4�9Qo�&#x1f;�0���FuGE$gs;�G=C&#x7f;��9�:z곑�LS���g+��N}v����]&#x3;6�:&#x1f;Xd&#x4;����!��&#x1b;&#x4;V~&#xe;qm�&apos;RP��8�&#x16;wza���&#x8;a&#x11;�&quot;�E&#x8;�&#x10;&#x16;!,BX��&#x8;a&#x11;�&quot;�E&#x8;�&#x10;&#x16;!,BX��hu�EW&#xc;&#x10;m=&amp;���&amp;��n�oF��һ_i栙�&#x16;Y�b�d&amp;�-e�R�-e�J&#x1b;��&#x12;k��k�Ā�Diy���&#x13;p&#x17;�)n�&#xc;7�ne[Ɔ[&#x1e;7]rR�mAß&#xc;o&#x17;G�&#x7;曢��N��P;���Ǿ�E��]�\Vb��T�U&#x1b;,2��&#x17;aq�RA&#xd;B%s�$O&#x12;ߕ&#x1e;	���:�1�Z&#x12;̵�ƪ&#x1f;2&#x18;?&#x12;K�Z�^;&#x1a;�&#x17;&#x1f;��o&#x7f;�&#x9ffd;&#x1f;��h����&#x7;�~k�2�-y�ѹ��h&#x5;��QDH��&#x10;!!BB��&#x8;	&#x11;&#x12;&quot;$DH��&#x10;!!BB��&#x8;	&#x11;&#x12;&quot;$DH�&#x1b;!&#x19;+���&#x1d;&#xb;�&#x1d;&#x1d;��/7&#x2;�l\&#x7f;I�8�&#x7f;���Xl�NNؓ.̈�t�W&#x12;��2{)��2z�m^S�k�P�qM_&#xf;&#x17;�&#x6;�&#x1d;|��it��͍6$��-&lt;ޚ&#x15;�0�P��%y��Ճ�����Q~�&#xe;&#xf;&#x15;^7&#x16;h�d��&#x11;ߥ&#x1;1=*��[�x&#xc;�~�&#x19;&#x1a;7�1��j&#x1;c&#x10;i�P��0�k&#x7;&#x16;�(�%̐�v�Xegr�����DX�팒ɡ�&#x1;�7��YK��o!&quot;�&apos;`�j��^�d�ڝ*�&#xc;U���&#x10;&#x1e;&#x1c;���V5��l�qi��iW&#x6;�a2�&#x18;�S�(:�9�&#x12;Y���X�U&apos;��I����cɅ���&#x3;��&#x10;s�a8]���}UѼ&#x15;���KXg��&#x16;gN�����q	/:9k&#x7f;�H���Ӈ&#xf;&#x8;Y���e�C�Sw��ffR5���=;&#x3;5TE@�*��y�taF|W#��&#xd;
~C�����d&#x7f;�&#x15;7�Ώ��g�r�}�x�&#x1f;~��O&quot;�&#x1c;	��&#x1f;W:{�/��#&amp;�٧��G�a3T	�����&#x1b;1w#�Td��R��&quot;KE��,&#x15;Y*�Td��R��&quot;KE��,&#x15;Y�*e���Q��&#xe;�g�Ƭy&#x10;�6�&gt;�Ĭ�k/z�Cv^��&#xb;��&#x7;&#x7f;�dg$����#;�,k��J�6&gt;t%fmDL��&#x8;1&#x11;b&quot;�D��&#x10;&#x13;!&amp;BL��&#x8;1&#x11;b&quot;�D��&#x10;&#x13;!&amp;Z�h�А5�Y&#x1b;m�ڸ��R*k�F�O�����6��&#xe;,�%1�&#x10;�&#x14;�I�%�&#x1a;�&#x1c;]p[��r�m4�4�¼�#���dxy&#x1b;&#xf;b����ۈ�F&#x8;�&#x10;&quot;!DB��&#x10;	!&#x12;B$�H&#x8;�&#x10;&quot;!DB��&#x10;	!&#x12;B$�H�&#x1c;&quot;�\�Ƙ�\�`Vł�uq�&#x11;2�&#x11;�*&#xd;
���%Z&quot;No6;7#�b��&#x14;�&#x15;�&#x4;L��N�����v�MWk�f&#x18;��Q�}��&#x7f;�&quot;ҡѠC�&#x1b;&#x1e;&#x1d;��uB��&#xc;&#x7;1�A��&#x10;&#x7;!&#xe;B&#x1c;�8&#x8;q&#x10;� �A��&#x10;&#x7;!&#xe;B&#x1c;�8&#x8;q&#x10;� �Ak&#x14;&#x7;�t�9�&#x7;&#x7;u,RSGX�t�( &#x1;&#x1a;1&#x2;�I�F&#x1e;�l��=L6բ&#x6;���&#x13;?�꧟{�}�&gt;n4&#x8;ɳ�K&#x1f;�&#x1e;�g�ڀ�3&#x8;L&#x10;� 0A`��&#x4;�	&#x2;&#x13;&#x4;&amp;&#x8;L&#x10;� 0A`��&#x4;�	&#x2;&#x13;&#x4;&amp;&#x8;LVO&#x12;6��Ys�d4�gL��p#&#x2;&quot;��&#x10;Sr�0F%&#x1;�SPK�\8��&#x2;�&#x3;�%��k�d܇�&#x14;.��.mXl������&#x1;����|�����&#xe;�C�A��lxt��:�C��ARS�?&#xc;y�+$1��&#x12;P&amp;`np}��z���B&#x1c;�8&#x8;q&#x10;� �A��&#x10;&#x7;!&#xe;B&#x1c;�8&#x8;q&#x10;� �A��&#x10;&#x7;!&#xe;B&#x1c;��p�J�Ϙ�UJ&#x19;��MJ���&#x16;���3�&#x16;WU�&#x18;�&#xb;c�� h�@�BP&apos;Gm�4���7�N��&#x16;1-K�&#xd;�CX��&gt;w`���&#x1c;��?v�k�G�2B�e3�&#xb;�p�Uι����&#x1a;��C&#x1b;*&#x1b;N&#x5f5;J&#x7f;$s���F$3*H�S�C2w�n���h&#x13;�CPc��&#xd;
�&#x1d;X\t��&#x14;B��vэsq��&#x17;��o^�.�ˢ3����&#x1a;�&quot;ŵթ��IQUBKC��H�vrN&#x8;&#x1e;�&#x18;�&#xe;&amp;E&#x0;�ؗ&#x10;�?�h��N�Y&#x16;V�&#x1f;&#x1f;�Fg�۸t�D&#xe;�#�G&#x8;�&#x10;&#x1e;!&lt;Bx��&#x8;�&#x11;�#�G&#x8;�&#x10;&#x1e;!&lt;Bx��&#x8;�&#x11;£a���&#x11;&#x1c;�&#x1a;��E&#x1d;#��u���&#x5;#���N&#x5;���צ�C&#x1c;bM��	&#x19;S�1혜��&gt;���Z6���Ŝ.�������{�&#xe;F�H�aA&#x13;&#x1a;��y&#x1e;�!e���W�&gt;~&#xb;��+�P�wu&amp;�&#x7;�I&#x1e;}���qcew&#x0;-o&amp;&#xc;��	&#x10;�����#��㲝�\&#xb;*&#x1;�G�M��_W�&#xe;E��&#xe;&#x15;��ץ���V�&#x1e;���[�V���&#xd;�@&#x7f;�&#x1;8��&#x17;vV�Am��3��Tvpq:}Ûx���QaK�U5�R�|/�盘i5N�0�8$f�,��KT�I��W�-ߓ�g���қ���{��v&#xe;d�/�B&#x1b;1&#xd;9\m͞��&#x15;�[&#x1;���Z�&#xd;
����s&#x1b;��Q!L&#x10;Փ�l&#xb;&amp;&#x1e;8��ru\|&#x13;&#xb;�p�D&#xd;&#x1a;&#xc;|b3j��K],�&#x1c;&#x7;&#x17;��g�T6�xl����\�)����%}�Ұz&#xb;�(�e�L9�&#x1c;ܷh&#xd;
��[`��β9(ߪʣ_�n�&#x17;:_�C󇛉8G�E�&#x1;wz&#x19;&#x1c;?|[&lt;m��7�+���#�$��UٮvYG&#xd;
^��{[kvN&#xd;0����b���,�#&apos;�gS&#x13;�&#xc;&#x14;_�-&gt;&#x16;6f��&#x2;G��&#x1e;9	�Z�ZN�wE��1_Y|,~i��&#x1e;l4k����C�&#x7;�V�&#x4;&#xf;�9h&#x17;��蜮�&#x1a;�&#x12;�7%�qa[R!��8~3�l[�]�\s_Tx�ͥnOu&#x378;�vKr��nA�#&#x1b;&quot;�6��E-gce&#x1b;&#x14;��A&#x3;K^ޤ��[�&#x18;*;k�i�`B�&#x6;U3&#x1d;V���7HM��(=�z&lt;�+�u�&#x7;� �&#xb;�H`�¶���9�h�&#xe;T{`5&#x15;���j���ʦ9�ߣ��&lt;�ە���o&#xf;.0�̆����U�cm ~L����0����&#xd;�n4�FUqY��Z&#x13;&#x1e;&#x12;&#x378;a��l�x!2&#x11;���噂̪s&#x7f;ϡd�Y��H-��_}�&#x7f;|]|��&apos;��©�����TD`�Z&#x0;�&#x3;�6�$u�0�YD�\[�Ҵ&#x5;�����ЎxR[�*;����IeT��,*j����h&#x1d;&#x1d;�4:&#x10;�v\z�zL���z�g�}�_�цD&quot;�&#x1d;&#x1e;2;k������+&gt;��c�&#x1d;U��\�;&#x1d;|��&#x17;U��&#x1a;j��.���Z3�v�T6�ҙ&#xd;
~&#x8;���5���&#x0;�I�L%=&#x379;Q���&#x1f;��p��F���v����2�	F��&#xe;��m�&#x6;1u�!�m�D&#xd;
��&#x1a;���N�s���	蜀�	蜀�	蜀�	蜀�	蜀�	蜀�	蜀�	蜀�	&#x18;ٺ&#x18;�&#x3;;�J)���I)�T�&quot;5���#�� �&#x11;V���`&#xd;�&#x1d;&#x18;R�$�6q�@&#x12;S��P��&quot;�&#x17;�&lt;�q����;�3vL4&#x19;gM&#x16;�&#x13;&#xc;k&#x1d;&#x1;&apos;�K�1���O&apos;3�l��l��p����Q���y�����ٲ.&#x1a;$7���?���&#x1d;����&#x18;&#x1e;;&#x1a;\�{�&#xb;��U�:�&#xb;:e��&#x1d;r&#x1d;�:�u�� �A��\&#x7;�&#xe;r&#x1d;�:�u�� �A��\&#x7;��&#x1a;�:+��&#x1d;�&#x13;NڱHM&#x1d;a�ӝ=�&#x10;�2���eš�&#x16;ލ���ʦ8�*&#x15;���l-�#���G���&apos;&#x11;��&#x4;&#x1e;�cxx���q�&apos;��(t����JN��8&gt;�t8&#x17;n��;����!)���¨���n��&lt;�M)=DȲ�@&#x1d;&#x6;��&#xd;
��v��0&#x0;�l9&#x8;Sf;k�ʎ�3��&quot;�H�nw��U&#xd;,��&#x2;&#x19;&#x1b;��V�B{��k�&#x1d;p�Z=|ӻ&#xe;k�9q�3��&#x1;C���&#x1d;&amp;��$΄�&#x1c;�p�叛�^&quot;���&#x1b;]ן�l��x�M��}�&#xe;n�\&#x1c;�խ�?j�Px�o�&#x12;���O�Z�@�l*����[�0)q&#xc;.�Ʌ��CJb���ұ}��z&#x11;���&#x8;&#x11;&#x11;&quot;&quot;DD��&#x10;&#x11;!&quot;BD��&#x8;&#x11;&#x11;&quot;&quot;DD��&#x10;&#x11;!&quot;BD��h&#x18;�hۑش����&#xf;�����S�7�:bL�p���0ulr����7L&#x1d;?|�&#x1b;N^��c�ޒ���&#x15;K&#x19;��&#xd;+m&#x9a;j�+#&#x1b;Y&#x3;�ҨA�mqSo[3&#x7f;��ӯ�Nʢ�Y����� }�&#x19;&#x1f;����U�5&#x19;NW�V��&#x12;����V�d&#xc;��=8&#x5;�Dݮ}J���X&#x7;z&#x1e;,&#x3;�e&#xd;�e�~G�=&#x12;�Wl�^&#x4;�J V&apos;&#xd;
(N���o~�1L�6&#x1a;$�[�K��[�$�&apos;&#x5;��=�a��~�n6G&#x11;� �A��P&#x7;�&#xe;B&#x1d;�:&#x8;u&#x10;� �A��P&#x7;�&#xe;B&#x1d;�:&#x8;u&#x10;��c4�Tj6�&#xf;���&#x1b;�H6&#xf;�$[|2���5����7&gt;&#x16;&#x1b;��&#x13;��&#xb;3�1&#x5;��&#x5;7�;^k�2�k�z�@5��$�B&amp;4�L(��h&#x5;j�&#x19;&#x10;�&#x14;&#x1e;o͊z���ʐ�ɶ�B�hK&apos;&#x1b;�Ճ�E.;�ucBH&amp;}�&#x11;O�a&#x6;&#x1a;T8�&#x11;�`9�&#x16;w�4�\�v.�&#x4;&#x11;&amp;T�i&#x1b;���+��1&#x6;�J�gn&gt;��&gt;6&#x11;Vy��Sw�&#x1;��9�F �jO���ZS���Se��j&#x7f;&#x10;&#x5;��;=٪V&#x1a9d;��z&#xf;dN�2h&#xf;��Ɛ�zE�����zm���:��M:�.�&#x1f;K.�w6&#x1e;�&apos;g���&#xc;���̯쫊�P5mX�&#x19;�řS.��ny\&#x8b;N�ڟ;�9����&#x3;Bֺ�wY�P��&#x1d;s���T�oo&#x7f;��@&#xd;U&#x11;P�j��Σ�&#xb;3�&#x1a;�tU�&#x1b;Z�Dvg�$�㭸�u~��=#�&#xb;�{�凾��W&#x10;o�&#x4;&#x7bc;&#xb;&#x3;�V$P��h�s@���5&#x1;#��&#x3;�&#x0;h��=lZ�-���Ą��z&#x18;��L&#x17;�.2]d��t��&quot;�E��L&#x17;�.2]d��t��&quot;�E���z&#x18;��P&#x16;&#x3;���.K�^nS�W�s�K�¬��&#x1;��ex�z�n���-&#x7f;p&#x1e;nʅ &#x7;A&#xe;�&#x1c;&#x4;9&#x8;r&#x10;� �A�� &#x7;A&#xe;�&#x1c;&#x4;9&#x8;r&#x10;� �A���y��2&#x13;&#xb;���.�&apos;j3a0&#xf;��&#xc;�Ӎ�b:����X�i;�#�&#x19;1^��u����NK�*�&#x19;KV����O?����&#x1a;��H&#x10;�g�&#x17;��&#x1e;�&#x1b;ޅ�&#xd;&#x11;� @A��&#x0;&#x5;&#x1;&#xd;
&#x2;&#x14;&#x4;(&#x8;P&#x10;� @A��&#x0;&#x5;&#x1;&#xd;
&#x2;&#x14;&#x4;(&#x8;P&#x10;��7@�0�!f7\M`fd�&#x1b;�&amp;�QN&#x4;DJ�!��.a�J&#x2;����Թp�1�&#x5;�&#x7;�K\�&#x5c8;ɸ&#xf;�+\B&#xd;]ڰ�1=�0�����`vC�n8��&#xd;������0 l4��O�&#x17;&#x10;��&#xb;KY��&#x1f;�&#x13;eg�Z&#x16;�G�(&#x14;u&#x18;;�D�9&#x7f;�C�M�%TwT������\�T&#x8;?&#x2;�П�n�驞�l�&gt;��g3��J}�S��a&#x12;���&#xf;d�)&#xc;KqY#p|GeD�-� �d9ĵ-�HA&#x1d;_�Z���6rY��e��&quot;�E.�\&#x16;�,rY��e��&quot;�E.�\&#x16;�,r���eW.�m�1�d�5Yds�|3�&#xd;���J3&#x7;�̷��&#x16;�W31n)ۖ2m)�Vڰ5�&#x18;+�^k$�K���&#x3;]����`MqӤza�2&#x16;��@����l&#xb;��dx�8Z=0�&#x14;�.|��&#x1d;^&#x18;�ݑ4�&gt;��-�$��&#x2;ϝ���`��7z��&#x5;�)&#x8;��p&#x12;��&#x4;�Ҁh҃&#x17;�p��ޒP�&#x1d;7V������G&#x5;�.K:�?��O��O �&#x1a;	�u���ׁu&#x12;ܷ�h�&#xb;�F&#x6;R#�FH��&#x1a;!5Bj��&#x8;�&#x11;R#�FH��&#x1a;!5Bj��&#x8;�&#x11;R��M��&#x15;N�h��=G&#x4;�P	a�&#x11;V�&#x11;��Z��Bl&amp;&#x17;���1M2X?x&#xe;&lt;�&apos;�	z&#xe;�Ẅeq��&gt;,f��&#xb;m�3�@�&#x1b;��&#x1f;#�F r��zL���Ӊ����f�Φ���&#xc;&#xc;&#x13;���D#Vv62�uW��V:i&#x19;�1rÉ&#x1b;��L�?��&gt;�8g4p�&#xb;��9&apos;��3&gt;�l� p_��l&#x7;&#x3;5N�s�f�&#xc;��&gt;_�����և�Mw�Phہ:�Iu�v\�qn�&#x0;H�E�A�&#x1b;�* �#��{�&#x1f;	��gB���&#x16;�D�oz�&#x1;w�9h�&#x1f;�a˱�9��;8���&#x3;�~�8h&#x1c;��Ļ�&gt;�d&#x7f;6�	^�)6&#xd;ˍ�vps&#x12;�5�����&#x7f;	NW�&apos;k�z�J6�CZ�&#x1e;�DmrI�.�DmsI��\�&quot;-&#x17;�&#x16;&quot;-DZ��&#x10;i!�B��H&#xb;�&#x16;&quot;-DZ��&#x10;i!�B��H&#xb;��0�ֶ#�iM���&#x1f;:��S���o&lt;uĘ���a�a�����S�o�:~��M7��n]FN�&#xc;�-�&#x19;KY��&#x11;Kٰ�&amp;����2��5�}�&#x1a;�ʄ.��ɋO��;&#x1b;���X� $�&#x19;&#x1f;����U�5&#x19;NW�V&#x13;d&#x2;��U�:���=�&#x1a;���)8%�v�S�m&#x14;�:��`&#x19;�`l5�&amp;������/!�&#x1a;&#xd;��&#x18;�&amp;-ol҅�4�#�A�� &#x7;A&#xe;�&#x1c;&#x4;9&#x8;r&#x10;� �A�� &#x7;A&#xe;�&#x1c;&#x4;9&#x8;r&#x10;� �YݱI+�e&#xe;.�&#xf;X�����A*��vxR�&#x1c; �&#x19;5XsށJ&#x5cd;Y��.w&#x18;a�(&amp;��3&#x8;&#x13;�$�N9f %��6&#x6;K3�}&#xb;*��&#x1;�śG\&#x1d;�@�%&#x5;��4&#x1d;ܨkt��&quot; ��h��v�ƦʶF�����ٍ���ͦ�E=2uw���&lt;��U&#x1b;�Y&#x15;�r���}����5&#x12;�� &gt;߸zh����&#x11;�-&#x7;�kM�����&#x13;u&#x11;@��9�Z���O�B�&#xf;��o~c���U���&#x7;�����+�~���e�6�&#x8;:�~�6&#x16;4OB����&#xe;a&#x1c;h�����F&#x13;�&#x12;�%�KH��.!]B��t	�&#x12;�%�KH��.!]B��t	��0��U&#x13;�B6�&#xb;�6&#x12;umC+G��&#x15;�O{��ێ��Z}~r.&lt;#�;&#x0;5�������ve���m�H�V&#x1b;]�T�=E&#x13;n����&#x11;V��+�]&#x13;�Βs��7��&#x11;�Ԃ3&#x1d;���&#x1e;���A;��s&#x7f;�_��o_�`��@7&#xf;&#xd;/X�&#x17;�N.��زP�=*}��g6aK猋6��猫lnc&#x1f;�&#xc;����&#x18;���F�3M}6S���g;��&#x19;b��s�^ڟ&#x19;���-َH6r!�Bȅ�&#xb;!&#x17;B.�\&#x8;�&#x10;r!�Bȅ�&#xb;!&#x17;B.�\&#x8;�&#x10;r!�:�0�5�&#x2;%2�u�&#x19;�&#x6;�v���A3�-��Ř�,����k�Ā�&lt;iyx��&#x13;p&#x17;�)n�&#xc;/�Y��-c�-O�.9&#x19;�3&#x19;�.�V&#xf;�7EC��NG�MD7�&#xd;
�Ƞ�&#x0;�ڑ4�&gt;&#x6;�-�$�沒�����`��W�	θ&#x16;��O,&#xb;&#x7b6;��t�@&apos;��$&#x1a;H��&#x1c;{Ip&#x5ce;&#x1b;�~�`&#x0;�M�����V�o&lt;����&#x18;O��w��w��$c�)&#x18;�=]�d�&gt;L�L&#x6;��&#xc;WhҸ &#x8;�!]�Ǆ&#x19;�6ј&#xf;M��6t:W&#x10;O�=�f&#xe;�4����Cc�ش�&#xd;m&#x14;��Ol�r�Eq.cB?`h����!&#xb;��s&#x18;Z��&#x3;&#x1a;��&#xe;:����&#x0;�&#xe;���&#x1b;�ƹ�_����&apos;�t��û��&#x10;�tE@\�B��=Fu�Y�5*�&#xf;�&#x16;O�)&#x10;�:��2&apos;0�h�[$վE�ԉ�&#x1d;=0&#x2;CXTV�&#x14;%�e���463&#x5;�]}~j��YTύ� &#x19;q�Ţ33SB���&amp;�n�ۣ=��C��P[b.lK&#x4;��2/�	@&#x7f;�&#xd;�&#x5;�4&#x17;���rI��fwS���CU5�]:&#x1e;�m�u&#x11;Ϣ���6g�+�v��x��&#x6;���y&amp;ˈk�=^;.��B7��Oh5OOəڭ�&#x3;��RɃ@y�&#x1e;6秚j&#x1c;�h|�P����ۣ����o�=�3�Q�U��T|K~tY����V�3G]�&gt;&#x16;?�L��j?v|�A�oՔ&#x1a;ʘ��n&#x0;&#x13;�+5C�T���d�&lt;���v�c���&#x7;��&#x10;�&#x1a;8��}&#x1d;�P	S�i�&#x14;Z��q=��&apos;`,&#xf;&#x2;��&#xd;
��T#��dk&amp;&#x19;��F�f&#x1b;�HniOi�T&#x7;�~Y�&#x1c;��ݮ&#x1d;��i�s&#x52d;�p�t�9&#x5f8;vll�&#x6;��2��P�h㺷&#x4;�ٱR����&#x7;`��SM���&#xd;G&#xf;U��&#xb;��z�&apos;��F�&gt;��/f&#xe;�&quot;iZ��MI����/#�2��zs��&amp;�+`%d&#x12;]&apos;�sJ7�5赦� �;�/&#x5;:�\_I&apos;����ѹ���z��T�v�f�&#x1;�U�Q�&#x13;�&#x1;4n���A�r�M�ǦX&#xc;Χn���)x��ʻ��]Y$&#x11;=MW�H��w&#x12;�&#x3;]�R�sgt|��,��v+O&#x1a;���&#x14;&#x1;�Wٯ�&#x2;��ĔPc`w؉��|{@��&#x17;�&#x1;v�3y4vG�&#x18;nd��\�B&#x15;�&#xd;
I���,�-��s4�&#xe;8�h�FG��&#xe;&#x17;=&lt;WO|�*�E�R�M�gݦ��H�j&#x2;���~��3�z�+������]&#x15;��&#x1e;%���:�&#x16;S�z&#x18;&#x1e;�m&#x10;&#x18;�n#�&#xd;
&#x1f;N�&#x1c;�&#x2;c�[����L&#xb;�3V��/S?Ј��)&#x1f;F�&#x1f;�;&lt;��ԡ�lo�,&#x1e;�U�.U�&#xd;
�n	��Ѥ�l����`�Q�B��p�še�zk�\�Ca3&#x1c;�f�&lt;6A&#x11;4�&#x2;���Q�o5�=�2Ю՝��S��\&#x1c;t�*��[&#x10;ܓ��5a�&#x3;�i}&#x1e;.�k�r�&#x8;�u&#xc;8��5�۾�j���&#x7;�&#x15;��e��dS�t��]i&#x1b;&#x6;�e�pA&#x3;��ʎd�k7���1]&#x14;��LQ�Рh3�&#x18;j��o&#x1f;����㳼rqԾ`��5���/\4�z8&#x17;�����&#x11;m&#x19;&#x18;n��`Ѹ5j��Kؕm��m�^�������&#x1b;�#&#x1c;k�7�1,�&#x8;�Qe;\#j�0&#xc;�W�x&#x12;&#xf;�I*Yx��L~u&quot;��*#�h�R�6(h���۰&#x1c;�&amp;���F(�&#x12;ó|߀A�i�1�K$c�f���&#x1b;�-�15a&#x2;�j�\	�hv�Y�&#x94;3/����Ϩ&amp;s1Uj[ek&#x3;��vs�mEUl&#x1;�1h&#x4;�iY�&#x17;, �u,e��&#x1;��&#x4;5��+�&#x3;&#x7f;&#x1c;U��f���k�&#x1a;;�t&#x1f;�v&#x1c;ʹ@�3&#x5;4A&#x1d;�oߢ�&#x4;z�r�RΙ�Q&apos;�H)qY���&#x7f;��&#x3;�A�b�t��&#xd;O��7+�S8�P-&#x1c;:��tx&#x12;&amp;��=JtO&#xd;
�	SH)�-i���%����9���aJNu��(��	�Q�CQF�Em�C����������������~����&#x6;���A�v�0�E%YRCq�����H:�x�{�c���9&#x6;o�&#x16;1&#x1;����F(�u��i�5��o�&#xf;��|��&#xf;N��M&gt;x�&#xf;��|0�&#xf;m�X�}�R��ݕ��_�S&#x16;���5wשo������+&#x11;;T�e��۟�k&#x1f;��M�:;�g��C&#x1e;�M&#x4;-Uo&#x13;J[|a�����k�7_#�5���w]Ӽ��k���0q͛��A&#x1e;�&#x11;�وDf���x��c&#x19;�ᴂ&#x5;eZ�&#x17;���f����Œ���de����&#xc;&#x13;I&apos;&#x16;ԋ/���|5/�&#x11;�g�ܶ�Hxf��y��&#x5;��&#x16;�ާ�.&#x16;y�5,�;T�,-�{I#/���Y,����&#xb;��_�&#xb;�j�.�{��&#x5;�^,߭�[C}���U��f�R��]����[譨�n�*&#xd;
�Uk�-X0J�^�ʷnm���1�X�&#xb;˧����w�s&#xb;�gVo&#x1e;pI]�&#x7;�[����&#x1d;On=[��n�&quot;p��G�͋�&#xb;��&#xf;��&#xe;=&quot;vmV��v}��%��&#xc;�T�c&#x17;��Z�&#x1d;�w&#x4;&#x7;&#x19;{!��wso�&#x18;�&#x1;�r��܂R���VQW*����L�(Ppe�n���&#xd;��sRN�&#x13;{l~~A���Y(&#x5;w�&amp;�H�L�դ���A&lt;i ��f%&#x5;&#x13;t�&#xd;
��Q�&#x16;�vU�&#x1d;&#xd;
�iTf��bQ�ݿ��F&#x1a;��&#xd;
�ޅPg�t��z�u&#x16;&#x16;���&#x8d;6,y�&apos;u����7���̧���zt9%x����F&#xd;N&#x17;�4,��Mo���l&amp;����h�$��Y,��6�~b�[�������Q���tMQbPdA1f�%&gt;�&#x1c;⺦�&lt;�&#x1c;���������sϠN�l:�=k���d&#x16;hp�;��]�l��Èrd��J��)r����d&#x10;�0d&#x1a;�9�&#x13;��%�-&#x1e;&#x10;Ϸ�$&#x1e;�&#x1a;y�q6�&#x1b;&amp;gS~2�8��&quot;g&#x1b;=�V�&#x3; gCΖ7Ŗj:+d�}9o�}9o�}9c�}�&#x7;&#x1f;_ŜMh��s!��G�&#x1b;˄�a�DX&quot;���j�1G����Տ/����y��&#xe;hx�	�)a&#x5;���N���&#x4;�&#x1d;��%8�C?��&#x1e;��[&gt;��5��8&#x5;UA1(ݲ�Z:W)�-x&#x12;�78���sV&#x1d;gc�KM[&#xf;�N9�f�W&#xf;&#x5;�9x:�ڸ����b���������Ӄ�S�݇�&#xd;9[��z��&#x17;�٬�&#x17;�p6��i2���H��&#x15;�d8[�H��eE&#x16;�lV_.W�ٲ򅜭X$����j1&gt;�Γ�e�&#xb;9[�H�����b�V�.{�� �V�&#x16;Ϋ�Ҝ��&#x16;2��Z��&#x15;�d8[Vda��_���&#x15;�B��&#x15;\r0g+�f���&#x11;Is��H﨔�l}DҜ�X$�ْN5����Is��2]�f��l�dҜ-�Q&#x1;��9[_�&#xc;g�I��l����l��Ҝ�+��&#x1c;Ҝ��T��e�&#x16;�l]�&#x4;&#x4;&#x16;q6�#)���&#x2;�F��-����{�[2�悊iR��N5JL&#xd;�Ӄ�6�&lt;O��`�#d	���?��&apos;_�&#xd;
*�˥&#x18;&#x7f;vM)�Rx��V�1_&apos;��}�&#x1b;�#\y�&#xb;�ϴ��S�]�&#x8;&#x4;� q�ƈ����R&#x12;&#xd;
&#x7f;&#x2;��&#x5;��J)Ư�&#x15;�W��&#x19;���&#x17;�y&#x11;&#x15;�W��y&#x15;(ƺ���p&#x7;�&gt;&#x17;-r@&#x1d;�&#x18;�&#x15;�9�&#xe;R��E�&#x1c;PK+��&#x1d;V&#x7;:�&#xe;R�����|ܖ�&#x1;�w�Z��Z���qj,퀺�2�s@-��ފZ�&#x16;�x��v@�&quot;&#x7;�^&#xf;�&#x2;&#x7;T;� �&#xe;��&#x2;&#xf;��Z ?�&#x1;��A�ש��;q&#x19;&#x1c;Ps�R�&#x7;jN��&#x5;�W��&#x7;���5�Z���y��&#xf;j�n��A�)�AUy�&#x16;�A�I&#x15;��v���&#x7;5&#x7f;�&quot;&#x1f;ԼT�&#xf;jN��&#x7;5&apos;U�&#x1a;I��AUY�&#x7;�ƞ���r�Ɵz,Z�.�n��&#xb;�ψFmI���ĵ&#xc;�P�Z�Om_�et�;���ￌ����&#x7f;��tcGw-�@&#x1c;��&#x8;Mɉ�xІ�@�i�&#x8;z�N��n�k��&#xd;���&lt;��f&#x11;��&#x14;:��z*a&#x1f;��J����{&#x4;}+�&#x11;���G�s_�.��&#x8;�c5�w!6&#x14;ݸ���n�&#xd;
tc&#xc;�&#x1c;^p&amp;�ƋӍ�-8�, ؽ�qN�@1.��)�n�&#x8;Z�&#x18;�d&#xd;
�3�&#x1e;&#x1c;^&#x1c;��+U&#x1c;��H�Opf�ʅ��9���L��b��*&#xe;�4�K1�� Ř�E��E�1&#x6;g.Z1~��]2�X�&#x1c;GڦA@&#x1;a�-2n��&#x12;��R#l�&#x1a;&#x1c;���?����#����&#xf;���Lͧ�&#x17;s�1�&#x2;�8��C&#x5;1�	&#x3;�/l��&#x18;��~�3�&#x11;h�#)�&#x16;�#S7(�aH�&#x16;�pir�-����Lx�!&#x6;gZN��L�ZM����&#xb;�,�&#x1;08&#x13;�3��RMg�L�&#xf;�M�&#xf;�M�&#xf;dL������88Sz��&#x1c;S&#x12;��z&#x1a;&#x16;��&apos;N���&lt;�u�`&quot;&#x18;���G��&#x7f;���V�]�i&#x8;�j-�y&amp;,�u��uǃqT&#x7;�b�:���?���#b[6u�kJ����&quot;M&quot;`����^�I&#x2;������:=T&apos;֏:A�P&#x1b;�*0�U;P��1�&#x11;�&#xd;
�2}�s��)u&#x2;&amp;&#x1b;cH�&#x4;UJ���P&apos;bI����&#x13;�:&#x0;�&#x13;�N�ՉRMg�ԉ{��:�)�&#x1b;&#x1a;&#x14;�ԉ�~&quot;�ٱ��	Fa�&#x5;&#x1a;�3Q&#x12;tj&#x13;&#xf;V�&#x4;�F��Z`Q�&#x1f;1u��&#x1f;?����	Km�&#xd;
]�XԶ@އ�h�&#x1a;�&#xd;
=�f�t;�J��a����)�^Sn{��G�6��QN��J�V�J�V�J�V�|&amp;�&#x17;���6m8n{���f���§ɸ��&#x15;��&#x15;�d���E2n{Y������t���&#x17;��&#x15;�d����j�7�y�n{Y�B��b���^�_-v�+y���f��^�[譨�!mY�B�=sa��b���^Vda�����n{ŷ�q�+��`���kf���������^���_H&amp;��G&amp;㹗�&#xc;&#xd;
i�&apos;����/���k�&#x18;���z���I{�%2��zZa�s�#ek�W�[G]�&#x12;�{������/����+����+����H-��&#x15;O&#x6;�B�=�,�ܳ&#xd;
&lt;�&#xc;��[��^;��x�J���n��myu�Gהn\���6�x�&#xd;���&#xd;���&#xd;��e&#xc;�?�&#x4;��aH[;��@vѺq�EQ7^	ݘ��nܫj&#x14;��4&#x7f;���͂_&#x1d;uݸtH[�-&#x14;�ƃ�&#x16;�&#x14;�ƥ�Q�&#xb;t�AyP&#xb;.YJ7&#x1e;�&#x7;��H�n&lt;(&#xf;j&#x1f;�&#x2;�xP&#x1e;�&#x1;JxN1&#x1e;�&#x7;��L^1&#x1e;�&#x7;��L�b�|:&#x16;V��RE�qW��b\p�&#x2;Ÿ@�@1&#x6;�ޚ+P��RE�q,UZ1V~��&#x15;c��&#x1c;���\�q&#x1b;&#xd;/�~�eH�@&#x1f;ԗ&gt;��&#x1f;`&#xd;
��Ӊ&#x1f;YS&gt;���&#x16;s5J�F&#x3;P&#x1f;y@&#x18;ut�k^�M�X��胺~|P-&#xd;
ʿ&#xc;8ѥT���`	I�!A��m��ƚ�A5&#xc;�&#x1c;�&#xf;���A�1�m&#x4;}PKu&#x0;�AE&#x1f;Լ)�T�Y!S�c��ۏ�3o?�ɼ}緿��}P%�}əIL&#xf;�F�E9�m����v4j&#x7;��&#x5;#����~g�&gt;��%4��5&quot;�G�7�G\J]&#x12;8T&#x7;5�e���l���#�S,�N��5��J�&#x14;������&#x1d;9ۺ�l�V�a�7�{Q�o�?g[��&#x6;Ks��|!g��&#x6;��&#x2;�78��#��`�V��`&gt;�c~�������&#xd;�^^�w���L�~�No&#x13;,�o�W�x�A�,x�&#xb;�7��r�~�9���&#x6;�R�&#xd;�J&#x15;�7��~���&#x16;�`&#x17;�7H��-&#x5;gk��K��JY&#x3;&#x6;r�G?�8n���:�ck����N&#x1;9ۺ�l�v�XS����Ps��ҹ^l�l���Ju&#x0;�l��V�.&gt;O��&#x1;&lt;�O&#x7;�t&amp;&#x1d;��_[&#x379;^J%e&#x1f;-���Q�&#x8;u�&#x1b;��&#x1c;X��&lt;r۳%aL����@�&amp;7t_��l/&gt;����b��e�)&#x1e;XS��1&#x2;ˠp�&#x3;���J�e���4)�&#x12;^���8&#x1b;�9T�n�z�[Ĥ&#x1;(J�	-&#x16;�;�`&#x12;�%g�&#x6;�&#xf;�&#x7;�&#xf;�&#x7;�&#xf;d&#x6;�&#x17;&#x1f;�&#xf;s� g�Ӳ�&amp;(&#x18;J����b&lt;�Jĳa����g�\/&#x3;��J�z�M&#x5;�lyh�&#xb;��&#x11;)�g+��\&lt;[�3�:gA&#x12;�\&lt;[o&#xf;+�g�)L��&#xd;ڢ��Tq�&#x17;��&#x16;m��\��%&apos;U��%7&#x3;&#x15;&amp;z�*N���ڢ�+&gt;p�6&#xd;�h[6���}�-]�&#x17;�3��&amp;,5Ɉ�qA&#x18;,�	�$,�&#x1d;ۣ�L��{�z��&#x7f;�UT��K1���R��-\�Ԡ�:p��,N\�A�۾	�&#x18;*�0W�b�&#x1d;&#x13;�ݤDz��)&#x2;&#x7;z�	ھoj�c0*9_)���|����^��$z��/?�&#x12;*�#�&#x4;U��/�&#x18;��I)�)�&#x5;&#x14;�$�e�K+�Y�&#x12;{���&#x17;-ڻ�WY,ػ&lt;/�ۻ���&#xd;
�./P9{7S^H�콤��&#x1f;�w�������F�.{�G.�Uܻ|&#x18;{��N���/T�q��&#x1;�q���u#/ӻyyN�`��^����s&gt;�&#x5;ۗ&#x17;���//�/�ݾ|`&#x12;�~2&#x5;ۗS�)�}y^�h��T���&#xb;�\�}y�T��� Ub��T���T���A|�n&#xc;GQ7^6���?�V�K�&#x1b;â1�$wH�j��iV@&lt;�:�o�&#x1a;��&#xe;k��&gt;�&#x7f;�?~�&#x7;胺lj��֔&#xf;*&#x15;&#x16;�8�W&#x1e;i���&#x13;�&#x1d;�x�4&#x3;əg{胺�|P�F���4&#x18;-}�&#x1e;\N&lt;Am&#x2;�۴��jZ ֘&#xf;�6T&#x1f;T��&#xf;�i�&#xf;������&#x0;胊&gt;�&#x5;��2Mg����ͻ)�7��ެ&#xf;��&lt;��}P&#xd;�����w�h&#x16;1&#x3;&#x17;�E��&#x11;h�&#x2;�F\&#x18;�&#x1e;1&#x1f;ԧ���/�&#x7;��&#xe;w|��oF��M���)3=C2�eP[�:����&#x7;�O�O��&#x7f;M�&#x13;��� &lt;JtˆWj��&#x12;]�R&#x1b;&#x11;�&#x6;g�&#x17;x&#xe;�&#x13;�G�`�KM[&#xf;�N9�����&#x3;,��a����LO[[��&#xd;+u�q�A��V	u&quot;�tQ�&#x18;=u�T&#x7;@u&#x2;Չ�:Q�鬐:�R&gt;��K��b/e��}�t��jS&apos;\X��T�&#x12;��(15X�{PuD�&lt;�K�&#x19;��#�N��{�&#xd;
_�:�&#x5;\@3&#x13;$0&#x2;&#x6;�9�+QI&lt;Cw,�a�%�&#x5;��k��h�eT&apos;&#x1e;\S�D�h6T&apos;&#x58d;:Q*&#x10;pM�&#x13;ã&#x13;&#x19;%aau��L�#�N��&#x0;�N�:����/�N���jV&apos;J�Č�:��}�V&apos;&#xc;����!T�=��p&#x5;�&#x11;iP��LꚬL Ї������:Ų�&#x14;&#x7f;��&#x2;�4�J�QN�m�M&#x1;C�+��6iR���M&#x1d;{�&#x5;&#x2;	&#x3;&#x6;qGR�-�&#xc;S7(�_@�8\��sP�Vjp&#x7f;0?�?�&#x1f;�&#x1f;�&#xe;�?�&#x1f;3d`��8f&apos;w�ad���m����&#x6;&#x2;-]&amp;�ҁ@�	�1&#x13;}.&#x10;&#x8;3�/W&amp;��Ȑ�L��&quot;&#x5;��{D&#xd;
3�&#xf;��LQ&amp;�A;&gt;&apos;��&#x7;���O�(&#x13;=5z~�0&#x13;=�ͶQ���#u&#x1e;���W.�D��*�D��*�D��*�D&#x1f;I��DO�A��^���(&#xd;
��(��F&#x1;=���K�!Cz��&#x1c;S&#x12;�ŷR3&#x3;�N�K|��\�&#xd;&amp;�2�1�&#x2;-�b��5�&#x18;�&#xd;
&#x5;Zm��(�d�?�&#x18;�?�&#x18;�?�&#x18;?���F�x]+ƽ;&#x1d;&#xd;#ud�E1ud&#x7f;�x�RG�ޢ-+_�&#x18;&#x17;�&#x14;��,��u�:r�b\,R�:��b�_~`��A�q�%K��&#x1c;�&#x18;�&#x11;)H&#x1d;9h��&gt;&quot;&#x5;�#&#x7;mіt��T&#x1c;�ԑ&#x5;�8r�3/�K&#x1d;9p��~2ũ#{T�&gt;�#{&#xd;&#x3;ũ#�Ҋq�+&#x17;���Ze�#)*�˥&#x18;��֖D1.&#x15;ķ�b|�]&#x7f;�S�B]&gt;��SkJ1�]�&#x4;&amp;&#x13;�h&#x1d;K�&#xd;��&#xb;�N���&#x11;&#x18;¢r�)ƁC]��&#x1d;�K�S�1��&#x3;À&#x15;pPom&#x1a;&#x4;��b��&#x1b;��&#x1b;��&#x1b;3{�&#x7f;�O�&#x18;�b&#x1c;o&#x7f;л&#x10;�0��&#x19;xѢԑ�&#x14;�&quot;�ԑ�&#x14;�b��ԑ�&#x15;���&amp;&#x7;��&#x1c;�&#x18;c�Ȓ��ҥ�,�&#x18;&#x17;�BQ��A�q�HQ��Ҋq�&#x1c;�&#x5;�#&#x7;)�&#x5;�,�:r�b�G� u� b�G� q� b�t�Aĸ�LQ��A�8����q?����&#x6;uzF����y����]��y#&#xb;�\�7�@� o$H��&#x14;&#xd;
�F楊�F�R��F�x��&#xd;
&#x15;c�.�w9�\�b��?��%#��&#x8;|�`�n9�ML�&#x1;QK7��Y�o�&#x558;�&#x17;H���C_��˗O&apos;~rMEfr��l�&#x5c8;nY&#x12;�&#x1f;�&#x13;_�t�B�&#x11;�%��&#x1e;Ff���L�&lt;�&#x16;&#x1;�_6���Ӏ.&#x1e;P�&#x19;�&#xf;������Zd�7̼�T/�7�R��&#x1c;���R&#x1d;&#x0;#3123o�-�tV���w���Vq�H��-4�0]���&#x5;|b�v�#��P�Xd��?��&quot;�F*�P��G,ʠ&#x3;&#x94;K|���4&#x8;4#�(,��&#x12;�&#xd;u���)&#x1e;_S���N��8�(&#xf;�&#x1f;�&#xf;�&#x1f;�&#xf;�&#x1f;�&#xc;�we&#x6;w�l뙳���&#x1d;Jdf�&#xe;U&#x18;�ٗ�-]dfi&#x7;&#x52c;|!g+&#x16;)��,퀊���9ۺ��&#x1c;��G� 2s�&#x3;jҩ&#x6;9���)��&#x1c;䀚�&#xc;r@�&apos;S&#x18;����P&#x1c;��+U&#x1c;��H�Odf�ʅ��9���̜�Gadfo�&#x7f;qd��:����E�&#x1d;PMt@].��V&#x7f;�f&#x7f;�2ր����&#x7f;��&#x3;�A��eӉ�]S�&#xd;tG�&#x17;lb&#xd;
ЄM�I�r���&apos;&#x5;Մ��b�l뇳��aJNu��&#x0;N5��U�&#x1e;(�̢��v�^&#x6;Tk�&#x19;P�2��Œ�?�&#x8;r�R&#x1d;&#x0;9&#x1b;r��)�T�Y!S�&#x1d;yS�&#x1d;yS�&#x1d;&#x19;S���&#x7fb;�3�2���z&#x4;�&#x1;&#xf;&#x16;��%&gt;�i�&amp;T��;��#���|��Ef@u�ij�&#x17;&#x10;&#x18;4U&lt;���q_&#x10;hK�c�����`u�w?��&#x17;��$�&#x13;˥N�ŚR&apos;���Rx&#x6;���&#x11;�z�0C7�#&#x1d;Ǘ&#xe;�4f�:�~�	�p�&#x3;� �e2�&#x12;���#�ؒy~�[�I&#x7f;��&#x13;�&#x1d;�:aYe7T&#x0;I�Pa&#x14;ՉR&#x1d;&#x0;�	T&apos;&#xd;
&lt;;�4�&#x15;R&apos;&#x1e;˫&#x13;��Չ�2��C�����z�	�k��R�SnA[�&#x1c;�	&#xb;�Z��a&#x1;���`���^��&#xf;��&quot;�{�$w5a&#x10;�:��=&#x10;�&lt;�&#x4;���&#xd;
&#x15;�0&#x6;�&#x13;&#x1f;���&gt;�&#x12;z�-�:�5�N�*��RP�JUvE��ď�gS&#x19;$&#x4;�g�&#x1c;Չ��N��&#x11;&#x8;h|�&#x11;&#x1a;L��&#xd;]���P�&#x13;pf&#xb;�N&#x18;ްԉ(�G+&#x1d;&#x5;�a&#x14;�&#x8;�&#x13;�:&#x0;�&#x13;�N�ՉRMg�ԉW��=�������v�&#x1f;{�U&#x1c;&#x5;��&#xb;�ψFm�&#x12;�q�Z�F�F-ç�/�Q���S�=��( ht�ہE&lt;&#x7;�&apos;�&#xe;$�g&#x10;Ǉ�&#x1d;,�A�(�m&#xf;&#x11;���&#x14;&#xf;��(�R�b�E&#x1;����������ጭ&#x8;���*&#xd;
�KD&#x1;y%���ɤ���2&#xb;E&#x1;e$�^&#x10;�#�e�#&#xd;}&gt;�eM��/�{70&#xd;����\&#x1a;�A�����gW/HC?(�^�&#x1c;�ɝKg��4�����v&#x1a;���Â4�E�9�y苂szǇ^��L�&#x5;��r��&#xb;r��2��er��|��2��d&#xd;
3��R��{��3��&#xb;�D��ra&amp;��Ta&amp;z:(&#x10;��Tq&amp;z%u&#x1e;��́�@�l&amp;z��@�&#xd;&#x4;j&#x3;�%	&#x4;*�&#x17;&#x7;��{�z��&#x7f;�UT��K-���Bm�puS�&#x6;�h fq��&#xc;j���&apos;3T���{�&#x8;�qǄfcR&quot;���D�&#x10;�&#x1e;ᾩ�����k+�&#x1e;�&#x1d;{h����^$i��F&#xf;���&#x0;��&#x10;�&#x15;l&#xd;
Z�鬐5��z�&#x1a;�)�&#x1b;&#x1a;&#x14;���_��c/�^Ԧ&#x19;z`I���&#x6;ijV@&lt;���㙶�,�C=�&#x18;j{鏢&#xd;
_�:&#x11;x�;&gt;7�&#x11;�&#x15;����&#x11;�mu+`L�xw�gxMq�j�}�G&#x1f;z�G�����&amp;��&#x13;��`&#xd;
��&#xc;�9&#x6;&#xf;&#x18;�υi�&#x2;�O��(u]�&#x1d;&apos;�;&#xe;#�n&#x1c; &#x11;zxܱ&apos;&#xe;A����7,B&#x7f;農�&#xd;
��b&#x7f;�)&#x1a;�f�2Agt+�D\�I�&#xe;����N�&#x1a;&#xc;@{���)�	�&quot;�Ԡ�CY=�%�`���P�gÍ��i��gB���U�a���l�I&#x19;/hwM����)�&#xe;	�Z3���3Ӱ�8&#x13;n���&#x1c;���R&#x17;�������ԑS�NLiQa�w���Nݡ�gY�:�m&#x91;*�K&#x1f;qa&#x10;t�MFݧ�9b��&#x8;-j�&#x1f;{��w��&#x13;�ȗ����0&#x1b;��I#�&#xd;�v]=�ȡ�5l�̵r�ҋZ��m�&#x17;�&#x1d;&#x7f;k�U�&gt;��o��&amp;ReZ�kV��/�&#xe;������&#x16;���&#xd;x}N}ޤ&gt;�Ψkv�&#xd;
���*���&#xd;
&#x14;n����&#x14;�&#xd;�&#xb;�G��0I��jM&#x1a;}=�^eP�w��^�Y}{��&#x1f;���&#x1d;�&#x13;��%�UoZ��å��Y�^&#x15;u��&#x1e;�+�u��]h�g&#xd;ǁVl�&#x5;�;�O&#xd;
������}&#x1d;�#l�Kھ�Y���{��u���bP�t-7g8&#x14;f��&amp;�Zfje��x&#x1b;O�?�6�����&#x7;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upload-Time" elementType="Header">
                  <stringProp name="Header.name">Upload-Time</stringProp>
                  <stringProp name="Header.value">1730988311985</stringProp>
                </elementProp>
                <elementProp name="APIKey" elementType="Header">
                  <stringProp name="Header.name">APIKey</stringProp>
                  <stringProp name="Header.value">4bb4d6f7cafc4e9292f972dca2dcde42-bd019ee8-e59c-4b0f-a02c-84e72157a3ef-7485,5476d0c4a7a347909c4b8a13078d4390-f8bdcecf-243f-40f8-b7c3-b9c44a57dead-7230,faab4ead691e451eb230afc98a28e0f2-4089b390-5e4a-4a54-ac5c-6be4f2ea9321-7247</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Expect" elementType="Header">
                  <stringProp name="Header.name">Expect</stringProp>
                  <stringProp name="Header.value">100-continue</stringProp>
                </elementProp>
                <elementProp name="SDK-Version" elementType="Header">
                  <stringProp name="Header.name">SDK-Version</stringProp>
                  <stringProp name="Header.value">EVT-Windows-C++-No-3.4.276.7</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-206" enabled="true">
            <stringProp name="HTTPSampler.domain">teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/diagnostics/network?cb=1730988314045</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/v2/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Microsoft Edge&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;130&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="cache-control" elementType="Header">
                  <stringProp name="Header.name">cache-control</stringProp>
                  <stringProp name="Header.value">no-store</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-207" enabled="true">
            <stringProp name="HTTPSampler.domain">teams.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/mt/part/amer-03/beta/users/apps/usage</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="x-ms-migration" elementType="Header">
                  <stringProp name="Header.name">x-ms-migration</stringProp>
                  <stringProp name="Header.value">True</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://teams.microsoft.com/v2/worker/precompiled-web-worker-8f1dae8bc160a667.js</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="x-ms-test-user" elementType="Header">
                  <stringProp name="Header.name">x-ms-test-user</stringProp>
                  <stringProp name="Header.value">False</stringProp>
                </elementProp>
                <elementProp name="x-ms-client-version" elementType="Header">
                  <stringProp name="Header.name">x-ms-client-version</stringProp>
                  <stringProp name="Header.value">49/24100324916</stringProp>
                </elementProp>
                <elementProp name="x-ringoverride" elementType="Header">
                  <stringProp name="Header.name">x-ringoverride</stringProp>
                  <stringProp name="Header.value">general</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="clientinfo" elementType="Header">
                  <stringProp name="Header.name">clientinfo</stringProp>
                  <stringProp name="Header.value">os=windows; osVer=NT 10.0; proc=x86; lcid=en-us; deviceType=1; country=us; clientName=skypeteams; clientVer=49/24100324916; utcOffset=+05:30; timezone=Asia/Calcutta</stringProp>
                </elementProp>
                <elementProp name="x-ms-session-id" elementType="Header">
                  <stringProp name="Header.name">x-ms-session-id</stringProp>
                  <stringProp name="Header.value">undefined</stringProp>
                </elementProp>
                <elementProp name="x-client-ui-language" elementType="Header">
                  <stringProp name="Header.name">x-client-ui-language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJub25jZSI6IjVWc2xNREJCRV9YWjJBR1RTS3NGX2dwZTF0aFAwa2ZpbnZsMGM1OXViWDQiLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9.eyJhdWQiOiJodHRwczovL2FwaS5zcGFjZXMuc2t5cGUuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZmRiOTdhZWQtMjQ4OC00NzY3LWIwZWEtYTYwN2U3MjAwNmYxLyIsImlhdCI6MTczMDk2MDE4NCwibmJmIjoxNzMwOTYwMTg0LCJleHAiOjE3MzEwNDQ0OTAsImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBVlFBcS84WUFBQUFDSXFOdk5PL1FZZ0hBTEc4K25seXpIenRMYWtQeGpTRnF2UWpCVmlhN05RaTdoT0VjSXpUOEZqejNaQ092NTB0bUxxMmpoM1dqQ2FGYnFwRmdMOGwzWHQ4dVFPVHFwTlYvVFEySW8xSmIrdz0iLCJhbXIiOlsicHdkIiwicnNhIiwibWZhIl0sImFwcGlkIjoiMWZlYzhlNzgtYmNlNC00YWFmLWFiMWItNTQ1MWNjMzg3MjY0IiwiYXBwaWRhY3IiOiIwIiwiYXV0aF90aW1lIjoxNzMwODk0NTQzLCJjdHJ5IjoiSU4iLCJkZXZpY2VpZCI6IjcwNjIyNGE3LWMwYWEtNGVlNC05YTVmLTVhZTAzNDA4N2ViNSIsImZhbWlseV9uYW1lIjoiTWFsaSIsImdpdmVuX25hbWUiOiJBcmNoYW5hIiwiaWR0eXAiOiJ1c2VyIiwiaXBhZGRyIjoiMjAuMjQyLjE4NS4zOSIsIm5hbWUiOiJNYWxpLCBBcmNoYW5hIiwib2lkIjoiZmEzNjNkODctZTNhOC00Yzc5LWEzYTItNjA5ZDQ4MWRhYTFjIiwib25wcmVtX3NpZCI6IlMtMS01LTIxLTc0MzExMTM1OS0yNzQxNTk3ODY1LTI2MjM1ODkwOTUtMTI4NzM2IiwicHVpZCI6IjEwMDMyMDAzRDkyRDY5OUEiLCJwd2RfdXJsIjoiaHR0cHM6Ly9wb3J0YWwubWljcm9zb2Z0b25saW5lLmNvbS9DaGFuZ2VQYXNzd29yZC5hc3B4IiwicmgiOiIxLkFWc0E3WHE1X1lna1owZXc2cVlINXlBRzhWZjlGY3hzTEJkQnFJeURzZFZyUzc1YkFLUmJBQS4iLCJzY3AiOiJBdXRob3JpemF0aW9uLlJlYWRXcml0ZSBSZWdpb24uUmVhZFdyaXRlIHVzZXJfaW1wZXJzb25hdGlvbiIsInNpZCI6ImQ5MWYzNDUxLWY1MjYtNDZjMy1iMTFmLWM2ODZiYzg0MGU3NSIsInNpZ25pbl9zdGF0ZSI6WyJkdmNfbW5nZCIsImR2Y19jbXAiXSwic3ViIjoiLXBSU3I5V0hDT0hUVjcxOTlpb3Nlc3BSckdYUnpyYWxSWkRpejlqT2pvRSIsInRlbmFudF9jdHJ5IjoiVVMiLCJ0aWQiOiJmZGI5N2FlZC0yNDg4LTQ3NjctYjBlYS1hNjA3ZTcyMDA2ZjEiLCJ1bmlxdWVfbmFtZSI6IkFyY2hhbmEuTWFsaUBoYmZ1bGxlci5jb20iLCJ1cG4iOiJBcmNoYW5hLk1hbGlAaGJmdWxsZXIuY29tIiwidXRpIjoiWU9rTVRPYjBka21kWDQ5c1NiMjdBQSIsInZlciI6IjEuMCIsIndpZHMiOlsiYjc5ZmJmNGQtM2VmOS00Njg5LTgxNDMtNzZiMTk0ZTg1NTA5Il0sInhtc19jYyI6WyJDUDEiXSwieG1zX2lkcmVsIjoiMSAyNCIsInhtc19zc20iOiIxIn0.T21a9u1E45l0nB40c5qpbyFgnI67HfFUet9qZoW6tf-vyBA84Gyh_sQ6YGcvrE4mzXHeI4t9nyyLaZy9Aiegru84vL3DpT5Ig5JNaBE_TsMb_uVWWRZWCeiG1yqPUGr_bCi54H8t4NJFy6kuFeVVTi_U0DHeHRNGoBkfNwftfUA8o4WEddUhUvJIszAs5nkGBKD_fijaFw9j_jpo3txYEXAFF6jFBnZgwK37sNvdDL3f2eOK4SF1vymbNPGcs0ChalWHS8S1EUHG2FjHw7OrQU7LUbMtQeuAetX6jM4ez_cEaVKTCQavPkWbu_eVUTFw5U_nqwQTe4JU5kfe6hn12A</stringProp>
                </elementProp>
                <elementProp name="x-ms-client-type" elementType="Header">
                  <stringProp name="Header.name">x-ms-client-type</stringProp>
                  <stringProp name="Header.value">cdlworker</stringProp>
                </elementProp>
                <elementProp name="x-ms-client-caller" elementType="Header">
                  <stringProp name="Header.name">x-ms-client-caller</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="x-ms-request-id" elementType="Header">
                  <stringProp name="Header.name">x-ms-request-id</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0 Teams/24277.3507.3205.5228/49</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-208" enabled="true">
            <stringProp name="HTTPSampler.domain">teams.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�}&#xb;�&#x1d;�Y�#˶dK�l�����&#x8;T\�&#x19;���k�-&#x18;�&#x15;-�%$9^��[��O�ښ�wt&#x1f;�e�*��]&#x1c;�Q��&#x5;S��&#x8;&#x5;	I&#x8;&#x5;&#x14;[�e��.!��q%N*%��\N�&#x2;�5�&#x18;[�&amp;�&#x7f;����&gt;}o�sgtu�O���_�&gt;}��y|���&#x7f;�;�Y�лNvX�˼^�n��l��&#x7f;�]�K&#xf;�-];���&#x7f;��~������&#x1f;�Ӟ&#xb;&#x18;s)g�騜&#x1a;*w5]a���L��&#x12;h_����&#xb;��n&#xd;
w&#x1f;	�N��&#xe;z3{۝�v�E�&#x7f;h���N��&#x16;g�0�T��&#xb;�m�Ըp��M�~��3&#x1c;ƩGM�0�&amp;��&amp;q&#x3;�&#x13;Gq&#x1d;�d��(��w@������&gt;�=�k/7.ܱuӇ�K�~|���*��f�j�&#x9d;[7}���.�E&#xf;�&apos;[nըfY����?�b�&#x1a;�f���+�ƅ&#x7f;&#xe;&#x19;���&#x12;��&#xe;���&#x1e;h�n�ϵ&#x1a;&#x17;f�n��{���$I�C��}7ٿ�&#x4;�gmHkV=�n��y��{&#x1f;�O7&#x1c;B��&#xd;
�o�y���h{&#x1d;�&gt;j&#x1b;������л�+�c�&#xf;&#x10;�}&#x1f;��=O�S�&#xf;&#x10;k�1�&#x7f;�&gt;�V�k�&#xb;�&#xb;���nŘӕƅ�R��&#x7f;���za���&#x3;[7�&#x1b;��o�_^&gt;�&#xd;
ڳ{&#x17;C8s��z&lt;��p��p�&#x15;�̳��K��&lt;���-Kla��m�98���GzKl����V�&#x1b;nR&#x1b;ۅ��۲Ciɿ�w��RCi�6Vr��u6촡L!�;m&#x7f;�����&#xf;Aڿ}�1�����)�&amp;{uB�I&#xe;X�V&#x1d;ဦh&#xd;
�Ċ&#x7f;;��&#x1a;d�J���mh� &#x1a;�S45��Yс��A&#x1d;[��vz�*�c��䩮Qń&#xb;T39�E�S�+�$4S��$��&#x0;�g��{h&#x1a;�!&#x13;Y&#xe;UU��&#x19;�7�~���&#xe;��3&#x1b;��|���&#x13;&#x1a;�&apos;��IzԆ����&#x61d;+���ExI��(��&#x18;9&#x1e;��2&#x1d;x&#xc;&#x12;=&#x7;�VmӁ\8&#x16;Q��k�+y&#x7;����gK&lt;���Pk�9�&#x12;/�-��&#x19;�0k-��&#x2;&#xf;��-��6n&#x1d;�跼S�Z����x�E��&#x1c;���7��=�D�V�&#xb;�n�^���&#x16;W��#;|?;&#x1b;.�-E��&#xf;�c������ �M���;���KK��7&#x17;�&#x19;i����[Ͱ�t�wz�&#x3;��o���AN��s����#��h&#x10;D�&#xd;��h�w48�i{)`&#x7f;�A&#x13;�&#xf;&gt;�c��&#x17;�;K���&#x1a;�4����&#xe;���N=��&#x13;li&#x19;R]&#x0;Ȼ�Ek\q&#x19;1�k�k�&#x16;q\�&#x13;fq�k��)��x� ��ǻ��&#xe;4�=���&#x1d;&#x1e;��a�6n�&#x10;ǣw&#x3;?�on;u�ը�(Pe&#x1d;�&#x1c;&#x0;O,�K&#x1e;&#x14;~&#x6;�&#x5;���ά:����U�7vd��v&#x15;&#x0;��s����{�&#x1f;�M{��I�&#x1;Y�*���&lt;8t���ŐDov�=���&#x5fc;݊�&#x1b;�l��/�غ���{쁙&#x1f;��fm��{&#x1f;&#x19;\}b�s&#x1f;&#x12;|���m��������:�&#x18;�N\�7s&#x7f;�7�,��&#x1e;�&amp;U�;&#x7;�:���xg&#xe;	�&#x11;J�Z��C�ߒ�&#x1c;�B�=&#xd;���^�υSG�&#x7;�R�x&gt;̺�ƭ��,&#x3;��)�&#x14;&apos;z�A.�&#x7f;&#xf;��&lt;�d��&#x16;��v�&lt;���&#x7f;��&#x7f;Hx���{O�V�/&#xd;
����C�l�.&#x1f;?q�&#x1f;�:v��&#x7;��l�����ǎ&#x1f;:���c�Y�&#x0;�������`�6&#x9f;&#x18;t���n��&#x1c;�-�wf�u����3��Ӎ�&#xe;�T&quot;���[&#x1a;7f������&#xc;eh4���O&#x6;Ju6�ެ�&#x5;L�&#xd;�Z6��&#xb;��&#x13;&#x4;�&#xe;T۶-��Ѹ#��$��&#xd;�u��mCm|���&apos;��$o�Vo�Ē��u&quot;|���&#xb;Q�ո)�ȓ��$[&#x8;g��&#x7f;d�Ѓ{&#x7f;���&#x17;&#x1e;8�&#xf;�&apos;��&#x7;�&#x1e;=��&#x1c;9��s�&#x1e;~�܏.s������п�ӸY��X�&#x11;&#xe;&#xe;�����[:�N�9���&#x7;���{&apos;�&#x3;~�#ι�ڇu�&#x13;�&#x7;O&#x5;�6&#x7f;�=�cZ&#x17;Rݶ�ġ|zB����ƭ�3P&#x1;Z]&#x1e;&#xd;&#x5;&#x1a;;V�&#x1e;�&#xb;Q&#x5;�&#xc;�Q&apos;��Q�	�[�-�a��;V��&#x14;`z�;�&#x1f;}0w����&#x12;��c1h�4jÐ�2-�*�&#x11;f*&#x16;��M1&#x3;�q�ʅ�&#x1f;��&#x1;2�-�����e{�&#xc;&gt;��d8�ؚ�Y{ѹ]�&#x16;g�&#x12;�&#x6;c��6����~�m�[��G?9q&#x1d;�hEmƶ�x��&#x5;�B&#x5;�&#x18;�l�R���~7�a&#x19;��Lt&#x0;�&#x1;�B�&#xb;�&#x11;��&#x2;&#x16;F��v8�&#x6;l&apos;&#x1d;���~g&#x1d;�M�Hw�b�مPP:�&#x19;S`8�&#x18;�CAq&#xe;ed�D�&#x15;��L�k�&#x1c;]�_�5�;��S�����Ӽ���iw�B&#x13;&#x1b;�Ё8&#xf;3���&#x2;��$��L/���77s�w���x\&#x16;�s3�ö�X&#xd;
��,i(�&#x0;&#x12;�e�&#x1a;r�ú�&#x7;&#x16;7mKs&#x1c;�.�W5�V&#xd;G�&#xc;��&#xd;�ۖ��&#xc;&#x6;&#x1d;�&#x1d;���&#x7;��m�3�i�����@s�=&#xc;&#xf;����&#xf;���n&#x7f;)9t&#x1d;4&#x11;�p�ï��?&#x7f;�&#x7f;_�&#x1b;��(��&amp;�q&#x3;�ڪ�&#x16;D&#x5;&#x7f;*&#x1a;9x���&#x1d;��&#xc;���s����&#x15;��Р&amp;�&#x7f;�����mKPx�։&gt;�&#x1;��!�&#xb;�&#x16;[T�n�&#x6;���~�M���!4&quot;���r#��&#x1d;K,l%u4y՛���\R�i��������P��&#x1b;&#x1d;ݕ&#x1c;�FG�l��OF=̍K�1��i&#x15;o�3?=&#x1e;7�ѹ�+�����p�&#x14;\u��@�m�S�?T-�C����?��&#xf;=;�&apos;G���&#xf;4nZI&#x1f;�&#x6;~x&#xb;T�٥�&#x19;�M�O�3̾vT*�n&#x11;��mܜ�&#x6;uv�f*��&#x19;�?̽~�n&#xe;,�υ���S{|�gN�g&#xf;&#xf;����O�����&lt;r��=���~��^7F,��&gt;pO&#x2;��Fpv�����&#xd;
&#x10;�&#x8;�&#x7;~&#x19;&#x2;�&#x1a;Eๅ&#x5;)P��O&#x19;&#x1b;H����[&#x8;3 &#x1d;���j�[e�&#x0;�Ϝ~x$$&lt;=&#x1c;B�h�$S&quot;��Z�C����&#x7f;����A&#x1;���j&gt;�=9&gt;W&#x1c;�F@���G�U�e���\v��A��Bu&#x14;��b����s���x�a&#x5;5&quot;&#xb;�WP��ó`@�S�QF�v+�!�zi\f�4���C�&#x1c;�AL��&#x1e;&#x1a;���&#x14;��2i�&#xd;
i�sgZ�F@ΞS�&#x2;�.C�&#x11;&#x10;�Q�u(@��R�T����U���[&#x15;�^�Y2�&#x1f;p��&#x5;�9&#xd;
�w&#x1e;*&#x16;��9�*h���#Q��-&#x16;�&#x0;%��|�9]l&#x5;$)S�_&#x3;�j&#x1a;&#x1d;��&#xe;;&#x7f;~$�:czź�� �Q�&#x1e;�i&#x6;���b��%���D(���&quot;�Egm�&gt;^Z&#x14;�&#x7;Ջ��cFz,�~�&apos;?�xW6�8&#x18;�[BO&#x1c;*)�aԑ.+�[&#x19;����X&#x7f;�	���E&apos;���`�U�&#x1d;ǡ�J�ƶ&#xc;&#x14;�䮍&#xb;fp�-���;�&#xf;;���x\�&#x16;��������T�o�s�&#xe;&#xc;[�&#x3;�z���ܽ�.�&#x17;��`4�nE&#x4;�,���5�ڑ%&#x7f;6�&quot;��g�Yڸ~9%��F���N��:���eN�n�Dӄ�^/&quot;�¼��̷ú&#x13;�m�6d��&#xb;0�&#xb;�&#x1c;\l�0뼡&#x1b;͛ұ���W&lt;�&#x7fe;2+���p�ޣG��?�����������&#x1;ދ�ȥ�h.���عr��If�[&#xe;&#x1e;&gt;z&#x1f;\y}/~��&#x3;_�_^l3?&#x9b;L���D�:�}�#�jjĶ&#x3;�r�YTw&#x1a;7��`�&#x17;�&#x17;�_7&#x1d;i?&#x12;�&#xc;�^cV�yOJ���&#x7f;r&amp;��~p&#x6;&#xe;��&#x7;g&#x1e;6�]30�^�0����w��ÔԜyϏ������,����A�n�5��T&#x7;���&amp;&#x1c;&#x17;�&#x7f;�&#x4;�x&apos;�.��/�����{e��{���&#x12;e&#x14;�&amp;7F�]��ň&#x1;���Y?&lt;&#x10;.��(|&#x7;�ٸ&#x3;�9&#xd;
/{)|$�K�e�����&#x1c;z��P�&#x1a;�&#x14;�G&#x1c;`cw� L�&#x11;�&#x10;_�&#xb;N&#x1e;��(|e0m�i��ѱN&lt;�{`�g�[�&#x16;&#x1f;k���&#x1d;�e�}�&#x1a;7����/j4�ŭ�����&gt;��}&#xd;u�1�Z��O���M(l����&#x16;&#xd;
[(l��5���&#xf;&#x1c;91&#x7f;��|?�&#x1a;&#x7;��&lt;��00]f&#x1d;&#x16;w�ݦ�1��$���fL|7{l�&#x1b;n�&apos;&#x19;�O�&#x1a;)b9L&#x11;^q~r[	��_&#x5fe;&#x7;�&amp;w5v&#x15;N�&#x6;���VNŲɭ��&lt;&amp;�&#x1e;NdS�[W@�x�d��d&#x1e;u(e����o�mVc{rA4-	&quot;�w&#xb;���PP��&#x1c;�&apos;A͘ڏ����g��crvw�ڣ�,t�F9j��,�q����&amp;�h�������&#x17;ۉn�=v����hF�|5���-��&#x1e;�����0Wu�&#x1;�F��m+�i���&#x4;��R�u5�%P⩮G��&#x1a;��.&apos;�ki4`&#xe;g:K_A�mv�^�r&#x6;����&#x0;���qs|j�&#xb;�$��m��oV��T��9S�ҁ���&quot;��`&#x16;&#x19;�&#x0;�S�ً^}x͡}���A���^3�n��0�w&#x1a;3�Ih&apos;&#x17;B�&#x7f;���%���$�x�&#x5cc;�z�&#x1d;Q�&#xe;=&lt;Q���&gt;G�9&#x18;�*����K��@�&#x12;I&#x13;��&#x19;2j��l�7����}���&#x7f;���}i&#x15;8Ǻ+9��,�׃&#x1e;2+v��7��|���G�,�:4&#x1f;j� &#xc;�dh���R��q�&#xc;&#x11;��&#x1;fW�)���v&#xc;E3�6����ؿ���iۖ5&#x17;;�^ZSg)&#xc;v&#x1a;�#�&#x7;SV&#x18;{F�b��(I�.�&#x74b;�����&#x1d;ѕ��&#x1c;�#�&#x6;�?Ը#:&#x1c;&#x15;H&gt;{�r|M��XD�:����$�&#x7;�l��~�ķFG�q_�{S�E=����q~�S�!z�;��v.�˷8L6&quot;l4���&#x10;����&#x11;��C_�p4%�KV&#x6;&#xd;����&amp;]��&gt;�so�b�-�A�#6]�{�n�wx�&#x1d;�Sٱ�sǒ~::�=:�&#xf;�g�n�@g�_��&#x17;����jZpQ�^N߂�K�&#x5;&#x17;��&#xb;..	&#xb;.^���/&#xf;&#x16;\$Z����ϻ^&apos;\N&#x16;��G��j�ͭ��&#x1b;�0ck�i/%��r�Z,�Xυ&#x19;u9�&#x15;e&quot;�Hi�!��oSմI@��P&#x1d;&amp;ٌA&#xb;��k�&#x6;���փǿ&#x13;*��r�&#x13;Ӳ�W3&#x6;�_`���q�Z&#xd;��&#xd;
�ޠ��Q�&apos;�Q&#x15;�k&#x5;��&#x15;N,�&#x1a;��Zf&#x0;C=��&apos;��G/�89�?@�&#x1e;9{�쑳G�&#x1e;9{�쑳GξH^�reL&#x19;g�����s&#xd;
���&#x3;�B�&#x1e;9{��&apos;�����!g��=�$׃�&#x7f;��ٿT��_&#x12;8�&apos;&#x4;�$r�k���Z�=U��/�~&#x5;�*8{��&#x1c;5��&#xc;�&#x6;�&#x6;J&#x0;�,S��]�d��|�B�~�8�G&#x7f;�&#x1f;���_F�~&lt;��[���B�&#x1e;9{�쑳G�~�9�t���=��Hگ�B{��&#x1c;�W�j9&gt;�Y�C\G7�I��+���Q�&lt;U��M�D��9E�S�&#x1a;�}��T$푴G�~&#x12;H�Z�&#x1e;��Hگ�B�:�r�H��e��b���(��&#x17;?��շ�~[�]���}K���&#xc;�K�F&lt;�[PE&#x19;�1&#x1c;? �b��J5&#x16;��t���&gt;��&#x15;\y�Y��&#x5;�G��&#x15;BU]%6�&lt;B�&#x0;Z[�&#xc;&#x2;�D&#x16;�J��CCA&lt;�ܷ?�[挋�&#x7f;u|T�Yd��G&amp;&#x1f;�|d�q���&#x13;�H&#x13;nT�p���ؠ;&#x13;�&#x1d;��W?���&apos;&amp;&#x14;�&#x15;%B06ĤĆ(Aʱ!���!�4��]��\&#x12;&#x1b;B&#x19;&#x19;&#x1b;B&#x1f;��&#x10;&#x1b;B�&gt;�&#x10;&#x1b;�&#x12;2�&#xd;!�&#x8;�!� �=�E��=���X&#x12;��&#x10;&quot;^&#x1a;&#x1b;B&#xe;&#x11;B&#x1e;T�U&#x1e;� ��ucC�xil�*H.6D�]�!j�⩆&#x15;Ԉ,\^A�cCȳ Ć�Gǆ�Cd��vl�j�&lt;6�&lt;&#xb;Bl&#x8;I��cCT&lt;V&gt;6D&#x5;$&#x1f;&#x1b;&quot;�XCbCT@�!�&#x10;!6D�Q&#xd;�&#xd;Q��ǆ��&#xc;bCd&#x18;gHl�*L&gt;6��&#x5;5(6�Bl�J�&#x10;&#x1b;���&#x11;&#x1b;�:�|l�&#x1;jXl�J�&#x10;&#x1b;�&#x12;%Ć&#x10;P�cC�&#x13;�Ɔ�d�!tIl&#x8;&#x1d;cCLwl��&#x1f;��j5�5�&#xd;�h&lt;0&#x2;U!L	&quot;&#x1;\sH$a&#x10;�S�&#x17;Q�3&#x3;&#x17;ծ�S���O����ͦƥv�o&#xc;|�j&#x17;�]�v�څj&#x17;�]�v�څj�&#x6;���;e��;e��;���_&#x7f;&#x15;&#x3;���5m�%ѬV-n&#x15;&#x13;Eq&#xb;ŭ	&#x16;�j&#x7;&gt;&#x17;�(n���5,�y&#x5;D&quot;n&#xd;&#xb;|~&#x5;ĭ��ϫ02qKW&#xd;
(��UBIŭ&#x15;�e�[�e�V&#x19;%&#x13;�J(��UBIŭ&#x18;U_�ҕ�Օ�[����Q܊��&#x7f;��W&apos;2��h��S��m&#x11;�&gt;���&#x16;#��&#x4;Q&#x12;���l&#x13;�!ۓ���&#xf;?��֘t��1�&#xd;
&#xd;
[(l����&#x16;&#xd;
[(l�~l�&#x1f;[qc&quot;&#x18;&#x5;���R�&lt;&#x5;zfM�0�p&#x1c;⚪E��t�?����&#x1c;c|AT�9ͪ&#x17;D%&#x1a;Z�~l(=�~l��&#x1f;[�f&#xf;�c����y�E�z9}&#xb;.^)/�x����&#x15;a�Ň��M&#xc;���ۯq�&#x5;N`h��&#x2;N��C�nq&#x15;�}�1u�&#x19;�9eAT~�o^� *��2K	\&#x2;YS&#x8;UT�0Յ�|�r�&#x1e;XL����8Cʗ���/=������gА��=����#o��=��hHAV&#x10;&#xd;)�f�&#x1a;�|&#xd;j�&#x1f;-k�&#x6;�&#x8;�&#x15;�8:g�o��&#x383;)�G�R-�#¡�&#x1f;�C9~�҇�&#x11;&#xd;)hH�����%�lHQ�&#x1a;R��;R��FbHQG&#x1a;R��D&#x5;C&#xd;
�&gt;�`H��&#xc;&#xc;)r�`H���&#x16;����&#xb;�S�Vא&quot;⥆&#x14;9D�YT�U5|&#x16;yC���&#x1a;R� 9CJ�]冔���x�a&#x5;5&quot;&#xb;�WPyC�&lt;&#xb;�!%��C&#xc;)r��^��Y/%x�!E�&#x5;��&quot;Ir�!���&#xd;
HސBG&#x1b;R* yC�&#x1c;&quot;&#x18;R�O&#x7f;�!�&#xd;
�7�Tc&#x6;��&#xc;3l��*Lސ�bt&#x18;�&#xc;1�T�&#x4;CJ	UÐR�rސR��&#x1b;R*Q�!�&#x12;%&#x18;R&#x4;�hC�&#x0;�m�&apos;1��Y��nk&#x14;&#xd;)�mHy�ۗ&amp;Ґ�=�&#x4;�k&#x12;N}�P�Љ�&gt;�-K��c���Pܚ$C&#xd;
n�6N]��hHAa&#xb;�-&#x14;�P�Ba&#xb;�-4��!��2�֖cSfHq�gH�s�SϐB�T&#x15;&#xd;)(=�!e&#x12;&#xc;)��=4��!&#x5;w&#x0;]�&#x5;&#x17;�ʆ�KeC�%���&#xd;a&#x7;P4���!�֦FSeH&#x19;��R���&#x3;�&#x1d;G�&#xd;
	4G#T�=��I�fQݣ��a6���&#x4;q������[�&quot;g?&amp;�����G�&#x1e;9{�쑳G�&#x1e;9{�쑳/�W��jL��&lt;��`��&#x1a;&#x4;�&#x1738;��р9��l�8{hT��ٛs�^��&#x7;���=r���O&#x2;g_��C�&#x1e;9�u��k�������%�^8�| p(����?&#x7f;�e��ל�w��Y��&#x13;�0UB)��1l�x��;��B��O&#x17;g�{�����;_&#x5;g����h&#x16;&apos;fTԔ�&#x8;�&#xe;&#x14;ha5渎&#xd;
�����&apos;�����?��ǿ���x8�K���B�&#x1e;9{�쑳G�~�9�t���=��Hگ�B{Cs�W��Π�N܃KuF��pLӴ&#x14;ߝ��&#xf;���c#�&#xd;kNSj��&#x11;&#x12;I{$푴�&#x8;ҾV���=���оN��&gt;������&#xf;�ˑ&#x1f;��I��&gt;򵫏��&#x16;vW��u�&#x12;q&lt;,�Ϩ��&#x18;&#x2;�&#x13;~��[��[��oB&#x15;u\�{&#x16;�.&#x16;��g���,��Z��&#x3;NT�v	�&#x15;��&amp;4�&lt;�&#x2;S�=�&#x6;�����&#x7f;����&#x1f;���1��������#��,&gt;��W/��+��G&#x12;&#x1f;w�&#x19;�n9�5��r��&#x11;RC&#x12;&#x1f;I|$�&apos;����r�ğD&#x12;&#x7f;c��By��&#x17;ʻ� ���&#x1d;��=�&gt;�-�&#x13;��&#x1a;|�N&#x14;+Kq&#x8;&#xd;���9Ceʔq����&#x15;�-��L��&#x2;����&#x11;&#xd;
&#x1f;&#xc;�&#x8;_b8�����z&#x1e;r��&#x17;���_y&#x13;���&#x11;��&#x1e;&#x1f;q�&#x10;����#o��=����O9o���Fe&#x5;����7�:&#x2;LD�&#xe;E�يjQ���G��lǄ&#x1e;�Y��&#x1acc;+*�&#x6;&#x14;�G7M&#xb;GrM�&quot;)�#�&lt;=��?},��&#xe;!;0:�Dg����&#xb;�dѕ&#xd;�ﬄ~&#x14;�&quot;+�&#x18;�&#x11;^&#x1f;�W���I&#x1c;G1�c&#x12;�QYm&#x1c;G�c�&#x11;iY����Gpu&#x4;C&#x14;����Y&#x15;�3�rT&#xe;U�E&#x1b;(P��Q��@S&#x15;p�m��l��V`!�3q\Γ���&#x1f;=�\Θ���&#x18;&#x1f;��G.&#x7;�&#x1c;�r��A.&#x7;�&#x1c;�r��A.�s9o&#x7f;�&#xb;�}MWW)a�&#x2;&#x15;XS9&#x14;��&#x10;&#x5cc;���t`&#x18;1�k]�R^���Z��&#x8;k]&gt;��rk]6��h�5X��dO&#x15;ٳ=��kG�&#x12;�&#x16;A����+��J�M&#x16;,U�E��)#��GN3.%&#x7f;��&#x1f;��Fpv�����FA��_���F&#x11;xnaA&#xd;
�t�.c&#x3;)V-&#x3;�&#xc;H�&apos;j���V&#x19;+@�3�&#x1f;&#x1e;		O&#xf;��3�/ɔ&#x8;i�&#x16;�&#x10;)�&#x17;�&#x2;^-��|.{r|�8N��Dwm�����b	�#rّ�&#x7;I�&#xb;�Q�V���k&gt;�KN&#x1;OG��TttAI�&#x1c;ZPC�&#x0;�?&lt;&#xb;&#x6;t8�&#x1a;e�k�2&#x1c;&quot;���e�K	&gt;_�&#xf;�ó&#x0;�}�!I�J1&#xf;-��z�sgZ�F@ΞS�&#x2;�*C�&#x11;&#x10;�Q�u(4Cf{)X*~T�*&#xd;w*V�&#x12;&#x6;nUj&#x12;ʘ%��q�&#x18;s&#x14;��&lt;T,&#x1c;M�&#xd;
(�&gt;ϗG���[,�&#x1;Jx��js��&#xd;
HR�f�&#x6;��4ZB��&#x6;�a�ϏD�6,)&#xd;
r&#x1f;��1�f��.��\�y�FMt&#x19;�&gt;&#x15;�D�I�&#x19;����V�Y&#x19;����X&#x7f;�	���E	&#x7f;&gt;&#x18;���{+&#x2;�Ɂ-�����ϩ��&#x16;���A}��mC�x�&#x0;S�p��Ŷ&#xb;�NA����{k���Ε��N2{�r������U,Tv&#x1d;]&#xb;4�&#x11;&#xe;U!&#x12;���&#x2;�&#x12;Ϧ0���&#x7;�;&#x14;�&amp;N����=��96q�/Q�Bq&#xb;�-&#x14;�P�Bq&#xb;�-&#x14;�P�Bqk&#x3;�P�X&#xe;�v�&#x1c;B�&#x10;B�I!�&#x1a;�[�.n}zc�[%j�m�[��D&#x5;qː&gt;� nUB&#x6;�&#x1c;&quot;�[U��� BF�&#x8;F=٨&apos;�K�-9D�l��*�l&#xc;��&#x1f;-n�x��U&#x5;ɉ[�w��[)�&#x19;���S&#x15;�&#x7f;IAI�&#x1c;ZPC��&#x17;��Y&#x10;ĭ&#x14;�&#x16;�̼�U���Lu��Y���&#xb;�&#x2;WE.&#x4;�K��p�+�B&#x1b;�qUa�&quot;W�&#x19;�rUa�2W&#x5;FйR�V�M�:W&#x15;&amp;�sUc&#x6;:W�-K�0s&#x14;&amp;�s�ܫ��&#x4;��&#x12;%�\%T&#xd;��:��U���\�(A�D	:��&#x1a;�s&#xd;�Ye��\TQ$:�#ѹtԹ�[�&#x1a;C��5ѹj�&#x1e;F�k�6���O}���Q�&#x1a;���4n��&#x1a;&#x17;j\�q�ƅ&#x1a;&#x17;j\��&gt;n�_�M�i��5���:���`&#x1e;a�&#x12;m�ʙ�&#x1b;���`�6�WƷ��Q{&#x13;}&#x3;7�G&#x15;&#x1a;7џ�M�k5{��&gt;n���k/j���[{�l�X�l�X��`,��K����o�o�.S&#x1d;/ f`@��m&#x13;*��&#x10;]uM&#xe;&#x1f;���u�-m�6�&#x7f;�c���&amp;�&amp;5&#x19;�&#x15;�خ�&#x0;�9ĥ�F&#x2;�4&#xd;�uL����O&#x12;g�{����&#x7f;&#x1;9{�쑳G�&#x1e;9{�쑳G�&#x1e;9�&quot;yUk�����-g�������u��=r���O&#x2;g_��C�&#x1e;9{�&#xc;���&#xc;&#x14;9�5��k�o4U��&#x18;v�Z&#x5;g&#x1f;h�k��&#x7;&#x1f;���?6d�&#xe;&#x1c;☎�(�u�&#x13;����W��{\g?.�����#g��=r���#g��=r����:{]���٫��٫��&#x1e;9{��&apos;���u���O&quot;g�A��&#x7f;��%�^8�| p(����&#xb;����:p���&#x19;.s`B�&#x7;0�0�u��BT��U�i&amp;������&#x7f;������&#x0;շL���C&#xb;&#xa00;7&#x3;�&#x1a;&#x1;&#xd;&lt;�W&#x2;�A�~�8�/���_B�~\��W��G�&#x1e;9{�쑳G�&#x1e;9{�쑳��&#xe;�ͱ�Ck�c#g��=r���#g��=r�9��E���&#xb;��&#xf;&#x4;&#xe;�8��?���:p�0�V&#x2;&#xf;f՜�&#x1e;���&#x13;�W}�[�jQǴ��M&#x17;g�s&#x7fe;�{�غ�&#x4;z�&#x11;��;�&#x6;�IlW��&#x13;(��3��\&#x1b;9���ی���I�?�q���G�&#x1e;y{�푷G�&#x1e;�6#+�q�70?��5�&#x18;�y��6��ƈ�lI��&#x1f;�Y&#x1f;��&#x10;�Y�&gt;�&#x10;��&#x12;2��,�&#x8;q�� ��&quot;dtp�&#x14;?&quot;6� n����m�C�p��w��#N�n�f&#x11;/��\&#x5;��m���&lt;ns�\V&lt;հ�&#x1a;��RA&#x19;u�6�xi��&#x14;b&#xe;	�,���y��Ҫ&#x1b;�Y�KC6K�&#x1c;&#x1e;�Y��&#x10;��&#x2;��&#x5ec;KCc&#xb;�+ �h��&#x17;S���h�&#x19;��&#x0;�5Wa�њ�1�h�)F&#x1b;&#x16;��&#xd;
��ּ��&#xd;
1��h͕(!Zs	U#Zsu��h�ը|��&#x1;����h͕(!Z��&#x1a;&#x1d;����,Z�&#x1e;��R�fS&#x12;�Y�h��&#x1d;�y&#xc;��5��\�&#x1;���&#x4;9R&gt;��g��&#x2;&#xd;
[c&#x12;����&#x14;T�P�Be&#xb;�-T�P�BG&#xd;
:R6�#E�Mu|�&#x14;:g��&#x1c;)�DG&#xd;
j��HAG&#xd;
:RБ�+.�+.^+��x����5a���&lt;�њ�#Z��3��.�}� &#x14;�%�o� ܁W�j&#x1a;��`�&#x1c;)���&#x1b;WБ�)���:4�\&#xd;�&#x5;0&#x1c;h\}&#xe;&#xd;��:̰&#x14;�󐳟8G�o��g�BGʸ��/�#&#x5;y{�푷G�&#x1e;y{��ё�� :R60?��rd̯�#c~]����&#xb;�Б��&#x1c;)�&#x1a;�#��7�&#x1;�8RJ��#E��HQ3�Hq9�đ��t���&#x13;&#x15;&#x1c;)��a&#x4;GJ%d�H�C&#x4;GJ&#x15;$��_��^���2^�H&#x11;�RG�&#x1c;&quot;&#x18;-��*7Z���H&#x11;�RGJ&#x15;$�H���ܑR3�&#x15;O5��j;R�d!�H�gAp���&#x1d;)r��^�v�T��&#x14;y&#x16;&#x4;G�$�᎔���;R* yGJ&#xd;
��8R* yG�&#x1c;&quot;&#x18;R�O����&#xd;)U��!�&#x1a;30�d&#x1f;p���&#x1b;R�0yCJ���B�&amp;&#x18;R*Q�!���aH�N9oH&#x19;��&#x19;R*Q�!�&#x12;%&#x18;R&#x4;�hCJ9Q�!E�d�&#x14;]bH�hH�nC�k&#x1f;[��jkbH1u���&#x17;&#x10;30��l;2�x&#xe;�U��P�M�bX��&#x13;���o���gQ�&#x1a;���&#x12;�[(n����&#x16;�[(n����&#x16;�[(nE�#�u5�sJ&lt;��&#x8;U\�8���u-�&#x6;��LgS(n�X&#x16;�^,�[/&#xd;
�֧&#x7f;��Q�Bqkʶ[+Ҕoo�5sx�2qk�vk����5l��*HYD���Z�&#x18;6T�&#x1a;��Z�&#x4;W�ljo�����&#x14;����D�*A���CŭQ��x�a&#x5;5&quot;&#xb;�!n&#x15;�&#x1b;��[ŏTR/%��&#xd;��C����[�,�ĭ|���-��dEqK��YQ����V&#x14;�$��&#x15;[��vr�#n&#x15;d�&#xd;
q�(���-�m�[Ŕ��V&#x11;%&#x17;�����ŭ&#x2;�B�r.O��&#x12;��[�.&#x11;�(�ĭo���˓)n&#x5;��*&#xe;Q��&#x12;j�&#x1a;q&#x1d;&#x1a;&#x10;�t���g&#x7;n���ĉ[/��O���Q�&#x1a;���&#xd;&#x14;�P�Bq&#xb;�-&#x14;�P�Bq&#xb;�-&#x14;�P܊fG0�5]]��y&#xd;
T`M�PP�C\S��&#x1a;�&#xe;&#xc;#�P�z�,n�^&#x16;�^&#x17;ĭ���&amp;:�Pܚ&#x16;qk�dU�Q�-�1&lt;QA�&#x1a;`+ŭJ�@ܒC&#x4;q�&#xd;
�&#x13;&#x11;D�h&#x11;!��vn�x��%�&#x8;�M�]嚍QC�ɋ[&quot;^*nUAr�V�]��V�\V&lt;հ���ܪ����%ς n&#x19;��-9DV/k�[)��sK�K�-I���-y���U&#x1;ɋ[)d�s�&#x2;�&#x17;��&#x10;A��&gt;�a�V&#x15;&amp;/nUc&#x6;�V�&#x1;&#xf;&#x13;��0yq+�h�0q�&#x12;%�[%T&#xd;q�:弸U�ʋ[�(AܪD	▀&#x1a;-n&#xd;�C�-G�)n�(nM����&#x7f;|s&quot;�[�	&#x15;��&#x1e;qXD�S�%L��i5�S|O7l���5I����3O��56]�&quot;�&#x12;Ba&#xb;�-&#x14;�P�Ba&#xb;�-&#xc;%����15j)&lt;S&#x15;JHs��&#x12;2�4�^(!@&#x1a;&#x18;J&#x8;�g&#xc;%4	��j5{&#x18;J&#x8;C	ႋu	%T^p�Zy��k&#x82;�o&#x8;&#xb;.0��&#x1a;�&#x12;��!OU(�1���	%�z&#x6;��9љ�&#x3;&#x1e;&#x6;�L����e�&#x1a;����O�!�?���� q?&amp;��E4� o��=����#o��=&#x1a;R�&#x15;DC�&#x6;�G^(�#/���&#x17;&#x4;~��7�BC&#xd;
&#x1a;R��!eMB	&#x15;��y[�&#x14;}x��!E�&gt;�`H��&#xc;&#xc;)r�`H���&#x16;����&#xb;���4��x�!E&#xe;&#x11;|&#x16;�w��,��4��x�!�&#xd;
�3�T�UnH��ˊ�&#x1a;VP�&#xd;)u��7�ȳ &#x18;Rt��B0��!�zY;�P5^nH�gA0�H�&#x1c;nH�x��!�&#x2;�7��&#xd;)&#x15;��!E&#xe;&#x11;&#xc;)٧_�OyCJ&#x15;&amp;oH��&#xc;&#xc;)�&#x7;\l��*Lސ�a4����`H�D	��&#x12;��!�:�!�&#x1a;�7�T�&#x4;CJ%J0�&#x8;�ц�&#x1;&lt;� ���T&#xc;%���h���ŷ&amp;Ґ�x�Pu�&amp;�噄�T!��Qb�&#x1c;�Q�u�&#x12;��5I��g��YԵƦk}&#xb;&#xd;)(l����&#x16;&#xd;
[(l����&#x14;4��!E��q&#x1a;Rt��!E�ѐ��3&#x1a;RА��&#x14;4����܂���&#xb;.�//�x^Xp��&#x2;&#xd;)kdH��!O�!��V��&amp;BJ�q�&#xb;&#x18;Q=� T1�&#x8;�&#x10;j&#x4;�&#x1b;��&#x4;�����&#x19;R~���~��/#q?&#x1e;����&#x11;�g��G�&#x1e;y{�푷__�&gt;��!q��&#x14;�&#x5;ё2&amp;�D74&#x7;&#x6;&#x13;&#x1e;��&#x0;�&amp;�&#x8;suF��pLӴ&#x14;ߝF���%�D8�&#x10;$p(G�&lt;����&lt;1��m0&#xd;�D&#xc;����E�&amp;ϢR;fJq��Ģ�&#x0;a�V��_bQQFZT��&#xd;
&#x16;&#x15;S�0�E�&#x12;&#x12;&#x16;�Y&#x17;�$oQ���&#x3;�+u�&#x0;Y��&#x16;&#x15;&#x11;/���!�8���4�&#x12;&#x1e;&#x11;&#x1e;~`Q��P���T&#x7;�/FO&#x1f;&#x11;�c`Q��ˊ�&#x1a;VP�B�\VA�-*�,&#x8;&#x16;&#x15;s�EE&#xe;����&#x16;�&#x14;o&#xd;/ˇ�!�%&#x16;�b�u�&#x7f;AnQ��)XT* y�JV&#x5cb;���G�&#xd;
�7�T`&#x4;�J&#x16;&#x18;��B�]*U��K�&#x1a;3p�d��#0�R���]*Y&#x15;ԕB&#x1b;+�T*Q�K����R�N9�R&#x19;�&#xd;
]��R�D	.�J��R&#x11;P�]*�D%.&#x15;&#x18;-�&#x12;��)q�h�R�n��K�&lt;��$�T|F&#x15;&#xf;&#x1e;&#x4;&#x1e;ʏ�&#x13;X��,�&quot;�	S:ǵ�g1T�&amp;ɥ��s����Х2&amp;���]O�K&#x5;�.T�P�B�&#xb;]*�.v�KeøT|�&#x558;&#xe;Wy��&#x11;��&#x6;q�ˉ�Z&#x1a;&#xd;�ÙΦͥ��ϥb�v���RA9&#x1a;]*&#x13;�R���K&#x5;]*�&#x8;�V���E&#x18;&#x17;�.��e��E���&#x1f;���W�K�.�&#x18;�mE�&#x11;�&#xd;
aJ�&#x13;�5�Dt!��&#x0;^5�&lt;3p�˶���&#x1f;\-��&#xd;
&#x12;_��@��F|S��*&#x16;a��&#x10;�&#x1b;��M�&#xe;n55y��/���?�cd�����&#x1e;�QA&quot;&#x1f;�|$��G&quot;&#x1f;�|t� M���ص�t�&#x14;&#x18;�(&#x6;�PP�C&#x19;Y:�l�05��&#x11;&#x17;5}�ɷʄɷʄɷ&#x4;����&#x1d;�Q�@&amp;�&#xd;&#x12;G�&#x1c;K&#x1c;&#x15;sx�2�ʰ8*���IeX&#x1c;�j�G�&#xc;P;�J���2M*���!2�E�8*)�v&#x1c;&#x15;&#x11;?̤2,�J�]��Tj�Q��B��j�Q��&#x5;�IeX&#x1c;�+jR�&#x1d;GE�&#x5;�I�~&#x1c;��ǒ�T��QI!��T@$&#x16;�aqT�O&#x7f;X&#x1c;�*�ġ24��&#x10;&#x17;KɡR�H&#x1c;*�&#x0; C&#x1c;*e�̡2@�w�HR�8T$(�C&#x5;P�&#x1e;H�P)�d&#xe;�&#x4;Uۡ�iNV��8*Z�8*&#x6;:T�ۡ�W���D�Q�ܧ��s�0_#�96qt�!4`�&#x2;�&#xc;���5y�����/�&quot;��6&amp;q�;�&apos;&#x1b;�[(n�����U+n�l�n����֘�&#x3;+��(�JTˉ�Zz&#xe;q&#x1d;� &amp;̛tE�T&#x13;.�&gt;u빲��\Y�zNP����&#x1b;�&apos;&#x1b;�]&#x13;%w�ޓ��ܕm�fK�o[��l�DqO6ܓmc��f�k����$�R���&#x6;ٓ�(�H���f%-�&#x0;��rW�#��]E�\�**�r���!�\W&lt;J�*�,��jl�VFU�]56dKP�!w�ٗ,��,K&quot;w&#x19;&#x12;�KG�k��G�xc&quot;7dc0as)ӈ�q&#xb;�s&#xc;&#x1e;��&#x3;�)���T��](wM����O��c�+۸䮗�˅r&#x17;�](w��u��]��B�&#xb;�.T�p�ի]��jץ��uIP�^��㓣v�����X�-�.��ޖ�E�&apos;*�[T�0��U	&#x19;�[r� nUAr&quot;�&#x8;&#x19;-&quot;��&#x14;�D�TܒC&#x4;ͦ��r�&amp;��#rّ��V&#x15;$&apos;nU�U.n��e�S&#xd;+�&#x11;Y(&#x15;Tm/����[T�&#x7f;	�&#x1c;&quot;���T�b�&#x1c;!&#x14;&#xe;�-y&#x16;&#x4;qK��pq����V&#x5;$/n��a^�&#xd;
H^ܒC&#x4;q+����[U���U�&#x19;�[���U�ɋ[&#x19;&#x6;�ACĭJ� n�P5ĭ���V5*/ne(])6�yq�&#x12;%�[&#x2;j��UNT*n9T&quot;nQ�6��ĭ����&#x13;)n��oSմI@��P�&#x5;(�+]]sMߠ��&#x1e;�[&#x13;&apos;n}�����&#x5;&#x14;��$n}&#x1;�-&#x14;�P�Bq&#xb;�-&#x14;�P�Bq&#xb;�-&#x14;��&#x7f;&#x1a;�|&#xd;j��S��&#x6;�&#x8;��h�&#xb;�&#x1c;��M�&#x7;S(n��%&#x1c;J�-8�&#x13;�~�K�Q!�[oO�*2�5 �Q�UC�&#x1a;�Q�1&lt;QA�2�&#xf;#�[����%�&#x8;�V&#x15;$&apos;&quot;���&quot;B���Q����[r���T�U��&#x18;54���%��V&#x15;$&apos;nU�U.n��e�S&#xd;+��&#x1b;&#x15;��B^ܒgA&#x10;�RȰ�&#xd;
�&#x10;Y���Qa5^.nɳ �[�$��[&#x15;��&#x17;�* yq+�&#xc;snU@��&#x1c;&quot;�[٧?Lܪ��ŭj�@��&gt;�a�V&#x15;&amp;/ne&#x18;�,4&#x17;��U�&#x12;ĭ&#x1;J��b��U�F*nU���V%J&#x10;�*Q��%�F�[�De�nȜ[��&#xd;
ѹ5���g���DnTh�&gt;���&#x12;ݷ&#xc;B�&#x1f;&quot;��&#x1a;�;0&#xf;����~���ĉ[O~��&gt;�&#xc;�[c&#x12;��Cq&#xb;�-&#x14;�P�Bq&#xb;�-&#x14;�P�Bq&#xb;ŭhv&#x4;c_��UJ��@&#x5;�T&#xe;&#x5;�8�5U�����0b&#xd;
ŭW�έW�έW&#x5;��/�Û(n��5m�-��G�&#x18;�%,%:m�&#x12;b&#x14;.���Q�r�aέ��&#x15;+R�]/k;��Y�mKX߹u�F���J�&#x12;J�h�m	˘5ܖ�)&#x14;�|[�&quot;J�-a���m	K)K�%,���&#x12;&#x16;Q�m	�(���&#x11;�r�pe��ܹ��s&#xb;ŭh��&#x1b;_}s&quot;�-���	&#xc;��Z�	ut�[\%�g;�n3C5&#x1d;&#x14;����uۼ\���W��O�E]kL��ߌO���M(l����&#x16;&#xd;
[(l��5���&#xf;&#x1c;91&#x7f;��|?�&#x1a;&#x7;��&lt;��00]f&#x1d;&#x16;w�ݦ�1��$���fL|7{l�&#x1b;n�&apos;&#x19;�O�&#x1a;)b9L&#x11;^q~r[	��_&#x5fe;&#x7;�&amp;w5v&#x15;N�&#x6;���VNŲɭ��&lt;&amp;�&#x1e;NdS�[W@�x�d��d&#x1e;u(e����o�mVc{rA4-	&quot;�w&#xb;���PP��&#x1c;�&apos;A͘ڏ����g��crvw�ڣ�,t�F9j��,�q����&amp;�h�������&#x17;ۉn�=v����hF�|5���-&#x1b;&#x6;�&#x1c;�6�&#x2;�\�%&#x6;�&#x1a;=O�--����&#x6;&#x2;O���|�+&#x8;��nߋZΠ��&#x5;ƻ9&gt;�ԅJ���C�7��m�\圩i�@��T&#x11;`k0��o&#x0;����E�&gt;��о��� T�n��I7��(�wcF8	��B&#x8;�O&#x13;z���ӗ��&#x1c;O���\/�#jߡ�&apos;�uR��9�ٳ���x�R�0P�BF�a��9CF�P����}�{&#x7ff;�о��?�/�&#x2;�Xw%�+A��bG�y�JϷ?8&#x7f;�ɒ�C�6&#xc;��K�&#x6;=�.�I&#x1a;w�&#x10;q&#x1d;&#x1e;`vŘB�Ll�P4#j�o�Ϗ�K�o��mYs�#�5u��`��;&#x2;y0e��g�+f�����r۽��o���&#x11;]���q9Bm`�C�;��Q�䳗*��T��E䪳��|M�|���&#xf;�GO|kt�&#x1d;�E�7�[ԓ���&#x1f;�w9�&#x1f;�ǼS|m�ҹ|��d#�F��&#xe;&#xc;���N&#x18;&#x1e;��9�E&#xf;GS&#x12;�de�0&#xb;=�l�&#x5;&#x1e;[�C:��*�ۢ&#x1b;$&lt;bӅ���&amp;y��ڑ;�&#x1d;�9w,駣�ۣ���y6�F&#xd;t���^~�9&#xa62e;�&#x5;&#x17;&#x1b;t��&#x17;�&#xb;.^,/�xQXp��_�o��h�;�&#x1f;&gt;�z�p9Yl&#x13;&#x1f;�&amp;�)6�&quot;2o�&#x8c;�A���|~ʍk�Lc=&#x17;f���W���&quot;��AB&#xf;&#x2;CU&#x1c;�2M%��5�:4 ��r�CC&#x10;��z��wBE\Z�ubZV�j�@�&#xb;l�7�zl����&amp;���}&#x13;&#xd;
�&#x18;&gt;&#x3;��5�tS#�bp��5�U-��&#x4;g&#x7f;&#x3;����-��g�����&#xf;&#x1f;�rJӻ��(�o��&#x16;P��+��&#x14;�q,&apos;`���iz[5&#x15;M��v+��U�&#x0;����d�q&#x7fe;&#x3;�Tl~�q�߬����=�&#x17;&#x17;���BSs�靂q&gt;�S��&apos;��G�&#x1e;9{�쑳__�&gt;��mD�~����S1�w��F5�֕&#x13;�C�&#x10;&lt;&#x8;�s��_W���&#x2;&#x12;�C&#xf;/���y�?ڂ���c�s)�7n�&#x11;&#x6;�0l�a&#x12;L`D&#x8;&#x3;7�r` �4b*�&#xf;&#x1d;�Ϙ�5�&#xf;.�&#x1e;9�@J;�1m�;ކ.f&#xb;|4.�&#x5ca;�&#x1c;��d��0&#x7f;(ùk�\�=��&#x19;cS�&#x8;�GJˌf`ևLY��&#x3;&amp;&#x1e;q&#x3;&#x13;n��EJ&quot;\�&#x4;_!T���y�n�~&#x3;\~v�J^&#x1f;��o,�&#x0;&#x1f;}�љ�&#x1c;~k7&#x1a;+�H�P���F��&#x1f;��U��qּ����&#xf;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upload-Time" elementType="Header">
                  <stringProp name="Header.name">Upload-Time</stringProp>
                  <stringProp name="Header.value">1730988317180</stringProp>
                </elementProp>
                <elementProp name="APIKey" elementType="Header">
                  <stringProp name="Header.name">APIKey</stringProp>
                  <stringProp name="Header.value">bc3902d8132f43e3ae086a009979fa88-53cb834e-6960-410e-b9c7-ebbc1d63726d-7072,faab4ead691e451eb230afc98a28e0f2-4089b390-5e4a-4a54-ac5c-6be4f2ea9321-7247</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Expect" elementType="Header">
                  <stringProp name="Header.name">Expect</stringProp>
                  <stringProp name="Header.value">100-continue</stringProp>
                </elementProp>
                <elementProp name="SDK-Version" elementType="Header">
                  <stringProp name="Header.name">SDK-Version</stringProp>
                  <stringProp name="Header.value">EVT-Windows-C++-ECS-3.8.32.1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-209" enabled="true">
            <stringProp name="HTTPSampler.domain">config.edge.skype.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/config/v1/Edge/130.0.2849.68</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientId</stringProp>
                  <stringProp name="Argument.value">2098472070056151860</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="agents" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">agents</stringProp>
                  <stringProp name="Argument.value">EdgeConfig,EdgeFirstRunConfig</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="osname" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">osname</stringProp>
                  <stringProp name="Argument.value">win</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client</stringProp>
                  <stringProp name="Argument.value">edge</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">channel</stringProp>
                  <stringProp name="Argument.value">stable</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scpfre" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scpfre</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="osarch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">osarch</stringProp>
                  <stringProp name="Argument.value">x86_64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="osver" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">osver</stringProp>
                  <stringProp name="Argument.value">10.0.22631</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="wu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">wu</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="devicefamily" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">devicefamily</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="uma" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uma</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionid</stringProp>
                  <stringProp name="Argument.value">42</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tenantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantId</stringProp>
                  <stringProp name="Argument.value">fdb97aed-2488-4767-b0ea-a607e72006f1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mngd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mngd</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="installdate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">installdate</stringProp>
                  <stringProp name="Argument.value">1727962760</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="edu" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">edu</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bphint" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bphint</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="soobedate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">soobedate</stringProp>
                  <stringProp name="Argument.value">1727962619</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fg</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https://autologon.microsoftazuread-sso.com/hbfuller.com/winauth/</stringProp>
              <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
              <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
              <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
            </elementProp>
          </collectionProp>
          <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
        </AuthManager>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
